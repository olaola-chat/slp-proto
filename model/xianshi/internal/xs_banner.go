// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

// XsBanner is the golang structure for table xs_banner.
type XsBanner struct {
	ID                 int32  `orm:"id,primary"           json:"id"`                   //
	AppID              int32  `orm:"app_id"               json:"app_id"`               //
	Type               string `orm:"type"                 json:"type"`                 // 默认web外部网页，app内部页
	Stype              string `orm:"stype"                json:"stype"`                // app、pc
	Position           string `orm:"position"             json:"position"`             // 位置
	Title              string `orm:"title"                json:"title"`                // 标题
	Icon               string `orm:"icon"                 json:"icon"`                 // banner图
	URL                string `orm:"url"                  json:"url"`                  // app：页面名称, web:完整url
	Data               string `orm:"data"                 json:"data"`                 // app：json序列化数据，web无用
	Ordering           int32  `orm:"ordering"             json:"ordering"`             // 排序，数值越大越靠前
	Deleted            int32  `orm:"deleted"              json:"deleted"`              // 是否已删除，1为删除
	BeginTime          int32  `orm:"begin_time"           json:"begin_time"`           // 开始时间
	EndTime            int32  `orm:"end_time"             json:"end_time"`             // 结束时间
	Dateline           int32  `orm:"dateline"             json:"dateline"`             // 创建时间
	Role               int32  `orm:"role"                 json:"role"`                 // 角色，0为所有人，1为大神可看，2为用户可看
	Cid                int32  `orm:"cid"                  json:"cid"`                  // 可看的分类id
	Duration           int32  `orm:"duration"             json:"duration"`             // 显示时长，app决定是否使用
	RoomType           string `orm:"room_type"            json:"room_type"`            // position为chatroom时使用 房间广告类型 对应xs_chatroom中的types 多个用逗号分隔
	RoomIDs            string `orm:"room_ids"             json:"room_ids"`             // 限定其可展示的房间,为空不限制,多个房间用逗号分隔
	SettlementChannel  string `orm:"settlement_channel"   json:"settlement_channel"`   // position为chatroom时使 用 对应xs_chatroom中的settlement_channel 多个用逗号分隔
	RoomFactoryType    string `orm:"room_factory_type"    json:"room_factory_type"`    // position为chatroom时使用 对应xs_chatroom中的room_factory_type 多个用逗号分隔
	IconType           uint32 `orm:"icon_type"            json:"icon_type"`            // banner图片类型，0为图片，1为h5链接
	Width              uint32 `orm:"width"                json:"width"`                // banner图宽度
	Height             uint32 `orm:"height"               json:"height"`               // banner图高度
	ShowClose          uint32 `orm:"show_close"           json:"show_close"`           // 是否可关闭，0为不可关闭，1为可关闭
	SubApp             int32  `orm:"sub_app"              json:"sub_app"`              // 子APP:  默认0 没有, 1 嗨歌
	VipLevel           uint32 `orm:"vip_level"            json:"vip_level"`            // vip等级过滤，小于该等级不展示
	ShowOutRoom        int32  `orm:"show_out_room"        json:"show_out_room"`        // 是否仅在房间外展示
	Property           string `orm:"property"             json:"property"`             // position为chatroom时使用, 可选值同xs_chatroom.property
	ChannelTag         string `orm:"channel_tag"          json:"channel_tag"`          // position=title_top对应的渠道tag
	VipLevelMax        uint32 `orm:"vip_level_max"        json:"vip_level_max"`        // vip等级上限过滤，大于该等级不展示
	ConsumeMin         uint32 `orm:"consume_min"          json:"consume_min"`          // 历史消费统计下限(单位:分)
	ConsumeMax         uint32 `orm:"consume_max"          json:"consume_max"`          // 历史消息统计上限(单位:分)
	CenterIcon         string `orm:"center_icon"          json:"center_icon"`          // 活动中心对应的大图标,横排时用
	ActivityCenterType string `orm:"activity_center_type" json:"activity_center_type"` // 活动中心类型,逗号分割 1:我的 2:活动 3:充值 4:节目 5:公告
	ShowInCenter       uint32 `orm:"show_in_center"       json:"show_in_center"`       // 0:既在对应position展示也在center展示, 1:只在活动中心展示
	WhitelistID        uint32 `orm:"whitelist_id"         json:"whitelist_id"`         // 是否使用白名单 0:不使用用户白名单 >0 表示白名单id
}
