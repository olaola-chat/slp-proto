// ============================================================================
// This is auto-generated by gf cli tool only once. Fill this file as you wish.
// ============================================================================

package dao

import (
	"context"
	"fmt"

	"banban/app/dao/internal"

	"github.com/gogf/gf/database/gdb"
)

// xsBrokerDao is the manager for logic model data accessing
// and custom defined data operations functions management. You can define
// methods on it to extend its functionality as you wish.
type xsBrokerDao struct {
	internal.XsBrokerDao
}

var (
	// XsBroker is globally public accessible object for table xs_broker operations.
	XsBroker = xsBrokerDao{
		internal.XsBroker,
	}
)

// Fill with you ideas below.

func IsExistBroker(ctx context.Context, uid uint32, appId uint32) (bool, error) {
	if uid < 1 {
		return false, nil
	}
	b, err := XsBroker.Ctx(ctx).Fields("creater").One("creater=? and deleted=0 and app_id=?", uid, appId)
	if err != nil && err != gdb.ErrNoRows {
		return false, fmt.Errorf("execute isExistBrokerStmt failed:%v", err)
	}
	if b == nil {
		return false, nil
	}
	return b.Creater > 0, nil
}
