// ============================================================================
// This is auto-generated by gf cli tool only once. Fill this file as you wish.
// ============================================================================

package dao

import (
	"banban/app/dao/internal"
	"banban/app/pb"
	"context"
	"fmt"
	"github.com/gogf/gf/os/gcache"
	"time"
)

// xsUserImprintRecordDao is the manager for logic model data accessing
// and custom defined data operations functions management. You can define
// methods on it to extend its functionality as you wish.
type xsUserImprintRecordDao struct {
	internal.XsUserImprintRecordDao
}

var (
	// XsUserImprintRecord is globally public accessible object for table xs_user_imprint_record operations.
	XsUserImprintRecord = xsUserImprintRecordDao{
		internal.XsUserImprintRecord,
	}
)

// Fill with you ideas below.
// 获取印记明细
func (d *xsUserImprintRecordDao) GetImprintRecords(ctx context.Context, fromUid, toUid uint32) []*pb.EntityXsUserImprintRecord {
	key := fmt.Sprintf("Imprint.List.%d.%d", fromUid, toUid)
	v, err := gcache.GetOrSetFunc(key, func() (interface{}, error) {
		return d.Ctx(ctx).All("from_uid = ? AND to_uid = ?", fromUid, toUid)
	}, time.Second*60)
	if err != nil {
		return nil
	}
	data, ok := v.([]*pb.EntityXsUserImprintRecord)
	if !ok {
		return nil
	}
	return data
}
