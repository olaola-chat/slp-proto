// ============================================================================
// This is auto-generated by gf cli tool only once. Fill this file as you wish.
// ============================================================================

package dao

import (
	"banban/app/dao/internal"
	"banban/app/pb"
	"context"
)

// xsCommodityDao is the manager for logic model data accessing
// and custom defined data operations functions management. You can define
// methods on it to extend its functionality as you wish.
type xsCommodityDao struct {
	internal.XsCommodityDao
}

var (
	// XsCommodity is globally public accessible object for table xs_commodity operations.
	XsCommodity = xsCommodityDao{
		internal.XsCommodity,
	}
)

// Fill with you ideas below.
func (d *xsCommodityDao) TypeCommodities(ctx context.Context, commodityType string) (map[int]*pb.EntityXsCommodity, error) {
	commodities, err := XsCommodity.Ctx(ctx).All("type = ?", commodityType)

	if err != nil || len(commodities) < 1 {
		return nil, err
	}

	var commoditiesMap = make(map[int]*pb.EntityXsCommodity)
	for _, comcommodity := range commodities {
		commoditiesMap[int(comcommodity.GroupId)] = comcommodity
	}

	return commoditiesMap, nil
}
