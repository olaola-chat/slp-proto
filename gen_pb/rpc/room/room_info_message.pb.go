// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: rpc/room/room_info_message.proto

package room

import (
	xianshi "github.com/olaola-chat/rbp-proto/gen_pb/db/xianshi"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chatroom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid               uint32 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`                                                      //
	AppId             int32  `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                                     //
	Uid               uint32 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`                                                      //
	Prefix            string `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`                                                 //
	Name              string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                                     //
	Icon              string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`                                                     //
	Type              string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                                                     //
	Property          string `protobuf:"bytes,8,opt,name=property,proto3" json:"property,omitempty"`                                             // 商业，爵位，家族房，个人(所有人都可以有), 游戏房,联盟房 vip 和 fleet 对应 auto, private 对应 private pretty:靓号房 virtual:模拟房
	Types             string `protobuf:"bytes,9,opt,name=types,proto3" json:"types,omitempty"`                                                   // 类别，后台更改, 默认，点单，自由，点单厅无法修改theme
	Description       string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`                                      //
	DisplayMessage    uint32 `protobuf:"varint,11,opt,name=display_message,json=displayMessage,proto3" json:"display_message,omitempty"`         //
	OnlineNum         uint32 `protobuf:"varint,12,opt,name=online_num,json=onlineNum,proto3" json:"online_num,omitempty"`                        // 在线人数
	OnlineAdmin       uint32 `protobuf:"varint,13,opt,name=online_admin,json=onlineAdmin,proto3" json:"online_admin,omitempty"`                  // 房主是否现在
	Version           uint32 `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty"`                                             //
	Deleted           int32  `protobuf:"varint,15,opt,name=deleted,proto3" json:"deleted,omitempty"`                                             // 是否已经被屏蔽， -1 初始化 0 正常 1 关闭 2 删除
	Boss              uint32 `protobuf:"varint,16,opt,name=boss,proto3" json:"boss,omitempty"`                                                   // xs_chatroom_package表中的bid，跟派单有关
	Reception         int32  `protobuf:"varint,17,opt,name=reception,proto3" json:"reception,omitempty"`                                         // 是否开启招待位
	Paier             int32  `protobuf:"varint,18,opt,name=paier,proto3" json:"paier,omitempty"`                                                 // 是否开启老板位
	Theme             string `protobuf:"bytes,19,opt,name=theme,proto3" json:"theme,omitempty"`                                                  //
	Background        string `protobuf:"bytes,20,opt,name=background,proto3" json:"background,omitempty"`                                        //
	Counter           uint32 `protobuf:"varint,21,opt,name=counter,proto3" json:"counter,omitempty"`                                             //
	Mode              string `protobuf:"bytes,22,opt,name=mode,proto3" json:"mode,omitempty"`                                                    // auto 自由上麦模式，lock 默认锁定模式，只能由管理员抱上麦
	Package           uint32 `protobuf:"varint,23,opt,name=package,proto3" json:"package,omitempty"`                                             // 麦上打赏统计
	OTotal            uint32 `protobuf:"varint,24,opt,name=o_total,json=oTotal,proto3" json:"o_total,omitempty"`                                 // 派单数
	ONum              uint32 `protobuf:"varint,25,opt,name=o_num,json=oNum,proto3" json:"o_num,omitempty"`                                       // 成功单数
	ODuration         uint32 `protobuf:"varint,26,opt,name=o_duration,json=oDuration,proto3" json:"o_duration,omitempty"`                        // 成功总耗时
	Nine              uint32 `protobuf:"varint,27,opt,name=nine,proto3" json:"nine,omitempty"`                                                   // 9麦位模式
	Dateline          uint32 `protobuf:"varint,28,opt,name=dateline,proto3" json:"dateline,omitempty"`                                           // 创建时间
	Password          string `protobuf:"bytes,29,opt,name=password,proto3" json:"password,omitempty"`                                            //
	Weight            int32  `protobuf:"varint,30,opt,name=weight,proto3" json:"weight,omitempty"`                                               //
	DisplayRank       uint32 `protobuf:"varint,31,opt,name=display_rank,json=displayRank,proto3" json:"display_rank,omitempty"`                  //
	Bicon             string `protobuf:"bytes,32,opt,name=bicon,proto3" json:"bicon,omitempty"`                                                  //
	Sex               uint32 `protobuf:"varint,33,opt,name=sex,proto3" json:"sex,omitempty"`                                                     //
	CloseBox          uint32 `protobuf:"varint,34,opt,name=close_box,json=closeBox,proto3" json:"close_box,omitempty"`                           //
	Game              string `protobuf:"bytes,35,opt,name=game,proto3" json:"game,omitempty"`                                                    //
	State             uint32 `protobuf:"varint,36,opt,name=state,proto3" json:"state,omitempty"`                                                 // 0：正常，1：隐藏，2：仅好友可见，3：仅粉丝可见
	Auction           int32  `protobuf:"varint,37,opt,name=auction,proto3" json:"auction,omitempty"`                                             // 是否开启拍卖
	Area              string `protobuf:"bytes,38,opt,name=area,proto3" json:"area,omitempty"`                                                    // zh_tw台湾地区，sg新加坡，ms马来西亚，ho港澳，ar中东，th泰国，vi越南，ko韩国，jo约旦，ir伊朗，ma摩洛哥，tn突尼斯，sd苏丹，dz阿尔及利亚，kw科威特，eg埃及，iq伊拉克，ae阿联酋，bh巴林，lb黎巴嫩，om阿曼，qa卡塔尔，sa沙特，sy叙利亚，mr毛里塔尼亚，so索马里，ye也门，bl巴勒斯坦，ly利比亚，km科摩罗，dj吉布提，tr土耳其
	Language          string `protobuf:"bytes,39,opt,name=language,proto3" json:"language,omitempty"`                                            // 语言
	RoomFactoryType   string `protobuf:"bytes,40,opt,name=room_factory_type,json=roomFactoryType,proto3" json:"room_factory_type,omitempty"`     // 创造房间的工厂type
	FixedTagId        uint32 `protobuf:"varint,41,opt,name=fixed_tag_id,json=fixedTagId,proto3" json:"fixed_tag_id,omitempty"`                   // 房间的标签显示id
	RoomModuleId      uint32 `protobuf:"varint,42,opt,name=room_module_id,json=roomModuleId,proto3" json:"room_module_id,omitempty"`             // 冗余字段房间的模版id
	SettlementChannel string `protobuf:"bytes,43,opt,name=settlement_channel,json=settlementChannel,proto3" json:"settlement_channel,omitempty"` // 结算频道
	GiftWish          uint32 `protobuf:"varint,44,opt,name=gift_wish,json=giftWish,proto3" json:"gift_wish,omitempty"`                           // 心愿礼物功能，0-关闭，1-开启
}

func (x *Chatroom) Reset() {
	*x = Chatroom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_room_room_info_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chatroom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chatroom) ProtoMessage() {}

func (x *Chatroom) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_room_room_info_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chatroom.ProtoReflect.Descriptor instead.
func (*Chatroom) Descriptor() ([]byte, []int) {
	return file_rpc_room_room_info_message_proto_rawDescGZIP(), []int{0}
}

func (x *Chatroom) GetRid() uint32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *Chatroom) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Chatroom) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Chatroom) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Chatroom) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chatroom) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Chatroom) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Chatroom) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *Chatroom) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

func (x *Chatroom) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Chatroom) GetDisplayMessage() uint32 {
	if x != nil {
		return x.DisplayMessage
	}
	return 0
}

func (x *Chatroom) GetOnlineNum() uint32 {
	if x != nil {
		return x.OnlineNum
	}
	return 0
}

func (x *Chatroom) GetOnlineAdmin() uint32 {
	if x != nil {
		return x.OnlineAdmin
	}
	return 0
}

func (x *Chatroom) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Chatroom) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *Chatroom) GetBoss() uint32 {
	if x != nil {
		return x.Boss
	}
	return 0
}

func (x *Chatroom) GetReception() int32 {
	if x != nil {
		return x.Reception
	}
	return 0
}

func (x *Chatroom) GetPaier() int32 {
	if x != nil {
		return x.Paier
	}
	return 0
}

func (x *Chatroom) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *Chatroom) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *Chatroom) GetCounter() uint32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *Chatroom) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Chatroom) GetPackage() uint32 {
	if x != nil {
		return x.Package
	}
	return 0
}

func (x *Chatroom) GetOTotal() uint32 {
	if x != nil {
		return x.OTotal
	}
	return 0
}

func (x *Chatroom) GetONum() uint32 {
	if x != nil {
		return x.ONum
	}
	return 0
}

func (x *Chatroom) GetODuration() uint32 {
	if x != nil {
		return x.ODuration
	}
	return 0
}

func (x *Chatroom) GetNine() uint32 {
	if x != nil {
		return x.Nine
	}
	return 0
}

func (x *Chatroom) GetDateline() uint32 {
	if x != nil {
		return x.Dateline
	}
	return 0
}

func (x *Chatroom) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Chatroom) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Chatroom) GetDisplayRank() uint32 {
	if x != nil {
		return x.DisplayRank
	}
	return 0
}

func (x *Chatroom) GetBicon() string {
	if x != nil {
		return x.Bicon
	}
	return ""
}

func (x *Chatroom) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *Chatroom) GetCloseBox() uint32 {
	if x != nil {
		return x.CloseBox
	}
	return 0
}

func (x *Chatroom) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *Chatroom) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Chatroom) GetAuction() int32 {
	if x != nil {
		return x.Auction
	}
	return 0
}

func (x *Chatroom) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Chatroom) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Chatroom) GetRoomFactoryType() string {
	if x != nil {
		return x.RoomFactoryType
	}
	return ""
}

func (x *Chatroom) GetFixedTagId() uint32 {
	if x != nil {
		return x.FixedTagId
	}
	return 0
}

func (x *Chatroom) GetRoomModuleId() uint32 {
	if x != nil {
		return x.RoomModuleId
	}
	return 0
}

func (x *Chatroom) GetSettlementChannel() string {
	if x != nil {
		return x.SettlementChannel
	}
	return ""
}

func (x *Chatroom) GetGiftWish() uint32 {
	if x != nil {
		return x.GiftWish
	}
	return 0
}

//获取单个请求请求
type ReqRoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//需要查询的房间RID
	Rid uint32 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	//需要返回哪些字段，为空的话，表示所有字段名
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ReqRoomInfo) Reset() {
	*x = ReqRoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_room_room_info_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRoomInfo) ProtoMessage() {}

func (x *ReqRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_room_room_info_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRoomInfo.ProtoReflect.Descriptor instead.
func (*ReqRoomInfo) Descriptor() ([]byte, []int) {
	return file_rpc_room_room_info_message_proto_rawDescGZIP(), []int{1}
}

func (x *ReqRoomInfo) GetRid() uint32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *ReqRoomInfo) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

//获取批量请求
type ReqRoomInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//批量请求房间RID集合
	Rids []uint32 `protobuf:"varint,1,rep,packed,name=rids,proto3" json:"rids,omitempty"`
	//需要返回哪些字段，为空的话，表示所有字段名
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ReqRoomInfos) Reset() {
	*x = ReqRoomInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_room_room_info_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRoomInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRoomInfos) ProtoMessage() {}

func (x *ReqRoomInfos) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_room_room_info_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRoomInfos.ProtoReflect.Descriptor instead.
func (*ReqRoomInfos) Descriptor() ([]byte, []int) {
	return file_rpc_room_room_info_message_proto_rawDescGZIP(), []int{2}
}

func (x *ReqRoomInfos) GetRids() []uint32 {
	if x != nil {
		return x.Rids
	}
	return nil
}

func (x *ReqRoomInfos) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

//返回多个房间信息
type RepRoomInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*xianshi.EntityXsChatroom `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RepRoomInfos) Reset() {
	*x = RepRoomInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_room_room_info_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepRoomInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepRoomInfos) ProtoMessage() {}

func (x *RepRoomInfos) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_room_room_info_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepRoomInfos.ProtoReflect.Descriptor instead.
func (*RepRoomInfos) Descriptor() ([]byte, []int) {
	return file_rpc_room_room_info_message_proto_rawDescGZIP(), []int{3}
}

func (x *RepRoomInfos) GetData() []*xianshi.EntityXsChatroom {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_rpc_room_room_info_message_proto protoreflect.FileDescriptor

var file_rpc_room_room_info_message_proto_rawDesc = []byte{
	0x0a, 0x20, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x1a, 0x23, 0x64, 0x62, 0x2f, 0x78, 0x69, 0x61, 0x6e, 0x73, 0x68, 0x69, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x09, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f,
	0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x72, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x62, 0x6f, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x65, 0x72, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6f, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x6e, 0x65, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6e, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f,
	0x62, 0x6f, 0x78, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x42, 0x6f, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x54, 0x61, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72,
	0x6f, 0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67,
	0x69, 0x66, 0x74, 0x57, 0x69, 0x73, 0x68, 0x22, 0x37, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x22, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04,
	0x72, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x0c,
	0x52, 0x65, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x30, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x62, 0x2e,
	0x78, 0x69, 0x61, 0x6e, 0x73, 0x68, 0x69, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x58, 0x73,
	0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x32,
	0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x61,
	0x6f, 0x6c, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x72, 0x62, 0x70, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x5f, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x6f,
	0x6f, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_room_room_info_message_proto_rawDescOnce sync.Once
	file_rpc_room_room_info_message_proto_rawDescData = file_rpc_room_room_info_message_proto_rawDesc
)

func file_rpc_room_room_info_message_proto_rawDescGZIP() []byte {
	file_rpc_room_room_info_message_proto_rawDescOnce.Do(func() {
		file_rpc_room_room_info_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_room_room_info_message_proto_rawDescData)
	})
	return file_rpc_room_room_info_message_proto_rawDescData
}

var file_rpc_room_room_info_message_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpc_room_room_info_message_proto_goTypes = []interface{}{
	(*Chatroom)(nil),                 // 0: rbp.rpc.room.Chatroom
	(*ReqRoomInfo)(nil),              // 1: rbp.rpc.room.ReqRoomInfo
	(*ReqRoomInfos)(nil),             // 2: rbp.rpc.room.ReqRoomInfos
	(*RepRoomInfos)(nil),             // 3: rbp.rpc.room.RepRoomInfos
	(*xianshi.EntityXsChatroom)(nil), // 4: db.xianshi.EntityXsChatroom
}
var file_rpc_room_room_info_message_proto_depIdxs = []int32{
	4, // 0: rbp.rpc.room.RepRoomInfos.data:type_name -> db.xianshi.EntityXsChatroom
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_room_room_info_message_proto_init() }
func file_rpc_room_room_info_message_proto_init() {
	if File_rpc_room_room_info_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_room_room_info_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chatroom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_room_room_info_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_room_room_info_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRoomInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_room_room_info_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepRoomInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_room_room_info_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_room_room_info_message_proto_goTypes,
		DependencyIndexes: file_rpc_room_room_info_message_proto_depIdxs,
		MessageInfos:      file_rpc_room_room_info_message_proto_msgTypes,
	}.Build()
	File_rpc_room_room_info_message_proto = out.File
	file_rpc_room_room_info_message_proto_rawDesc = nil
	file_rpc_room_room_info_message_proto_goTypes = nil
	file_rpc_room_room_info_message_proto_depIdxs = nil
}
