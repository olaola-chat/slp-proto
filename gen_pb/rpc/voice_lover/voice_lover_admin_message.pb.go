// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.1
// source: rpc/voice_lover/voice_lover_admin_message.proto

package voice_lover

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReqCreateSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OpUid uint64 `protobuf:"varint,2,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqCreateSubject) Reset() {
	*x = ReqCreateSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateSubject) ProtoMessage() {}

func (x *ReqCreateSubject) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateSubject.ProtoReflect.Descriptor instead.
func (*ReqCreateSubject) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{0}
}

func (x *ReqCreateSubject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqCreateSubject) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResCreateSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResCreateSubject) Reset() {
	*x = ResCreateSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateSubject) ProtoMessage() {}

func (x *ResCreateSubject) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateSubject.ProtoReflect.Descriptor instead.
func (*ResCreateSubject) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{1}
}

func (x *ResCreateSubject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReqUpdateSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OpUid uint64 `protobuf:"varint,3,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqUpdateSubject) Reset() {
	*x = ReqUpdateSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateSubject) ProtoMessage() {}

func (x *ReqUpdateSubject) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateSubject.ProtoReflect.Descriptor instead.
func (*ReqUpdateSubject) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{2}
}

func (x *ReqUpdateSubject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqUpdateSubject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqUpdateSubject) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResUpdateSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResUpdateSubject) Reset() {
	*x = ResUpdateSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateSubject) ProtoMessage() {}

func (x *ResUpdateSubject) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateSubject.ProtoReflect.Descriptor instead.
func (*ResUpdateSubject) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{3}
}

type ReqDelSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OpUid uint64 `protobuf:"varint,2,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqDelSubject) Reset() {
	*x = ReqDelSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDelSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDelSubject) ProtoMessage() {}

func (x *ReqDelSubject) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDelSubject.ProtoReflect.Descriptor instead.
func (*ReqDelSubject) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{4}
}

func (x *ReqDelSubject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqDelSubject) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResDelSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResDelSubject) Reset() {
	*x = ResDelSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDelSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDelSubject) ProtoMessage() {}

func (x *ResDelSubject) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDelSubject.ProtoReflect.Descriptor instead.
func (*ResDelSubject) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{5}
}

type ReqGetSubjectDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ReqGetSubjectDetail) Reset() {
	*x = ReqGetSubjectDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetSubjectDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetSubjectDetail) ProtoMessage() {}

func (x *ReqGetSubjectDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetSubjectDetail.ProtoReflect.Descriptor instead.
func (*ReqGetSubjectDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{6}
}

func (x *ReqGetSubjectDetail) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ResGetSubjectDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subjects map[uint64]*SubjectData `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResGetSubjectDetail) Reset() {
	*x = ResGetSubjectDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetSubjectDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetSubjectDetail) ProtoMessage() {}

func (x *ResGetSubjectDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetSubjectDetail.ProtoReflect.Descriptor instead.
func (*ResGetSubjectDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{7}
}

func (x *ResGetSubjectDetail) GetSubjects() map[uint64]*SubjectData {
	if x != nil {
		return x.Subjects
	}
	return nil
}

type ReqGetSubjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime uint64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint64 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Page      int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqGetSubjectList) Reset() {
	*x = ReqGetSubjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetSubjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetSubjectList) ProtoMessage() {}

func (x *ReqGetSubjectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetSubjectList.ProtoReflect.Descriptor instead.
func (*ReqGetSubjectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{8}
}

func (x *ReqGetSubjectList) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqGetSubjectList) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReqGetSubjectList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqGetSubjectList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqGetSubjectList) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResGetSubjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subjects []*SubjectData `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty"`
	Total    int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ResGetSubjectList) Reset() {
	*x = ResGetSubjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetSubjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetSubjectList) ProtoMessage() {}

func (x *ResGetSubjectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetSubjectList.ProtoReflect.Descriptor instead.
func (*ResGetSubjectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{9}
}

func (x *ResGetSubjectList) GetSubjects() []*SubjectData {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *ResGetSubjectList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ReqGetAlbumCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumStr   string `protobuf:"bytes,1,opt,name=album_str,json=albumStr,proto3" json:"album_str,omitempty"`
	SubjectStr string `protobuf:"bytes,2,opt,name=subject_str,json=subjectStr,proto3" json:"subject_str,omitempty"`
	Page       int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit      int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqGetAlbumCollect) Reset() {
	*x = ReqGetAlbumCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAlbumCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAlbumCollect) ProtoMessage() {}

func (x *ReqGetAlbumCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAlbumCollect.ProtoReflect.Descriptor instead.
func (*ReqGetAlbumCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{10}
}

func (x *ReqGetAlbumCollect) GetAlbumStr() string {
	if x != nil {
		return x.AlbumStr
	}
	return ""
}

func (x *ReqGetAlbumCollect) GetSubjectStr() string {
	if x != nil {
		return x.SubjectStr
	}
	return ""
}

func (x *ReqGetAlbumCollect) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqGetAlbumCollect) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResGetAlbumCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumCollects []*AlbumCollectData `protobuf:"bytes,1,rep,name=album_collects,json=albumCollects,proto3" json:"album_collects,omitempty"`
	Total         int32               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ResGetAlbumCollect) Reset() {
	*x = ResGetAlbumCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAlbumCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAlbumCollect) ProtoMessage() {}

func (x *ResGetAlbumCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAlbumCollect.ProtoReflect.Descriptor instead.
func (*ResGetAlbumCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{11}
}

func (x *ResGetAlbumCollect) GetAlbumCollects() []*AlbumCollectData {
	if x != nil {
		return x.AlbumCollects
	}
	return nil
}

func (x *ResGetAlbumCollect) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AlbumCollectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AlbumName   string `protobuf:"bytes,2,opt,name=album_name,json=albumName,proto3" json:"album_name,omitempty"`
	SubjectName string `protobuf:"bytes,3,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	AlbumId     uint64 `protobuf:"varint,4,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	SubjectId   uint64 `protobuf:"varint,5,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
}

func (x *AlbumCollectData) Reset() {
	*x = AlbumCollectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumCollectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumCollectData) ProtoMessage() {}

func (x *AlbumCollectData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumCollectData.ProtoReflect.Descriptor instead.
func (*AlbumCollectData) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{12}
}

func (x *AlbumCollectData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlbumCollectData) GetAlbumName() string {
	if x != nil {
		return x.AlbumName
	}
	return ""
}

func (x *AlbumCollectData) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *AlbumCollectData) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *AlbumCollectData) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

type ReqAlbumCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId     uint64 `protobuf:"varint,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	SubjectId   uint64 `protobuf:"varint,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	CollectType int32  `protobuf:"varint,3,opt,name=collect_type,json=collectType,proto3" json:"collect_type,omitempty"`
}

func (x *ReqAlbumCollect) Reset() {
	*x = ReqAlbumCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAlbumCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAlbumCollect) ProtoMessage() {}

func (x *ReqAlbumCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAlbumCollect.ProtoReflect.Descriptor instead.
func (*ReqAlbumCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{13}
}

func (x *ReqAlbumCollect) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *ReqAlbumCollect) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *ReqAlbumCollect) GetCollectType() int32 {
	if x != nil {
		return x.CollectType
	}
	return 0
}

type ResAlbumCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResAlbumCollect) Reset() {
	*x = ResAlbumCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAlbumCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAlbumCollect) ProtoMessage() {}

func (x *ResAlbumCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAlbumCollect.ProtoReflect.Descriptor instead.
func (*ResAlbumCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{14}
}

type ReqAlbumChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"` //0:精选 1:非精选
}

func (x *ReqAlbumChoice) Reset() {
	*x = ReqAlbumChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAlbumChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAlbumChoice) ProtoMessage() {}

func (x *ReqAlbumChoice) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAlbumChoice.ProtoReflect.Descriptor instead.
func (*ReqAlbumChoice) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{15}
}

func (x *ReqAlbumChoice) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAlbumChoice) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResAlbumChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResAlbumChoice) Reset() {
	*x = ResAlbumChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAlbumChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAlbumChoice) ProtoMessage() {}

func (x *ResAlbumChoice) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAlbumChoice.ProtoReflect.Descriptor instead.
func (*ResAlbumChoice) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{16}
}

type ReqGetAlbumChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqGetAlbumChoice) Reset() {
	*x = ReqGetAlbumChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAlbumChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAlbumChoice) ProtoMessage() {}

func (x *ReqGetAlbumChoice) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAlbumChoice.ProtoReflect.Descriptor instead.
func (*ReqGetAlbumChoice) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{17}
}

type ResGetAlbumChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums []*AlbumData `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
}

func (x *ResGetAlbumChoice) Reset() {
	*x = ResGetAlbumChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAlbumChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAlbumChoice) ProtoMessage() {}

func (x *ResGetAlbumChoice) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAlbumChoice.ProtoReflect.Descriptor instead.
func (*ResGetAlbumChoice) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{18}
}

func (x *ResGetAlbumChoice) GetAlbums() []*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

type ReqGetBannerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime uint64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint64 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Status    int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"` //0:全部 1:上架 2:没上架
	Page      int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqGetBannerList) Reset() {
	*x = ReqGetBannerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetBannerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetBannerList) ProtoMessage() {}

func (x *ReqGetBannerList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetBannerList.ProtoReflect.Descriptor instead.
func (*ReqGetBannerList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{19}
}

func (x *ReqGetBannerList) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqGetBannerList) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReqGetBannerList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqGetBannerList) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReqGetBannerList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqGetBannerList) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResGetBannerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banners []*BannerData `protobuf:"bytes,1,rep,name=banners,proto3" json:"banners,omitempty"`
	Total   int32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ResGetBannerList) Reset() {
	*x = ResGetBannerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetBannerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetBannerList) ProtoMessage() {}

func (x *ResGetBannerList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetBannerList.ProtoReflect.Descriptor instead.
func (*ResGetBannerList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{20}
}

func (x *ResGetBannerList) GetBanners() []*BannerData {
	if x != nil {
		return x.Banners
	}
	return nil
}

func (x *ResGetBannerList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ReqCreateBanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Cover     string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Schema    string `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	OpUid     uint64 `protobuf:"varint,4,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	Sort      uint32 `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	StartTime uint64 `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint64 `protobuf:"varint,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ReqCreateBanner) Reset() {
	*x = ReqCreateBanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateBanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateBanner) ProtoMessage() {}

func (x *ReqCreateBanner) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateBanner.ProtoReflect.Descriptor instead.
func (*ReqCreateBanner) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{21}
}

func (x *ReqCreateBanner) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqCreateBanner) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqCreateBanner) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *ReqCreateBanner) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *ReqCreateBanner) GetSort() uint32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ReqCreateBanner) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqCreateBanner) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ResCreateBanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResCreateBanner) Reset() {
	*x = ResCreateBanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateBanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateBanner) ProtoMessage() {}

func (x *ResCreateBanner) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateBanner.ProtoReflect.Descriptor instead.
func (*ResCreateBanner) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{22}
}

func (x *ResCreateBanner) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReqUpdateBanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover     string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Schema    string `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	OpUid     uint64 `protobuf:"varint,5,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	Sort      uint32 `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	StartTime uint64 `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint64 `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ReqUpdateBanner) Reset() {
	*x = ReqUpdateBanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateBanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateBanner) ProtoMessage() {}

func (x *ReqUpdateBanner) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateBanner.ProtoReflect.Descriptor instead.
func (*ReqUpdateBanner) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{23}
}

func (x *ReqUpdateBanner) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqUpdateBanner) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqUpdateBanner) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqUpdateBanner) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *ReqUpdateBanner) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *ReqUpdateBanner) GetSort() uint32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ReqUpdateBanner) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqUpdateBanner) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ResUpdateBanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResUpdateBanner) Reset() {
	*x = ResUpdateBanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateBanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateBanner) ProtoMessage() {}

func (x *ResUpdateBanner) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateBanner.ProtoReflect.Descriptor instead.
func (*ResUpdateBanner) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{24}
}

type ReqGetBannerDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqGetBannerDetail) Reset() {
	*x = ReqGetBannerDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetBannerDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetBannerDetail) ProtoMessage() {}

func (x *ReqGetBannerDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetBannerDetail.ProtoReflect.Descriptor instead.
func (*ReqGetBannerDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{25}
}

func (x *ReqGetBannerDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResGetBannerDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banner *BannerData `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
}

func (x *ResGetBannerDetail) Reset() {
	*x = ResGetBannerDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetBannerDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetBannerDetail) ProtoMessage() {}

func (x *ResGetBannerDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetBannerDetail.ProtoReflect.Descriptor instead.
func (*ResGetBannerDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{26}
}

func (x *ResGetBannerDetail) GetBanner() *BannerData {
	if x != nil {
		return x.Banner
	}
	return nil
}

type ReqAdminAudioList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime   uint64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     uint64 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	UserStr     string `protobuf:"bytes,3,opt,name=user_str,json=userStr,proto3" json:"user_str,omitempty"`
	Source      int32  `protobuf:"varint,4,opt,name=source,proto3" json:"source,omitempty"`
	Label       string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	Order       string `protobuf:"bytes,6,opt,name=order,proto3" json:"order,omitempty"`
	AuditStatus int32  `protobuf:"varint,7,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`
	Page        int32  `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	Limit       int32  `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqAdminAudioList) Reset() {
	*x = ReqAdminAudioList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAudioList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAudioList) ProtoMessage() {}

func (x *ReqAdminAudioList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAudioList.ProtoReflect.Descriptor instead.
func (*ReqAdminAudioList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{27}
}

func (x *ReqAdminAudioList) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqAdminAudioList) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReqAdminAudioList) GetUserStr() string {
	if x != nil {
		return x.UserStr
	}
	return ""
}

func (x *ReqAdminAudioList) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *ReqAdminAudioList) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ReqAdminAudioList) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *ReqAdminAudioList) GetAuditStatus() int32 {
	if x != nil {
		return x.AuditStatus
	}
	return 0
}

func (x *ReqAdminAudioList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqAdminAudioList) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResAdminAudioList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audios  []*AdminAudio `protobuf:"bytes,1,rep,name=audios,proto3" json:"audios,omitempty"`
	Total   int32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Success bool          `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string        `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAudioList) Reset() {
	*x = ResAdminAudioList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAudioList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAudioList) ProtoMessage() {}

func (x *ResAdminAudioList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAudioList.ProtoReflect.Descriptor instead.
func (*ResAdminAudioList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{28}
}

func (x *ResAdminAudioList) GetAudios() []*AdminAudio {
	if x != nil {
		return x.Audios
	}
	return nil
}

func (x *ResAdminAudioList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResAdminAudioList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAudioList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAudioDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqAdminAudioDetail) Reset() {
	*x = ReqAdminAudioDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAudioDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAudioDetail) ProtoMessage() {}

func (x *ReqAdminAudioDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAudioDetail.ProtoReflect.Descriptor instead.
func (*ReqAdminAudioDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{29}
}

func (x *ReqAdminAudioDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResAdminAudioDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audio   *AdminAudio `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`
	Success bool        `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string      `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAudioDetail) Reset() {
	*x = ResAdminAudioDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAudioDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAudioDetail) ProtoMessage() {}

func (x *ResAdminAudioDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAudioDetail.ProtoReflect.Descriptor instead.
func (*ResAdminAudioDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{30}
}

func (x *ResAdminAudioDetail) GetAudio() *AdminAudio {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *ResAdminAudioDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAudioDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAudioUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Labels string `protobuf:"bytes,4,opt,name=labels,proto3" json:"labels,omitempty"`
	OpUid  uint64 `protobuf:"varint,5,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	Cover  string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"` // 封面
	From   uint32 `protobuf:"varint,7,opt,name=from,proto3" json:"from,omitempty"`  // 作品来源：0-无 1-原创 2-搬运
}

func (x *ReqAdminAudioUpdate) Reset() {
	*x = ReqAdminAudioUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAudioUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAudioUpdate) ProtoMessage() {}

func (x *ReqAdminAudioUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAudioUpdate.ProtoReflect.Descriptor instead.
func (*ReqAdminAudioUpdate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{31}
}

func (x *ReqAdminAudioUpdate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminAudioUpdate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqAdminAudioUpdate) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ReqAdminAudioUpdate) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

func (x *ReqAdminAudioUpdate) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *ReqAdminAudioUpdate) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqAdminAudioUpdate) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

type ResAdminAudioUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAudioUpdate) Reset() {
	*x = ResAdminAudioUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAudioUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAudioUpdate) ProtoMessage() {}

func (x *ResAdminAudioUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAudioUpdate.ProtoReflect.Descriptor instead.
func (*ResAdminAudioUpdate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{32}
}

func (x *ResAdminAudioUpdate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAudioUpdate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAudioAudit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AuditStatus int32  `protobuf:"varint,2,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"` // 1:通过 2:不通过
	AuditReason int32  `protobuf:"varint,3,opt,name=audit_reason,json=auditReason,proto3" json:"audit_reason,omitempty"`
	OpUid       uint64 `protobuf:"varint,4,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqAdminAudioAudit) Reset() {
	*x = ReqAdminAudioAudit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAudioAudit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAudioAudit) ProtoMessage() {}

func (x *ReqAdminAudioAudit) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAudioAudit.ProtoReflect.Descriptor instead.
func (*ReqAdminAudioAudit) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{33}
}

func (x *ReqAdminAudioAudit) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminAudioAudit) GetAuditStatus() int32 {
	if x != nil {
		return x.AuditStatus
	}
	return 0
}

func (x *ReqAdminAudioAudit) GetAuditReason() int32 {
	if x != nil {
		return x.AuditReason
	}
	return 0
}

func (x *ReqAdminAudioAudit) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResAdminAudioAudit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAudioAudit) Reset() {
	*x = ResAdminAudioAudit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAudioAudit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAudioAudit) ProtoMessage() {}

func (x *ResAdminAudioAudit) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAudioAudit.ProtoReflect.Descriptor instead.
func (*ResAdminAudioAudit) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{34}
}

func (x *ResAdminAudioAudit) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAudioAudit) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAudioAuditReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqAdminAudioAuditReason) Reset() {
	*x = ReqAdminAudioAuditReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAudioAuditReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAudioAuditReason) ProtoMessage() {}

func (x *ReqAdminAudioAuditReason) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAudioAuditReason.ProtoReflect.Descriptor instead.
func (*ReqAdminAudioAuditReason) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{35}
}

type ResAdminAudioAuditReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reasons []*AdminAudioAuditReason `protobuf:"bytes,1,rep,name=reasons,proto3" json:"reasons,omitempty"`
	Success bool                     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAudioAuditReason) Reset() {
	*x = ResAdminAudioAuditReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAudioAuditReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAudioAuditReason) ProtoMessage() {}

func (x *ResAdminAudioAuditReason) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAudioAuditReason.ProtoReflect.Descriptor instead.
func (*ResAdminAudioAuditReason) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{36}
}

func (x *ResAdminAudioAuditReason) GetReasons() []*AdminAudioAuditReason {
	if x != nil {
		return x.Reasons
	}
	return nil
}

func (x *ResAdminAudioAuditReason) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAudioAuditReason) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAlbumCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Intro string `protobuf:"bytes,2,opt,name=intro,proto3" json:"intro,omitempty"`
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	OpUid uint64 `protobuf:"varint,4,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqAdminAlbumCreate) Reset() {
	*x = ReqAdminAlbumCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAlbumCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAlbumCreate) ProtoMessage() {}

func (x *ReqAdminAlbumCreate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAlbumCreate.ProtoReflect.Descriptor instead.
func (*ReqAdminAlbumCreate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{37}
}

func (x *ReqAdminAlbumCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminAlbumCreate) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *ReqAdminAlbumCreate) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqAdminAlbumCreate) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResAdminAlbumCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAlbumCreate) Reset() {
	*x = ResAdminAlbumCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAlbumCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAlbumCreate) ProtoMessage() {}

func (x *ResAdminAlbumCreate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAlbumCreate.ProtoReflect.Descriptor instead.
func (*ResAdminAlbumCreate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{38}
}

func (x *ResAdminAlbumCreate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResAdminAlbumCreate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAlbumCreate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAlbumDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OpUid uint64 `protobuf:"varint,2,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqAdminAlbumDel) Reset() {
	*x = ReqAdminAlbumDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAlbumDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAlbumDel) ProtoMessage() {}

func (x *ReqAdminAlbumDel) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAlbumDel.ProtoReflect.Descriptor instead.
func (*ReqAdminAlbumDel) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{39}
}

func (x *ReqAdminAlbumDel) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminAlbumDel) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResAdminAlbumDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAlbumDel) Reset() {
	*x = ResAdminAlbumDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAlbumDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAlbumDel) ProtoMessage() {}

func (x *ResAdminAlbumDel) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAlbumDel.ProtoReflect.Descriptor instead.
func (*ResAdminAlbumDel) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{40}
}

func (x *ResAdminAlbumDel) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAlbumDel) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAlbumUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Intro string `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	Cover string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	OpUid uint64 `protobuf:"varint,5,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqAdminAlbumUpdate) Reset() {
	*x = ReqAdminAlbumUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAlbumUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAlbumUpdate) ProtoMessage() {}

func (x *ReqAdminAlbumUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAlbumUpdate.ProtoReflect.Descriptor instead.
func (*ReqAdminAlbumUpdate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{41}
}

func (x *ReqAdminAlbumUpdate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminAlbumUpdate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminAlbumUpdate) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *ReqAdminAlbumUpdate) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqAdminAlbumUpdate) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResAdminAlbumUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAlbumUpdate) Reset() {
	*x = ResAdminAlbumUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAlbumUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAlbumUpdate) ProtoMessage() {}

func (x *ResAdminAlbumUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAlbumUpdate.ProtoReflect.Descriptor instead.
func (*ResAdminAlbumUpdate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{42}
}

func (x *ResAdminAlbumUpdate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAlbumUpdate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqAdminAlbumDetail) Reset() {
	*x = ReqAdminAlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAlbumDetail) ProtoMessage() {}

func (x *ReqAdminAlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAlbumDetail.ProtoReflect.Descriptor instead.
func (*ReqAdminAlbumDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{43}
}

func (x *ReqAdminAlbumDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResAdminAlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album   *AdminAlbum `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
	Success bool        `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string      `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAlbumDetail) Reset() {
	*x = ResAdminAlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAlbumDetail) ProtoMessage() {}

func (x *ResAdminAlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAlbumDetail.ProtoReflect.Descriptor instead.
func (*ResAdminAlbumDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{44}
}

func (x *ResAdminAlbumDetail) GetAlbum() *AdminAlbum {
	if x != nil {
		return x.Album
	}
	return nil
}

func (x *ResAdminAlbumDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAlbumDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartTime     uint64 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       uint64 `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CollectStatus int32  `protobuf:"varint,4,opt,name=collect_status,json=collectStatus,proto3" json:"collect_status,omitempty"`
	Page          int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqAdminAlbumList) Reset() {
	*x = ReqAdminAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAlbumList) ProtoMessage() {}

func (x *ReqAdminAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAlbumList.ProtoReflect.Descriptor instead.
func (*ReqAdminAlbumList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{45}
}

func (x *ReqAdminAlbumList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminAlbumList) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqAdminAlbumList) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReqAdminAlbumList) GetCollectStatus() int32 {
	if x != nil {
		return x.CollectStatus
	}
	return 0
}

func (x *ReqAdminAlbumList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqAdminAlbumList) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResAdminAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums  []*AdminAlbum `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	Total   int32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Success bool          `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string        `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAlbumList) Reset() {
	*x = ResAdminAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAlbumList) ProtoMessage() {}

func (x *ResAdminAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAlbumList.ProtoReflect.Descriptor instead.
func (*ResAdminAlbumList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{46}
}

func (x *ResAdminAlbumList) GetAlbums() []*AdminAlbum {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *ResAdminAlbumList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResAdminAlbumList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAlbumList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAudioCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserStr       string `protobuf:"bytes,1,opt,name=user_str,json=userStr,proto3" json:"user_str,omitempty"`
	AlbumStr      string `protobuf:"bytes,2,opt,name=album_str,json=albumStr,proto3" json:"album_str,omitempty"`
	AudioStr      string `protobuf:"bytes,3,opt,name=audio_str,json=audioStr,proto3" json:"audio_str,omitempty"`
	Label         string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	CollectStatus int32  `protobuf:"varint,5,opt,name=collect_status,json=collectStatus,proto3" json:"collect_status,omitempty"`
	Order         string `protobuf:"bytes,6,opt,name=order,proto3" json:"order,omitempty"`
	Page          uint64 `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	Limit         uint64 `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqAdminAudioCollectList) Reset() {
	*x = ReqAdminAudioCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAudioCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAudioCollectList) ProtoMessage() {}

func (x *ReqAdminAudioCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAudioCollectList.ProtoReflect.Descriptor instead.
func (*ReqAdminAudioCollectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{47}
}

func (x *ReqAdminAudioCollectList) GetUserStr() string {
	if x != nil {
		return x.UserStr
	}
	return ""
}

func (x *ReqAdminAudioCollectList) GetAlbumStr() string {
	if x != nil {
		return x.AlbumStr
	}
	return ""
}

func (x *ReqAdminAudioCollectList) GetAudioStr() string {
	if x != nil {
		return x.AudioStr
	}
	return ""
}

func (x *ReqAdminAudioCollectList) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ReqAdminAudioCollectList) GetCollectStatus() int32 {
	if x != nil {
		return x.CollectStatus
	}
	return 0
}

func (x *ReqAdminAudioCollectList) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *ReqAdminAudioCollectList) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqAdminAudioCollectList) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResAdminAudioCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audios  []*AdminAudioCollect `protobuf:"bytes,1,rep,name=audios,proto3" json:"audios,omitempty"`
	Total   int32                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Success bool                 `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string               `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAudioCollectList) Reset() {
	*x = ResAdminAudioCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAudioCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAudioCollectList) ProtoMessage() {}

func (x *ResAdminAudioCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAudioCollectList.ProtoReflect.Descriptor instead.
func (*ResAdminAudioCollectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{48}
}

func (x *ResAdminAudioCollectList) GetAudios() []*AdminAudioCollect {
	if x != nil {
		return x.Audios
	}
	return nil
}

func (x *ResAdminAudioCollectList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResAdminAudioCollectList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAudioCollectList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAudioCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioId uint64 `protobuf:"varint,1,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	AlbumId uint64 `protobuf:"varint,2,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	Type    int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ReqAdminAudioCollect) Reset() {
	*x = ReqAdminAudioCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAudioCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAudioCollect) ProtoMessage() {}

func (x *ReqAdminAudioCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAudioCollect.ProtoReflect.Descriptor instead.
func (*ReqAdminAudioCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{49}
}

func (x *ReqAdminAudioCollect) GetAudioId() uint64 {
	if x != nil {
		return x.AudioId
	}
	return 0
}

func (x *ReqAdminAudioCollect) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *ReqAdminAudioCollect) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResAdminAudioCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAudioCollect) Reset() {
	*x = ResAdminAudioCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAudioCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAudioCollect) ProtoMessage() {}

func (x *ResAdminAudioCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAudioCollect.ProtoReflect.Descriptor instead.
func (*ResAdminAudioCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{50}
}

func (x *ResAdminAudioCollect) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAudioCollect) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminSubjectCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OpUid uint64 `protobuf:"varint,2,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqAdminSubjectCreate) Reset() {
	*x = ReqAdminSubjectCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminSubjectCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminSubjectCreate) ProtoMessage() {}

func (x *ReqAdminSubjectCreate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminSubjectCreate.ProtoReflect.Descriptor instead.
func (*ReqAdminSubjectCreate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{51}
}

func (x *ReqAdminSubjectCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminSubjectCreate) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResAdminSubjectCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminSubjectCreate) Reset() {
	*x = ResAdminSubjectCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminSubjectCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminSubjectCreate) ProtoMessage() {}

func (x *ResAdminSubjectCreate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminSubjectCreate.ProtoReflect.Descriptor instead.
func (*ResAdminSubjectCreate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{52}
}

func (x *ResAdminSubjectCreate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResAdminSubjectCreate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminSubjectCreate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminSubjectUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OpUid uint64 `protobuf:"varint,3,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqAdminSubjectUpdate) Reset() {
	*x = ReqAdminSubjectUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminSubjectUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminSubjectUpdate) ProtoMessage() {}

func (x *ReqAdminSubjectUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminSubjectUpdate.ProtoReflect.Descriptor instead.
func (*ReqAdminSubjectUpdate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{53}
}

func (x *ReqAdminSubjectUpdate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminSubjectUpdate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminSubjectUpdate) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResAdminSubjectUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminSubjectUpdate) Reset() {
	*x = ResAdminSubjectUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminSubjectUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminSubjectUpdate) ProtoMessage() {}

func (x *ResAdminSubjectUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminSubjectUpdate.ProtoReflect.Descriptor instead.
func (*ResAdminSubjectUpdate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{54}
}

func (x *ResAdminSubjectUpdate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminSubjectUpdate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminSubjectDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OpUid uint64 `protobuf:"varint,2,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqAdminSubjectDel) Reset() {
	*x = ReqAdminSubjectDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminSubjectDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminSubjectDel) ProtoMessage() {}

func (x *ReqAdminSubjectDel) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminSubjectDel.ProtoReflect.Descriptor instead.
func (*ReqAdminSubjectDel) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{55}
}

func (x *ReqAdminSubjectDel) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminSubjectDel) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResAdminSubjectDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminSubjectDel) Reset() {
	*x = ResAdminSubjectDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminSubjectDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminSubjectDel) ProtoMessage() {}

func (x *ResAdminSubjectDel) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminSubjectDel.ProtoReflect.Descriptor instead.
func (*ResAdminSubjectDel) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{56}
}

func (x *ResAdminSubjectDel) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminSubjectDel) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminSubjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit     uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StartTime uint64 `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint64 `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ReqAdminSubjectList) Reset() {
	*x = ReqAdminSubjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminSubjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminSubjectList) ProtoMessage() {}

func (x *ReqAdminSubjectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminSubjectList.ProtoReflect.Descriptor instead.
func (*ReqAdminSubjectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{57}
}

func (x *ReqAdminSubjectList) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqAdminSubjectList) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReqAdminSubjectList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminSubjectList) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqAdminSubjectList) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ResAdminSubjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*AdminSubjectData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total   int32               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Success bool                `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string              `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminSubjectList) Reset() {
	*x = ResAdminSubjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminSubjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminSubjectList) ProtoMessage() {}

func (x *ResAdminSubjectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminSubjectList.ProtoReflect.Descriptor instead.
func (*ResAdminSubjectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{58}
}

func (x *ResAdminSubjectList) GetList() []*AdminSubjectData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ResAdminSubjectList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResAdminSubjectList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminSubjectList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAlbumCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId   uint64 `protobuf:"varint,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	SubjectId uint64 `protobuf:"varint,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ReqAdminAlbumCollect) Reset() {
	*x = ReqAdminAlbumCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAlbumCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAlbumCollect) ProtoMessage() {}

func (x *ReqAdminAlbumCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAlbumCollect.ProtoReflect.Descriptor instead.
func (*ReqAdminAlbumCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{59}
}

func (x *ReqAdminAlbumCollect) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *ReqAdminAlbumCollect) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *ReqAdminAlbumCollect) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResAdminAlbumCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAlbumCollect) Reset() {
	*x = ResAdminAlbumCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAlbumCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAlbumCollect) ProtoMessage() {}

func (x *ResAdminAlbumCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAlbumCollect.ProtoReflect.Descriptor instead.
func (*ResAdminAlbumCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{60}
}

func (x *ResAdminAlbumCollect) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAlbumCollect) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAlbumChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Choice int32  `protobuf:"varint,2,opt,name=choice,proto3" json:"choice,omitempty"`
}

func (x *ReqAdminAlbumChoice) Reset() {
	*x = ReqAdminAlbumChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAlbumChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAlbumChoice) ProtoMessage() {}

func (x *ReqAdminAlbumChoice) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAlbumChoice.ProtoReflect.Descriptor instead.
func (*ReqAdminAlbumChoice) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{61}
}

func (x *ReqAdminAlbumChoice) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminAlbumChoice) GetChoice() int32 {
	if x != nil {
		return x.Choice
	}
	return 0
}

type ResAdminAlbumChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAlbumChoice) Reset() {
	*x = ResAdminAlbumChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAlbumChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAlbumChoice) ProtoMessage() {}

func (x *ResAdminAlbumChoice) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAlbumChoice.ProtoReflect.Descriptor instead.
func (*ResAdminAlbumChoice) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{62}
}

func (x *ResAdminAlbumChoice) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAlbumChoice) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAlbumCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumStr   string `protobuf:"bytes,1,opt,name=album_str,json=albumStr,proto3" json:"album_str,omitempty"`
	SubjectStr string `protobuf:"bytes,2,opt,name=subject_str,json=subjectStr,proto3" json:"subject_str,omitempty"`
	Page       uint64 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit      uint64 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqAdminAlbumCollectList) Reset() {
	*x = ReqAdminAlbumCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAlbumCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAlbumCollectList) ProtoMessage() {}

func (x *ReqAdminAlbumCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAlbumCollectList.ProtoReflect.Descriptor instead.
func (*ReqAdminAlbumCollectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{63}
}

func (x *ReqAdminAlbumCollectList) GetAlbumStr() string {
	if x != nil {
		return x.AlbumStr
	}
	return ""
}

func (x *ReqAdminAlbumCollectList) GetSubjectStr() string {
	if x != nil {
		return x.SubjectStr
	}
	return ""
}

func (x *ReqAdminAlbumCollectList) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqAdminAlbumCollectList) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResAdminAlbumCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*AdminAlbumSubject `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total   int32                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Success bool                 `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string               `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAlbumCollectList) Reset() {
	*x = ResAdminAlbumCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAlbumCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAlbumCollectList) ProtoMessage() {}

func (x *ResAdminAlbumCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAlbumCollectList.ProtoReflect.Descriptor instead.
func (*ResAdminAlbumCollectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{64}
}

func (x *ResAdminAlbumCollectList) GetList() []*AdminAlbumSubject {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ResAdminAlbumCollectList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResAdminAlbumCollectList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAlbumCollectList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminSubjectDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqAdminSubjectDetail) Reset() {
	*x = ReqAdminSubjectDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminSubjectDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminSubjectDetail) ProtoMessage() {}

func (x *ReqAdminSubjectDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminSubjectDetail.ProtoReflect.Descriptor instead.
func (*ReqAdminSubjectDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{65}
}

func (x *ReqAdminSubjectDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResAdminSubjectDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject *AdminSubjectData `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Success bool              `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string            `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminSubjectDetail) Reset() {
	*x = ResAdminSubjectDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminSubjectDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminSubjectDetail) ProtoMessage() {}

func (x *ResAdminSubjectDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminSubjectDetail.ProtoReflect.Descriptor instead.
func (*ResAdminSubjectDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{66}
}

func (x *ResAdminSubjectDetail) GetSubject() *AdminSubjectData {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *ResAdminSubjectDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminSubjectDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminAlbumChoiceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqAdminAlbumChoiceList) Reset() {
	*x = ReqAdminAlbumChoiceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAlbumChoiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAlbumChoiceList) ProtoMessage() {}

func (x *ReqAdminAlbumChoiceList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAlbumChoiceList.ProtoReflect.Descriptor instead.
func (*ReqAdminAlbumChoiceList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{67}
}

type ResAdminAlbumChoiceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums  []*AdminAlbumData `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	Success bool              `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string            `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminAlbumChoiceList) Reset() {
	*x = ResAdminAlbumChoiceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminAlbumChoiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminAlbumChoiceList) ProtoMessage() {}

func (x *ResAdminAlbumChoiceList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminAlbumChoiceList.ProtoReflect.Descriptor instead.
func (*ResAdminAlbumChoiceList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{68}
}

func (x *ResAdminAlbumChoiceList) GetAlbums() []*AdminAlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *ResAdminAlbumChoiceList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminAlbumChoiceList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminBannerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime uint64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint64 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Status    int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Pate      int32  `protobuf:"varint,5,opt,name=pate,proto3" json:"pate,omitempty"`
	Limit     int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqAdminBannerList) Reset() {
	*x = ReqAdminBannerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminBannerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminBannerList) ProtoMessage() {}

func (x *ReqAdminBannerList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminBannerList.ProtoReflect.Descriptor instead.
func (*ReqAdminBannerList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{69}
}

func (x *ReqAdminBannerList) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqAdminBannerList) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReqAdminBannerList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqAdminBannerList) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReqAdminBannerList) GetPate() int32 {
	if x != nil {
		return x.Pate
	}
	return 0
}

func (x *ReqAdminBannerList) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResAdminBannerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*AdminBannerData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total   int32              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Success bool               `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string             `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminBannerList) Reset() {
	*x = ResAdminBannerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminBannerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminBannerList) ProtoMessage() {}

func (x *ResAdminBannerList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminBannerList.ProtoReflect.Descriptor instead.
func (*ResAdminBannerList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{70}
}

func (x *ResAdminBannerList) GetList() []*AdminBannerData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ResAdminBannerList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResAdminBannerList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminBannerList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminBannerCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Cover     string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Schema    string `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	OpUid     uint64 `protobuf:"varint,4,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	Sort      uint32 `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	StartTime uint64 `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint64 `protobuf:"varint,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ReqAdminBannerCreate) Reset() {
	*x = ReqAdminBannerCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminBannerCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminBannerCreate) ProtoMessage() {}

func (x *ReqAdminBannerCreate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminBannerCreate.ProtoReflect.Descriptor instead.
func (*ReqAdminBannerCreate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{71}
}

func (x *ReqAdminBannerCreate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqAdminBannerCreate) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqAdminBannerCreate) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *ReqAdminBannerCreate) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *ReqAdminBannerCreate) GetSort() uint32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ReqAdminBannerCreate) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqAdminBannerCreate) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ResAdminBannerCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminBannerCreate) Reset() {
	*x = ResAdminBannerCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminBannerCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminBannerCreate) ProtoMessage() {}

func (x *ResAdminBannerCreate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminBannerCreate.ProtoReflect.Descriptor instead.
func (*ResAdminBannerCreate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{72}
}

func (x *ResAdminBannerCreate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResAdminBannerCreate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminBannerCreate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminBannerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover     string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Schema    string `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	OpUid     uint64 `protobuf:"varint,5,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	Sort      uint32 `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	StartTime uint64 `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint64 `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ReqAdminBannerUpdate) Reset() {
	*x = ReqAdminBannerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminBannerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminBannerUpdate) ProtoMessage() {}

func (x *ReqAdminBannerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminBannerUpdate.ProtoReflect.Descriptor instead.
func (*ReqAdminBannerUpdate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{73}
}

func (x *ReqAdminBannerUpdate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminBannerUpdate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqAdminBannerUpdate) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqAdminBannerUpdate) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *ReqAdminBannerUpdate) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *ReqAdminBannerUpdate) GetSort() uint32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ReqAdminBannerUpdate) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqAdminBannerUpdate) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ResAdminBannerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminBannerUpdate) Reset() {
	*x = ResAdminBannerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminBannerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminBannerUpdate) ProtoMessage() {}

func (x *ResAdminBannerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminBannerUpdate.ProtoReflect.Descriptor instead.
func (*ResAdminBannerUpdate) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{74}
}

func (x *ResAdminBannerUpdate) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminBannerUpdate) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReqAdminBannerDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqAdminBannerDetail) Reset() {
	*x = ReqAdminBannerDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminBannerDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminBannerDetail) ProtoMessage() {}

func (x *ReqAdminBannerDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminBannerDetail.ProtoReflect.Descriptor instead.
func (*ReqAdminBannerDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{75}
}

func (x *ReqAdminBannerDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResAdminBannerDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banner  *AdminBannerData `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
	Success bool             `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string           `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResAdminBannerDetail) Reset() {
	*x = ResAdminBannerDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAdminBannerDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdminBannerDetail) ProtoMessage() {}

func (x *ResAdminBannerDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAdminBannerDetail.ProtoReflect.Descriptor instead.
func (*ResAdminBannerDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{76}
}

func (x *ResAdminBannerDetail) GetBanner() *AdminBannerData {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *ResAdminBannerDetail) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResAdminBannerDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AdminAlbumData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreateTime uint64 `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Level      int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *AdminAlbumData) Reset() {
	*x = AdminAlbumData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAlbumData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAlbumData) ProtoMessage() {}

func (x *AdminAlbumData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAlbumData.ProtoReflect.Descriptor instead.
func (*AdminAlbumData) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{77}
}

func (x *AdminAlbumData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAlbumData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminAlbumData) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AdminAlbumData) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type AdminSubjectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        // 专题id
	Title      string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`   // 专题名称
	Albums     []*AlbumData `protobuf:"bytes,3,rep,name=albums,proto3" json:"albums,omitempty"` // 专题下专辑列表
	AlbumTotal uint32       `protobuf:"varint,4,opt,name=album_total,json=albumTotal,proto3" json:"album_total,omitempty"`
}

func (x *AdminSubjectData) Reset() {
	*x = AdminSubjectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminSubjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminSubjectData) ProtoMessage() {}

func (x *AdminSubjectData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminSubjectData.ProtoReflect.Descriptor instead.
func (*AdminSubjectData) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{78}
}

func (x *AdminSubjectData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminSubjectData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdminSubjectData) GetAlbums() []*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *AdminSubjectData) GetAlbumTotal() uint32 {
	if x != nil {
		return x.AlbumTotal
	}
	return 0
}

type AdminAlbumSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AlbumName   string `protobuf:"bytes,2,opt,name=album_name,json=albumName,proto3" json:"album_name,omitempty"`
	SubjectName string `protobuf:"bytes,3,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	AlbumId     uint64 `protobuf:"varint,4,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	SubjectId   uint64 `protobuf:"varint,5,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
}

func (x *AdminAlbumSubject) Reset() {
	*x = AdminAlbumSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAlbumSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAlbumSubject) ProtoMessage() {}

func (x *AdminAlbumSubject) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAlbumSubject.ProtoReflect.Descriptor instead.
func (*AdminAlbumSubject) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{79}
}

func (x *AdminAlbumSubject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAlbumSubject) GetAlbumName() string {
	if x != nil {
		return x.AlbumName
	}
	return ""
}

func (x *AdminAlbumSubject) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *AdminAlbumSubject) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *AdminAlbumSubject) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

type AdminAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime   uint64            `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	PubUid       uint32            `protobuf:"varint,3,opt,name=pub_uid,json=pubUid,proto3" json:"pub_uid,omitempty"`
	PubUserName  string            `protobuf:"bytes,4,opt,name=pub_user_name,json=pubUserName,proto3" json:"pub_user_name,omitempty"`
	Broker       string            `protobuf:"bytes,5,opt,name=broker,proto3" json:"broker,omitempty"`
	Resource     string            `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	Covers       []string          `protobuf:"bytes,7,rep,name=covers,proto3" json:"covers,omitempty"`
	Source       int32             `protobuf:"varint,8,opt,name=source,proto3" json:"source,omitempty"`
	Desc         string            `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc,omitempty"`
	Title        string            `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	Labels       []string          `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty"`
	AuditStatus  int32             `protobuf:"varint,12,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`
	OpUid        uint64            `protobuf:"varint,13,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	EditDubs     []*AdminAudioEdit `protobuf:"bytes,14,rep,name=edit_dubs,json=editDubs,proto3" json:"edit_dubs,omitempty"`
	EditContents []*AdminAudioEdit `protobuf:"bytes,15,rep,name=edit_contents,json=editContents,proto3" json:"edit_contents,omitempty"`
	EditPosts    []*AdminAudioEdit `protobuf:"bytes,16,rep,name=edit_posts,json=editPosts,proto3" json:"edit_posts,omitempty"`
	EditCovers   []*AdminAudioEdit `protobuf:"bytes,17,rep,name=edit_covers,json=editCovers,proto3" json:"edit_covers,omitempty"`
}

func (x *AdminAudio) Reset() {
	*x = AdminAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAudio) ProtoMessage() {}

func (x *AdminAudio) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAudio.ProtoReflect.Descriptor instead.
func (*AdminAudio) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{80}
}

func (x *AdminAudio) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAudio) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AdminAudio) GetPubUid() uint32 {
	if x != nil {
		return x.PubUid
	}
	return 0
}

func (x *AdminAudio) GetPubUserName() string {
	if x != nil {
		return x.PubUserName
	}
	return ""
}

func (x *AdminAudio) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *AdminAudio) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *AdminAudio) GetCovers() []string {
	if x != nil {
		return x.Covers
	}
	return nil
}

func (x *AdminAudio) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *AdminAudio) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AdminAudio) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdminAudio) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AdminAudio) GetAuditStatus() int32 {
	if x != nil {
		return x.AuditStatus
	}
	return 0
}

func (x *AdminAudio) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *AdminAudio) GetEditDubs() []*AdminAudioEdit {
	if x != nil {
		return x.EditDubs
	}
	return nil
}

func (x *AdminAudio) GetEditContents() []*AdminAudioEdit {
	if x != nil {
		return x.EditContents
	}
	return nil
}

func (x *AdminAudio) GetEditPosts() []*AdminAudioEdit {
	if x != nil {
		return x.EditPosts
	}
	return nil
}

func (x *AdminAudio) GetEditCovers() []*AdminAudioEdit {
	if x != nil {
		return x.EditCovers
	}
	return nil
}

type AdminAudioAuditReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AdminAudioAuditReason) Reset() {
	*x = AdminAudioAuditReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAudioAuditReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAudioAuditReason) ProtoMessage() {}

func (x *AdminAudioAuditReason) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAudioAuditReason.ProtoReflect.Descriptor instead.
func (*AdminAudioAuditReason) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{81}
}

func (x *AdminAudioAuditReason) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAudioAuditReason) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AdminAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Intro      string `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	Cover      string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	OpUid      uint64 `protobuf:"varint,5,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	AudioCount int32  `protobuf:"varint,6,opt,name=audio_count,json=audioCount,proto3" json:"audio_count,omitempty"`
	CreateTime uint64 `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	HasSubject int32  `protobuf:"varint,8,opt,name=has_subject,json=hasSubject,proto3" json:"has_subject,omitempty"`
}

func (x *AdminAlbum) Reset() {
	*x = AdminAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAlbum) ProtoMessage() {}

func (x *AdminAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAlbum.ProtoReflect.Descriptor instead.
func (*AdminAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{82}
}

func (x *AdminAlbum) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAlbum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminAlbum) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *AdminAlbum) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AdminAlbum) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *AdminAlbum) GetAudioCount() int32 {
	if x != nil {
		return x.AudioCount
	}
	return 0
}

func (x *AdminAlbum) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AdminAlbum) GetHasSubject() int32 {
	if x != nil {
		return x.HasSubject
	}
	return 0
}

type AdminAudioCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string                    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Labels      []string                  `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	PubUid      uint32                    `protobuf:"varint,4,opt,name=pub_uid,json=pubUid,proto3" json:"pub_uid,omitempty"`
	PubUserName string                    `protobuf:"bytes,5,opt,name=pub_user_name,json=pubUserName,proto3" json:"pub_user_name,omitempty"`
	Collects    []*AdminAudioCollectAlbum `protobuf:"bytes,6,rep,name=collects,proto3" json:"collects,omitempty"`
	CreateTime  uint64                    `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *AdminAudioCollect) Reset() {
	*x = AdminAudioCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAudioCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAudioCollect) ProtoMessage() {}

func (x *AdminAudioCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAudioCollect.ProtoReflect.Descriptor instead.
func (*AdminAudioCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{83}
}

func (x *AdminAudioCollect) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAudioCollect) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdminAudioCollect) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AdminAudioCollect) GetPubUid() uint32 {
	if x != nil {
		return x.PubUid
	}
	return 0
}

func (x *AdminAudioCollect) GetPubUserName() string {
	if x != nil {
		return x.PubUserName
	}
	return ""
}

func (x *AdminAudioCollect) GetCollects() []*AdminAudioCollectAlbum {
	if x != nil {
		return x.Collects
	}
	return nil
}

func (x *AdminAudioCollect) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type AdminAudioCollectAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AdminAudioCollectAlbum) Reset() {
	*x = AdminAudioCollectAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAudioCollectAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAudioCollectAlbum) ProtoMessage() {}

func (x *AdminAudioCollectAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAudioCollectAlbum.ProtoReflect.Descriptor instead.
func (*AdminAudioCollectAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{84}
}

func (x *AdminAudioCollectAlbum) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminAudioCollectAlbum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AdminBannerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover      string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Schema     string `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	OpUid      uint64 `protobuf:"varint,5,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	Sort       uint32 `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	StartTime  uint64 `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    uint64 `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CreateTime uint64 `protobuf:"varint,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *AdminBannerData) Reset() {
	*x = AdminBannerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBannerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBannerData) ProtoMessage() {}

func (x *AdminBannerData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBannerData.ProtoReflect.Descriptor instead.
func (*AdminBannerData) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{85}
}

func (x *AdminBannerData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminBannerData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdminBannerData) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AdminBannerData) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *AdminBannerData) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *AdminBannerData) GetSort() uint32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AdminBannerData) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AdminBannerData) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AdminBannerData) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type AdminAudioEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *AdminAudioEdit) Reset() {
	*x = AdminAudioEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminAudioEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminAudioEdit) ProtoMessage() {}

func (x *AdminAudioEdit) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminAudioEdit.ProtoReflect.Descriptor instead.
func (*AdminAudioEdit) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{86}
}

func (x *AdminAudioEdit) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AdminAudioEdit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminAudioEdit) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type ReqAdminAddActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                   // 标题
	Intro       string `protobuf:"bytes,2,opt,name=intro,proto3" json:"intro,omitempty"`                                   // 介绍
	Cover       string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`                                   // 封面
	StartTime   int64  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`         // 开始时间 秒级时间戳
	EndTime     int64  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`               // 结束时间
	RankAwardId uint32 `protobuf:"varint,6,opt,name=rank_award_id,json=rankAwardId,proto3" json:"rank_award_id,omitempty"` // 排行奖励id
	JumpUrl     string `protobuf:"bytes,7,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`                //jump_url
	Id          uint32 `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`                                        // 大于0表示更新
}

func (x *ReqAdminAddActivity) Reset() {
	*x = ReqAdminAddActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAddActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAddActivity) ProtoMessage() {}

func (x *ReqAdminAddActivity) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAddActivity.ProtoReflect.Descriptor instead.
func (*ReqAdminAddActivity) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{87}
}

func (x *ReqAdminAddActivity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqAdminAddActivity) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *ReqAdminAddActivity) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqAdminAddActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqAdminAddActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReqAdminAddActivity) GetRankAwardId() uint32 {
	if x != nil {
		return x.RankAwardId
	}
	return 0
}

func (x *ReqAdminAddActivity) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *ReqAdminAddActivity) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespAdminAddActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Id      uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RespAdminAddActivity) Reset() {
	*x = RespAdminAddActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminAddActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminAddActivity) ProtoMessage() {}

func (x *RespAdminAddActivity) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminAddActivity.ProtoReflect.Descriptor instead.
func (*RespAdminAddActivity) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{88}
}

func (x *RespAdminAddActivity) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminAddActivity) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminAddActivity) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReqAdminAddAwardPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PretendIds []uint32 `protobuf:"varint,2,rep,packed,name=pretend_ids,json=pretendIds,proto3" json:"pretend_ids,omitempty"`
	Id         uint32   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"` // 大于0表示更新
}

func (x *ReqAdminAddAwardPackage) Reset() {
	*x = ReqAdminAddAwardPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAddAwardPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAddAwardPackage) ProtoMessage() {}

func (x *ReqAdminAddAwardPackage) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAddAwardPackage.ProtoReflect.Descriptor instead.
func (*ReqAdminAddAwardPackage) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{89}
}

func (x *ReqAdminAddAwardPackage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminAddAwardPackage) GetPretendIds() []uint32 {
	if x != nil {
		return x.PretendIds
	}
	return nil
}

func (x *ReqAdminAddAwardPackage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespAdminAddAwardPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Id      uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RespAdminAddAwardPackage) Reset() {
	*x = RespAdminAddAwardPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminAddAwardPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminAddAwardPackage) ProtoMessage() {}

func (x *RespAdminAddAwardPackage) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminAddAwardPackage.ProtoReflect.Descriptor instead.
func (*RespAdminAddAwardPackage) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{90}
}

func (x *RespAdminAddAwardPackage) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminAddAwardPackage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminAddAwardPackage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReqAdminAddRankAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PackageId uint64      `protobuf:"varint,2,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"` // 奖励包id
	Info      []*RankInfo `protobuf:"bytes,3,rep,name=info,proto3" json:"info,omitempty"`
	Id        uint32      `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"` // 大于0表示更新
}

func (x *ReqAdminAddRankAward) Reset() {
	*x = ReqAdminAddRankAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAddRankAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAddRankAward) ProtoMessage() {}

func (x *ReqAdminAddRankAward) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAddRankAward.ProtoReflect.Descriptor instead.
func (*ReqAdminAddRankAward) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{91}
}

func (x *ReqAdminAddRankAward) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminAddRankAward) GetPackageId() uint64 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *ReqAdminAddRankAward) GetInfo() []*RankInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReqAdminAddRankAward) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespAdminAddRankAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Id      uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RespAdminAddRankAward) Reset() {
	*x = RespAdminAddRankAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminAddRankAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminAddRankAward) ProtoMessage() {}

func (x *RespAdminAddRankAward) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminAddRankAward.ProtoReflect.Descriptor instead.
func (*RespAdminAddRankAward) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{92}
}

func (x *RespAdminAddRankAward) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminAddRankAward) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminAddRankAward) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 活动列表
type ReqAdminActivityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Id    uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`      // 搜索指定id的挑战
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"` // 根据title模糊搜索
}

func (x *ReqAdminActivityList) Reset() {
	*x = ReqAdminActivityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminActivityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminActivityList) ProtoMessage() {}

func (x *ReqAdminActivityList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminActivityList.ProtoReflect.Descriptor instead.
func (*ReqAdminActivityList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{93}
}

func (x *ReqAdminActivityList) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqAdminActivityList) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReqAdminActivityList) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminActivityList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type RespAdminActivityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    []*RespAdminActivityList_Item `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   uint32                        `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RespAdminActivityList) Reset() {
	*x = RespAdminActivityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminActivityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminActivityList) ProtoMessage() {}

func (x *RespAdminActivityList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminActivityList.ProtoReflect.Descriptor instead.
func (*RespAdminActivityList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{94}
}

func (x *RespAdminActivityList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminActivityList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminActivityList) GetData() []*RespAdminActivityList_Item {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RespAdminActivityList) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 奖励包列表
type ReqAdminAwardPackageList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Id    uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`    // 搜索指定id的挑战
	Name  string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"` // 根据name模糊搜索
}

func (x *ReqAdminAwardPackageList) Reset() {
	*x = ReqAdminAwardPackageList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAwardPackageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAwardPackageList) ProtoMessage() {}

func (x *ReqAdminAwardPackageList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAwardPackageList.ProtoReflect.Descriptor instead.
func (*ReqAdminAwardPackageList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{95}
}

func (x *ReqAdminAwardPackageList) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqAdminAwardPackageList) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReqAdminAwardPackageList) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminAwardPackageList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RespAdminAwardPackageList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    []*RespAdminAwardPackageList_Item `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   uint32                            `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RespAdminAwardPackageList) Reset() {
	*x = RespAdminAwardPackageList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminAwardPackageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminAwardPackageList) ProtoMessage() {}

func (x *RespAdminAwardPackageList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminAwardPackageList.ProtoReflect.Descriptor instead.
func (*RespAdminAwardPackageList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{96}
}

func (x *RespAdminAwardPackageList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminAwardPackageList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminAwardPackageList) GetData() []*RespAdminAwardPackageList_Item {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RespAdminAwardPackageList) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 排行奖励列表
type ReqAdminRankAwardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Id    uint32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`    // 搜索指定id的挑战
	Name  string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"` // 根据name模糊搜索
}

func (x *ReqAdminRankAwardList) Reset() {
	*x = ReqAdminRankAwardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminRankAwardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminRankAwardList) ProtoMessage() {}

func (x *ReqAdminRankAwardList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminRankAwardList.ProtoReflect.Descriptor instead.
func (*ReqAdminRankAwardList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{97}
}

func (x *ReqAdminRankAwardList) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqAdminRankAwardList) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReqAdminRankAwardList) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminRankAwardList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RespAdminRankAwardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    []*RespAdminRankAwardList_Item `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   uint32                         `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RespAdminRankAwardList) Reset() {
	*x = RespAdminRankAwardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminRankAwardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminRankAwardList) ProtoMessage() {}

func (x *RespAdminRankAwardList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminRankAwardList.ProtoReflect.Descriptor instead.
func (*RespAdminRankAwardList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{98}
}

func (x *RespAdminRankAwardList) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminRankAwardList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespAdminRankAwardList) GetData() []*RespAdminRankAwardList_Item {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RespAdminRankAwardList) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`   // 排行奖励类型 1-单个 2-范围
	Start uint32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"` // 开始名次
	End   uint32 `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`     // 结束名次
	Days  uint32 `protobuf:"varint,5,opt,name=days,proto3" json:"days,omitempty"`   // 奖励天数
}

func (x *RankInfo) Reset() {
	*x = RankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankInfo) ProtoMessage() {}

func (x *RankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankInfo.ProtoReflect.Descriptor instead.
func (*RankInfo) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{99}
}

func (x *RankInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RankInfo) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *RankInfo) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *RankInfo) GetDays() uint32 {
	if x != nil {
		return x.Days
	}
	return 0
}

// 删除活动
type ReqAdminActivityDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqAdminActivityDelete) Reset() {
	*x = ReqAdminActivityDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminActivityDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminActivityDelete) ProtoMessage() {}

func (x *ReqAdminActivityDelete) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminActivityDelete.ProtoReflect.Descriptor instead.
func (*ReqAdminActivityDelete) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{100}
}

func (x *ReqAdminActivityDelete) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespAdminActivityDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminActivityDelete) Reset() {
	*x = RespAdminActivityDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminActivityDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminActivityDelete) ProtoMessage() {}

func (x *RespAdminActivityDelete) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminActivityDelete.ProtoReflect.Descriptor instead.
func (*RespAdminActivityDelete) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{101}
}

func (x *RespAdminActivityDelete) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminActivityDelete) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 删除奖励包
type ReqAdminAwardPackageDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqAdminAwardPackageDelete) Reset() {
	*x = ReqAdminAwardPackageDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminAwardPackageDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminAwardPackageDelete) ProtoMessage() {}

func (x *ReqAdminAwardPackageDelete) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminAwardPackageDelete.ProtoReflect.Descriptor instead.
func (*ReqAdminAwardPackageDelete) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{102}
}

func (x *ReqAdminAwardPackageDelete) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespAdminAwardPackageDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminAwardPackageDelete) Reset() {
	*x = RespAdminAwardPackageDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminAwardPackageDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminAwardPackageDelete) ProtoMessage() {}

func (x *RespAdminAwardPackageDelete) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminAwardPackageDelete.ProtoReflect.Descriptor instead.
func (*RespAdminAwardPackageDelete) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{103}
}

func (x *RespAdminAwardPackageDelete) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminAwardPackageDelete) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 删除排行奖励
type ReqAdminRankAwardDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqAdminRankAwardDelete) Reset() {
	*x = ReqAdminRankAwardDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAdminRankAwardDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminRankAwardDelete) ProtoMessage() {}

func (x *ReqAdminRankAwardDelete) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminRankAwardDelete.ProtoReflect.Descriptor instead.
func (*ReqAdminRankAwardDelete) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{104}
}

func (x *ReqAdminRankAwardDelete) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespAdminRankAwardDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RespAdminRankAwardDelete) Reset() {
	*x = RespAdminRankAwardDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminRankAwardDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminRankAwardDelete) ProtoMessage() {}

func (x *RespAdminRankAwardDelete) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminRankAwardDelete.ProtoReflect.Descriptor instead.
func (*RespAdminRankAwardDelete) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{105}
}

func (x *RespAdminRankAwardDelete) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAdminRankAwardDelete) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RespAdminActivityList_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Intro         string `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	Cover         string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	StartTime     int64  `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64  `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	RankAwardId   uint32 `protobuf:"varint,7,opt,name=rank_award_id,json=rankAwardId,proto3" json:"rank_award_id,omitempty"`
	RankAwardName string `protobuf:"bytes,8,opt,name=rank_award_name,json=rankAwardName,proto3" json:"rank_award_name,omitempty"`
	JumpUrl       string `protobuf:"bytes,9,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	CreateTime    int64  `protobuf:"varint,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    int64  `protobuf:"varint,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *RespAdminActivityList_Item) Reset() {
	*x = RespAdminActivityList_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminActivityList_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminActivityList_Item) ProtoMessage() {}

func (x *RespAdminActivityList_Item) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminActivityList_Item.ProtoReflect.Descriptor instead.
func (*RespAdminActivityList_Item) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{94, 0}
}

func (x *RespAdminActivityList_Item) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RespAdminActivityList_Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RespAdminActivityList_Item) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *RespAdminActivityList_Item) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *RespAdminActivityList_Item) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RespAdminActivityList_Item) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RespAdminActivityList_Item) GetRankAwardId() uint32 {
	if x != nil {
		return x.RankAwardId
	}
	return 0
}

func (x *RespAdminActivityList_Item) GetRankAwardName() string {
	if x != nil {
		return x.RankAwardName
	}
	return ""
}

func (x *RespAdminActivityList_Item) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *RespAdminActivityList_Item) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *RespAdminActivityList_Item) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type RespAdminAwardPackageList_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PretendIds []uint32 `protobuf:"varint,3,rep,packed,name=pretend_ids,json=pretendIds,proto3" json:"pretend_ids,omitempty"` // 装扮id列表
	CreateTime int64    `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime int64    `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *RespAdminAwardPackageList_Item) Reset() {
	*x = RespAdminAwardPackageList_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminAwardPackageList_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminAwardPackageList_Item) ProtoMessage() {}

func (x *RespAdminAwardPackageList_Item) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminAwardPackageList_Item.ProtoReflect.Descriptor instead.
func (*RespAdminAwardPackageList_Item) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{96, 0}
}

func (x *RespAdminAwardPackageList_Item) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RespAdminAwardPackageList_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RespAdminAwardPackageList_Item) GetPretendIds() []uint32 {
	if x != nil {
		return x.PretendIds
	}
	return nil
}

func (x *RespAdminAwardPackageList_Item) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *RespAdminAwardPackageList_Item) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type RespAdminRankAwardList_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PackageId   uint32      `protobuf:"varint,3,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`      // 奖励包id
	PackageName string      `protobuf:"bytes,4,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"` // 奖励包名称
	Info        []*RankInfo `protobuf:"bytes,5,rep,name=info,proto3" json:"info,omitempty"`
	CreateTime  int64       `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  int64       `protobuf:"varint,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *RespAdminRankAwardList_Item) Reset() {
	*x = RespAdminRankAwardList_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAdminRankAwardList_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminRankAwardList_Item) ProtoMessage() {}

func (x *RespAdminRankAwardList_Item) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminRankAwardList_Item.ProtoReflect.Descriptor instead.
func (*RespAdminRankAwardList_Item) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP(), []int{98, 0}
}

func (x *RespAdminRankAwardList_Item) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RespAdminRankAwardList_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RespAdminRankAwardList_Item) GetPackageId() uint32 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *RespAdminRankAwardList_Item) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *RespAdminRankAwardList_Item) GetInfo() []*RankInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RespAdminRankAwardList_Item) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *RespAdminRankAwardList_Item) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

var File_rpc_voice_lover_voice_lover_admin_message_proto protoreflect.FileDescriptor

var file_rpc_voice_lover_voice_lover_admin_message_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x1a, 0x28, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x3d, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x22,
	0x22, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f,
	0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55,
	0x69, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x36, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x22, 0x0f,
	0x0a, 0x0d, 0x52, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x27, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x52, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x1a, 0x5d, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x67, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x7c, 0x0a, 0x12, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x74, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x78, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x4c,
	0x0a, 0x0e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x34, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x10, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x13,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x22, 0xa4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x63, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72,
	0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xba, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xca, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x24, 0x0a, 0x12,
	0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4d, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x37, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x22, 0xf9, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x8e, 0x01,
	0x0a, 0x11, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x25,
	0x0a, 0x13, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x0a, 0x05,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x62,
	0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x05, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0xa8, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x41, 0x0a, 0x13, 0x52, 0x65,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x81, 0x01,
	0x0a, 0x12, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69,
	0x64, 0x22, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x8c, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x07,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6c,
	0x0a, 0x13, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x13,
	0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x39, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x44, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7c, 0x0a, 0x13, 0x52, 0x65,
	0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x25, 0x0a, 0x13, 0x52,
	0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x78, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x0a, 0x05, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xb2, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0xec, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x53, 0x74, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e,
	0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x60, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x42, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x52, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70,
	0x55, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3b, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6f, 0x70, 0x55, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x64, 0x0a, 0x14,
	0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3d, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x82, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x71,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x73,
	0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x53,
	0x74, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x98, 0x01,
	0x0a, 0x18, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x27, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3f, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72,
	0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3b, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x71,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xcf, 0x01, 0x0a, 0x14, 0x52,
	0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x14,
	0x52, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x26, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x3c, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6b, 0x0a, 0x0e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x91, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9f, 0x01, 0x0a,
	0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xf0,
	0x04, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x70, 0x75, 0x62, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x09, 0x65,
	0x64, 0x69, 0x74, 0x5f, 0x64, 0x75, 0x62, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45,
	0x64, 0x69, 0x74, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x44, 0x75, 0x62, 0x73, 0x12, 0x48, 0x0a,
	0x0d, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x64, 0x69, 0x74, 0x52, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x62,
	0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x64, 0x69, 0x74,
	0x52, 0x09, 0x65, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x65,
	0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x45, 0x64, 0x69, 0x74, 0x52, 0x0a, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x73, 0x22, 0x3f, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61,
	0x73, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x68, 0x61, 0x73, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xf8, 0x01, 0x0a, 0x11,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x70, 0x75, 0x62, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x08,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x08, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x16, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70,
	0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x45, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x22, 0xe0, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72,
	0x61, 0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75,
	0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75,
	0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x17, 0x52, 0x65, 0x71,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x74,
	0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64,
	0x64, 0x52, 0x61, 0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x62,
	0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x53, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64,
	0x52, 0x61, 0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xdc, 0x03,
	0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xbb,
	0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x6b, 0x5f,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x61, 0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x18,
	0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb6, 0x02, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a,
	0x8d, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x65, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x84, 0x03, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x44, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x62,
	0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xe1, 0x01, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5a, 0x0a,
	0x08, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x52, 0x65, 0x71,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2c, 0x0a, 0x1a, 0x52, 0x65,
	0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x61, 0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46,
	0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x61, 0x6f, 0x6c, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x74,
	0x2f, 0x72, 0x62, 0x70, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x5f, 0x70,
	0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescOnce sync.Once
	file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescData = file_rpc_voice_lover_voice_lover_admin_message_proto_rawDesc
)

func file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescGZIP() []byte {
	file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescOnce.Do(func() {
		file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescData)
	})
	return file_rpc_voice_lover_voice_lover_admin_message_proto_rawDescData
}

var file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes = make([]protoimpl.MessageInfo, 110)
var file_rpc_voice_lover_voice_lover_admin_message_proto_goTypes = []any{
	(*ReqCreateSubject)(nil),               // 0: rbp.rpc.voice_lover.ReqCreateSubject
	(*ResCreateSubject)(nil),               // 1: rbp.rpc.voice_lover.ResCreateSubject
	(*ReqUpdateSubject)(nil),               // 2: rbp.rpc.voice_lover.ReqUpdateSubject
	(*ResUpdateSubject)(nil),               // 3: rbp.rpc.voice_lover.ResUpdateSubject
	(*ReqDelSubject)(nil),                  // 4: rbp.rpc.voice_lover.ReqDelSubject
	(*ResDelSubject)(nil),                  // 5: rbp.rpc.voice_lover.ResDelSubject
	(*ReqGetSubjectDetail)(nil),            // 6: rbp.rpc.voice_lover.ReqGetSubjectDetail
	(*ResGetSubjectDetail)(nil),            // 7: rbp.rpc.voice_lover.ResGetSubjectDetail
	(*ReqGetSubjectList)(nil),              // 8: rbp.rpc.voice_lover.ReqGetSubjectList
	(*ResGetSubjectList)(nil),              // 9: rbp.rpc.voice_lover.ResGetSubjectList
	(*ReqGetAlbumCollect)(nil),             // 10: rbp.rpc.voice_lover.ReqGetAlbumCollect
	(*ResGetAlbumCollect)(nil),             // 11: rbp.rpc.voice_lover.ResGetAlbumCollect
	(*AlbumCollectData)(nil),               // 12: rbp.rpc.voice_lover.AlbumCollectData
	(*ReqAlbumCollect)(nil),                // 13: rbp.rpc.voice_lover.ReqAlbumCollect
	(*ResAlbumCollect)(nil),                // 14: rbp.rpc.voice_lover.ResAlbumCollect
	(*ReqAlbumChoice)(nil),                 // 15: rbp.rpc.voice_lover.ReqAlbumChoice
	(*ResAlbumChoice)(nil),                 // 16: rbp.rpc.voice_lover.ResAlbumChoice
	(*ReqGetAlbumChoice)(nil),              // 17: rbp.rpc.voice_lover.ReqGetAlbumChoice
	(*ResGetAlbumChoice)(nil),              // 18: rbp.rpc.voice_lover.ResGetAlbumChoice
	(*ReqGetBannerList)(nil),               // 19: rbp.rpc.voice_lover.ReqGetBannerList
	(*ResGetBannerList)(nil),               // 20: rbp.rpc.voice_lover.ResGetBannerList
	(*ReqCreateBanner)(nil),                // 21: rbp.rpc.voice_lover.ReqCreateBanner
	(*ResCreateBanner)(nil),                // 22: rbp.rpc.voice_lover.ResCreateBanner
	(*ReqUpdateBanner)(nil),                // 23: rbp.rpc.voice_lover.ReqUpdateBanner
	(*ResUpdateBanner)(nil),                // 24: rbp.rpc.voice_lover.ResUpdateBanner
	(*ReqGetBannerDetail)(nil),             // 25: rbp.rpc.voice_lover.ReqGetBannerDetail
	(*ResGetBannerDetail)(nil),             // 26: rbp.rpc.voice_lover.ResGetBannerDetail
	(*ReqAdminAudioList)(nil),              // 27: rbp.rpc.voice_lover.ReqAdminAudioList
	(*ResAdminAudioList)(nil),              // 28: rbp.rpc.voice_lover.ResAdminAudioList
	(*ReqAdminAudioDetail)(nil),            // 29: rbp.rpc.voice_lover.ReqAdminAudioDetail
	(*ResAdminAudioDetail)(nil),            // 30: rbp.rpc.voice_lover.ResAdminAudioDetail
	(*ReqAdminAudioUpdate)(nil),            // 31: rbp.rpc.voice_lover.ReqAdminAudioUpdate
	(*ResAdminAudioUpdate)(nil),            // 32: rbp.rpc.voice_lover.ResAdminAudioUpdate
	(*ReqAdminAudioAudit)(nil),             // 33: rbp.rpc.voice_lover.ReqAdminAudioAudit
	(*ResAdminAudioAudit)(nil),             // 34: rbp.rpc.voice_lover.ResAdminAudioAudit
	(*ReqAdminAudioAuditReason)(nil),       // 35: rbp.rpc.voice_lover.ReqAdminAudioAuditReason
	(*ResAdminAudioAuditReason)(nil),       // 36: rbp.rpc.voice_lover.ResAdminAudioAuditReason
	(*ReqAdminAlbumCreate)(nil),            // 37: rbp.rpc.voice_lover.ReqAdminAlbumCreate
	(*ResAdminAlbumCreate)(nil),            // 38: rbp.rpc.voice_lover.ResAdminAlbumCreate
	(*ReqAdminAlbumDel)(nil),               // 39: rbp.rpc.voice_lover.ReqAdminAlbumDel
	(*ResAdminAlbumDel)(nil),               // 40: rbp.rpc.voice_lover.ResAdminAlbumDel
	(*ReqAdminAlbumUpdate)(nil),            // 41: rbp.rpc.voice_lover.ReqAdminAlbumUpdate
	(*ResAdminAlbumUpdate)(nil),            // 42: rbp.rpc.voice_lover.ResAdminAlbumUpdate
	(*ReqAdminAlbumDetail)(nil),            // 43: rbp.rpc.voice_lover.ReqAdminAlbumDetail
	(*ResAdminAlbumDetail)(nil),            // 44: rbp.rpc.voice_lover.ResAdminAlbumDetail
	(*ReqAdminAlbumList)(nil),              // 45: rbp.rpc.voice_lover.ReqAdminAlbumList
	(*ResAdminAlbumList)(nil),              // 46: rbp.rpc.voice_lover.ResAdminAlbumList
	(*ReqAdminAudioCollectList)(nil),       // 47: rbp.rpc.voice_lover.ReqAdminAudioCollectList
	(*ResAdminAudioCollectList)(nil),       // 48: rbp.rpc.voice_lover.ResAdminAudioCollectList
	(*ReqAdminAudioCollect)(nil),           // 49: rbp.rpc.voice_lover.ReqAdminAudioCollect
	(*ResAdminAudioCollect)(nil),           // 50: rbp.rpc.voice_lover.ResAdminAudioCollect
	(*ReqAdminSubjectCreate)(nil),          // 51: rbp.rpc.voice_lover.ReqAdminSubjectCreate
	(*ResAdminSubjectCreate)(nil),          // 52: rbp.rpc.voice_lover.ResAdminSubjectCreate
	(*ReqAdminSubjectUpdate)(nil),          // 53: rbp.rpc.voice_lover.ReqAdminSubjectUpdate
	(*ResAdminSubjectUpdate)(nil),          // 54: rbp.rpc.voice_lover.ResAdminSubjectUpdate
	(*ReqAdminSubjectDel)(nil),             // 55: rbp.rpc.voice_lover.ReqAdminSubjectDel
	(*ResAdminSubjectDel)(nil),             // 56: rbp.rpc.voice_lover.ResAdminSubjectDel
	(*ReqAdminSubjectList)(nil),            // 57: rbp.rpc.voice_lover.ReqAdminSubjectList
	(*ResAdminSubjectList)(nil),            // 58: rbp.rpc.voice_lover.ResAdminSubjectList
	(*ReqAdminAlbumCollect)(nil),           // 59: rbp.rpc.voice_lover.ReqAdminAlbumCollect
	(*ResAdminAlbumCollect)(nil),           // 60: rbp.rpc.voice_lover.ResAdminAlbumCollect
	(*ReqAdminAlbumChoice)(nil),            // 61: rbp.rpc.voice_lover.ReqAdminAlbumChoice
	(*ResAdminAlbumChoice)(nil),            // 62: rbp.rpc.voice_lover.ResAdminAlbumChoice
	(*ReqAdminAlbumCollectList)(nil),       // 63: rbp.rpc.voice_lover.ReqAdminAlbumCollectList
	(*ResAdminAlbumCollectList)(nil),       // 64: rbp.rpc.voice_lover.ResAdminAlbumCollectList
	(*ReqAdminSubjectDetail)(nil),          // 65: rbp.rpc.voice_lover.ReqAdminSubjectDetail
	(*ResAdminSubjectDetail)(nil),          // 66: rbp.rpc.voice_lover.ResAdminSubjectDetail
	(*ReqAdminAlbumChoiceList)(nil),        // 67: rbp.rpc.voice_lover.ReqAdminAlbumChoiceList
	(*ResAdminAlbumChoiceList)(nil),        // 68: rbp.rpc.voice_lover.ResAdminAlbumChoiceList
	(*ReqAdminBannerList)(nil),             // 69: rbp.rpc.voice_lover.ReqAdminBannerList
	(*ResAdminBannerList)(nil),             // 70: rbp.rpc.voice_lover.ResAdminBannerList
	(*ReqAdminBannerCreate)(nil),           // 71: rbp.rpc.voice_lover.ReqAdminBannerCreate
	(*ResAdminBannerCreate)(nil),           // 72: rbp.rpc.voice_lover.ResAdminBannerCreate
	(*ReqAdminBannerUpdate)(nil),           // 73: rbp.rpc.voice_lover.ReqAdminBannerUpdate
	(*ResAdminBannerUpdate)(nil),           // 74: rbp.rpc.voice_lover.ResAdminBannerUpdate
	(*ReqAdminBannerDetail)(nil),           // 75: rbp.rpc.voice_lover.ReqAdminBannerDetail
	(*ResAdminBannerDetail)(nil),           // 76: rbp.rpc.voice_lover.ResAdminBannerDetail
	(*AdminAlbumData)(nil),                 // 77: rbp.rpc.voice_lover.AdminAlbumData
	(*AdminSubjectData)(nil),               // 78: rbp.rpc.voice_lover.AdminSubjectData
	(*AdminAlbumSubject)(nil),              // 79: rbp.rpc.voice_lover.AdminAlbumSubject
	(*AdminAudio)(nil),                     // 80: rbp.rpc.voice_lover.AdminAudio
	(*AdminAudioAuditReason)(nil),          // 81: rbp.rpc.voice_lover.AdminAudioAuditReason
	(*AdminAlbum)(nil),                     // 82: rbp.rpc.voice_lover.AdminAlbum
	(*AdminAudioCollect)(nil),              // 83: rbp.rpc.voice_lover.AdminAudioCollect
	(*AdminAudioCollectAlbum)(nil),         // 84: rbp.rpc.voice_lover.AdminAudioCollectAlbum
	(*AdminBannerData)(nil),                // 85: rbp.rpc.voice_lover.AdminBannerData
	(*AdminAudioEdit)(nil),                 // 86: rbp.rpc.voice_lover.AdminAudioEdit
	(*ReqAdminAddActivity)(nil),            // 87: rbp.rpc.voice_lover.ReqAdminAddActivity
	(*RespAdminAddActivity)(nil),           // 88: rbp.rpc.voice_lover.RespAdminAddActivity
	(*ReqAdminAddAwardPackage)(nil),        // 89: rbp.rpc.voice_lover.ReqAdminAddAwardPackage
	(*RespAdminAddAwardPackage)(nil),       // 90: rbp.rpc.voice_lover.RespAdminAddAwardPackage
	(*ReqAdminAddRankAward)(nil),           // 91: rbp.rpc.voice_lover.ReqAdminAddRankAward
	(*RespAdminAddRankAward)(nil),          // 92: rbp.rpc.voice_lover.RespAdminAddRankAward
	(*ReqAdminActivityList)(nil),           // 93: rbp.rpc.voice_lover.ReqAdminActivityList
	(*RespAdminActivityList)(nil),          // 94: rbp.rpc.voice_lover.RespAdminActivityList
	(*ReqAdminAwardPackageList)(nil),       // 95: rbp.rpc.voice_lover.ReqAdminAwardPackageList
	(*RespAdminAwardPackageList)(nil),      // 96: rbp.rpc.voice_lover.RespAdminAwardPackageList
	(*ReqAdminRankAwardList)(nil),          // 97: rbp.rpc.voice_lover.ReqAdminRankAwardList
	(*RespAdminRankAwardList)(nil),         // 98: rbp.rpc.voice_lover.RespAdminRankAwardList
	(*RankInfo)(nil),                       // 99: rbp.rpc.voice_lover.RankInfo
	(*ReqAdminActivityDelete)(nil),         // 100: rbp.rpc.voice_lover.ReqAdminActivityDelete
	(*RespAdminActivityDelete)(nil),        // 101: rbp.rpc.voice_lover.RespAdminActivityDelete
	(*ReqAdminAwardPackageDelete)(nil),     // 102: rbp.rpc.voice_lover.ReqAdminAwardPackageDelete
	(*RespAdminAwardPackageDelete)(nil),    // 103: rbp.rpc.voice_lover.RespAdminAwardPackageDelete
	(*ReqAdminRankAwardDelete)(nil),        // 104: rbp.rpc.voice_lover.ReqAdminRankAwardDelete
	(*RespAdminRankAwardDelete)(nil),       // 105: rbp.rpc.voice_lover.RespAdminRankAwardDelete
	nil,                                    // 106: rbp.rpc.voice_lover.ResGetSubjectDetail.SubjectsEntry
	(*RespAdminActivityList_Item)(nil),     // 107: rbp.rpc.voice_lover.RespAdminActivityList.Item
	(*RespAdminAwardPackageList_Item)(nil), // 108: rbp.rpc.voice_lover.RespAdminAwardPackageList.Item
	(*RespAdminRankAwardList_Item)(nil),    // 109: rbp.rpc.voice_lover.RespAdminRankAwardList.Item
	(*SubjectData)(nil),                    // 110: rbp.rpc.voice_lover.SubjectData
	(*AlbumData)(nil),                      // 111: rbp.rpc.voice_lover.AlbumData
	(*BannerData)(nil),                     // 112: rbp.rpc.voice_lover.BannerData
}
var file_rpc_voice_lover_voice_lover_admin_message_proto_depIdxs = []int32{
	106, // 0: rbp.rpc.voice_lover.ResGetSubjectDetail.subjects:type_name -> rbp.rpc.voice_lover.ResGetSubjectDetail.SubjectsEntry
	110, // 1: rbp.rpc.voice_lover.ResGetSubjectList.subjects:type_name -> rbp.rpc.voice_lover.SubjectData
	12,  // 2: rbp.rpc.voice_lover.ResGetAlbumCollect.album_collects:type_name -> rbp.rpc.voice_lover.AlbumCollectData
	111, // 3: rbp.rpc.voice_lover.ResGetAlbumChoice.albums:type_name -> rbp.rpc.voice_lover.AlbumData
	112, // 4: rbp.rpc.voice_lover.ResGetBannerList.banners:type_name -> rbp.rpc.voice_lover.BannerData
	112, // 5: rbp.rpc.voice_lover.ResGetBannerDetail.banner:type_name -> rbp.rpc.voice_lover.BannerData
	80,  // 6: rbp.rpc.voice_lover.ResAdminAudioList.audios:type_name -> rbp.rpc.voice_lover.AdminAudio
	80,  // 7: rbp.rpc.voice_lover.ResAdminAudioDetail.audio:type_name -> rbp.rpc.voice_lover.AdminAudio
	81,  // 8: rbp.rpc.voice_lover.ResAdminAudioAuditReason.reasons:type_name -> rbp.rpc.voice_lover.AdminAudioAuditReason
	82,  // 9: rbp.rpc.voice_lover.ResAdminAlbumDetail.album:type_name -> rbp.rpc.voice_lover.AdminAlbum
	82,  // 10: rbp.rpc.voice_lover.ResAdminAlbumList.albums:type_name -> rbp.rpc.voice_lover.AdminAlbum
	83,  // 11: rbp.rpc.voice_lover.ResAdminAudioCollectList.audios:type_name -> rbp.rpc.voice_lover.AdminAudioCollect
	78,  // 12: rbp.rpc.voice_lover.ResAdminSubjectList.list:type_name -> rbp.rpc.voice_lover.AdminSubjectData
	79,  // 13: rbp.rpc.voice_lover.ResAdminAlbumCollectList.list:type_name -> rbp.rpc.voice_lover.AdminAlbumSubject
	78,  // 14: rbp.rpc.voice_lover.ResAdminSubjectDetail.subject:type_name -> rbp.rpc.voice_lover.AdminSubjectData
	77,  // 15: rbp.rpc.voice_lover.ResAdminAlbumChoiceList.albums:type_name -> rbp.rpc.voice_lover.AdminAlbumData
	85,  // 16: rbp.rpc.voice_lover.ResAdminBannerList.list:type_name -> rbp.rpc.voice_lover.AdminBannerData
	85,  // 17: rbp.rpc.voice_lover.ResAdminBannerDetail.banner:type_name -> rbp.rpc.voice_lover.AdminBannerData
	111, // 18: rbp.rpc.voice_lover.AdminSubjectData.albums:type_name -> rbp.rpc.voice_lover.AlbumData
	86,  // 19: rbp.rpc.voice_lover.AdminAudio.edit_dubs:type_name -> rbp.rpc.voice_lover.AdminAudioEdit
	86,  // 20: rbp.rpc.voice_lover.AdminAudio.edit_contents:type_name -> rbp.rpc.voice_lover.AdminAudioEdit
	86,  // 21: rbp.rpc.voice_lover.AdminAudio.edit_posts:type_name -> rbp.rpc.voice_lover.AdminAudioEdit
	86,  // 22: rbp.rpc.voice_lover.AdminAudio.edit_covers:type_name -> rbp.rpc.voice_lover.AdminAudioEdit
	84,  // 23: rbp.rpc.voice_lover.AdminAudioCollect.collects:type_name -> rbp.rpc.voice_lover.AdminAudioCollectAlbum
	99,  // 24: rbp.rpc.voice_lover.ReqAdminAddRankAward.info:type_name -> rbp.rpc.voice_lover.RankInfo
	107, // 25: rbp.rpc.voice_lover.RespAdminActivityList.data:type_name -> rbp.rpc.voice_lover.RespAdminActivityList.Item
	108, // 26: rbp.rpc.voice_lover.RespAdminAwardPackageList.data:type_name -> rbp.rpc.voice_lover.RespAdminAwardPackageList.Item
	109, // 27: rbp.rpc.voice_lover.RespAdminRankAwardList.data:type_name -> rbp.rpc.voice_lover.RespAdminRankAwardList.Item
	110, // 28: rbp.rpc.voice_lover.ResGetSubjectDetail.SubjectsEntry.value:type_name -> rbp.rpc.voice_lover.SubjectData
	99,  // 29: rbp.rpc.voice_lover.RespAdminRankAwardList.Item.info:type_name -> rbp.rpc.voice_lover.RankInfo
	30,  // [30:30] is the sub-list for method output_type
	30,  // [30:30] is the sub-list for method input_type
	30,  // [30:30] is the sub-list for extension type_name
	30,  // [30:30] is the sub-list for extension extendee
	0,   // [0:30] is the sub-list for field type_name
}

func init() { file_rpc_voice_lover_voice_lover_admin_message_proto_init() }
func file_rpc_voice_lover_voice_lover_admin_message_proto_init() {
	if File_rpc_voice_lover_voice_lover_admin_message_proto != nil {
		return
	}
	file_rpc_voice_lover_voice_lover_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ReqCreateSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ResCreateSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReqUpdateSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ResUpdateSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ReqDelSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ResDelSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetSubjectDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ResGetSubjectDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetSubjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ResGetSubjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetAlbumCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ResGetAlbumCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AlbumCollectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAlbumCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ResAlbumCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAlbumChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ResAlbumChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetAlbumChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ResGetAlbumChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetBannerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ResGetBannerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ReqCreateBanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ResCreateBanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ReqUpdateBanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ResUpdateBanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetBannerDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ResGetBannerDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAudioList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAudioList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAudioDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAudioDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAudioUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAudioUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAudioAudit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAudioAudit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAudioAuditReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAudioAuditReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAlbumCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAlbumCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAlbumDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAlbumDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAlbumUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAlbumUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAudioCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAudioCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAudioCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAudioCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminSubjectCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminSubjectCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminSubjectUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminSubjectUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminSubjectDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminSubjectDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminSubjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminSubjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAlbumCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAlbumCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAlbumChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAlbumChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAlbumCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAlbumCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminSubjectDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminSubjectDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAlbumChoiceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminAlbumChoiceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminBannerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminBannerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminBannerCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminBannerCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminBannerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminBannerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminBannerDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*ResAdminBannerDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAlbumData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*AdminSubjectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAlbumSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAudioAuditReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAudioCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAudioCollectAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*AdminBannerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*AdminAudioEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAddActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminAddActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAddAwardPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminAddAwardPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAddRankAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminAddRankAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminActivityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminActivityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAwardPackageList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminAwardPackageList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminRankAwardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminRankAwardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*RankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminActivityDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminActivityDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminAwardPackageDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminAwardPackageDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*ReqAdminRankAwardDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminRankAwardDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminActivityList_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminAwardPackageList_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*RespAdminRankAwardList_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_voice_lover_voice_lover_admin_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   110,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_voice_lover_voice_lover_admin_message_proto_goTypes,
		DependencyIndexes: file_rpc_voice_lover_voice_lover_admin_message_proto_depIdxs,
		MessageInfos:      file_rpc_voice_lover_voice_lover_admin_message_proto_msgTypes,
	}.Build()
	File_rpc_voice_lover_voice_lover_admin_message_proto = out.File
	file_rpc_voice_lover_voice_lover_admin_message_proto_rawDesc = nil
	file_rpc_voice_lover_voice_lover_admin_message_proto_goTypes = nil
	file_rpc_voice_lover_voice_lover_admin_message_proto_depIdxs = nil
}
