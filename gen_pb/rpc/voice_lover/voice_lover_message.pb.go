// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.5
// source: rpc/voice_lover/voice_lover_message.proto

package voice_lover

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResBase) Reset() {
	*x = ResBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResBase) ProtoMessage() {}

func (x *ResBase) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResBase.ProtoReflect.Descriptor instead.
func (*ResBase) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{0}
}

type ReqPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Resource    string `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Source      int32  `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`
	Cover       string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Desc        string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	EditDub     string `protobuf:"bytes,7,opt,name=edit_dub,json=editDub,proto3" json:"edit_dub,omitempty"`
	EditContent string `protobuf:"bytes,8,opt,name=edit_content,json=editContent,proto3" json:"edit_content,omitempty"`
	EditPost    string `protobuf:"bytes,9,opt,name=edit_post,json=editPost,proto3" json:"edit_post,omitempty"`
	EditCover   string `protobuf:"bytes,10,opt,name=edit_cover,json=editCover,proto3" json:"edit_cover,omitempty"`
	Labels      string `protobuf:"bytes,11,opt,name=labels,proto3" json:"labels,omitempty"`
	Seconds     uint32 `protobuf:"varint,12,opt,name=seconds,proto3" json:"seconds,omitempty"`
	ActivityId  uint32 `protobuf:"varint,13,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (x *ReqPost) Reset() {
	*x = ReqPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPost) ProtoMessage() {}

func (x *ReqPost) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPost.ProtoReflect.Descriptor instead.
func (*ReqPost) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{1}
}

func (x *ReqPost) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqPost) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ReqPost) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *ReqPost) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqPost) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ReqPost) GetEditDub() string {
	if x != nil {
		return x.EditDub
	}
	return ""
}

func (x *ReqPost) GetEditContent() string {
	if x != nil {
		return x.EditContent
	}
	return ""
}

func (x *ReqPost) GetEditPost() string {
	if x != nil {
		return x.EditPost
	}
	return ""
}

func (x *ReqPost) GetEditCover() string {
	if x != nil {
		return x.EditCover
	}
	return ""
}

func (x *ReqPost) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

func (x *ReqPost) GetSeconds() uint32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *ReqPost) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type ReqGetAlbumInfoById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqGetAlbumInfoById) Reset() {
	*x = ReqGetAlbumInfoById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAlbumInfoById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAlbumInfoById) ProtoMessage() {}

func (x *ReqGetAlbumInfoById) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAlbumInfoById.ProtoReflect.Descriptor instead.
func (*ReqGetAlbumInfoById) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{2}
}

func (x *ReqGetAlbumInfoById) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResGetAlbumInfoById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album *AlbumData `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *ResGetAlbumInfoById) Reset() {
	*x = ResGetAlbumInfoById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAlbumInfoById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAlbumInfoById) ProtoMessage() {}

func (x *ResGetAlbumInfoById) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAlbumInfoById.ProtoReflect.Descriptor instead.
func (*ResGetAlbumInfoById) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{3}
}

func (x *ResGetAlbumInfoById) GetAlbum() *AlbumData {
	if x != nil {
		return x.Album
	}
	return nil
}

type ReqGetRecAlbums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ReqGetRecAlbums) Reset() {
	*x = ReqGetRecAlbums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetRecAlbums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetRecAlbums) ProtoMessage() {}

func (x *ReqGetRecAlbums) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetRecAlbums.ProtoReflect.Descriptor instead.
func (*ReqGetRecAlbums) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{4}
}

func (x *ReqGetRecAlbums) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ReqGetRecCommonAlbums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ReqGetRecCommonAlbums) Reset() {
	*x = ReqGetRecCommonAlbums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetRecCommonAlbums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetRecCommonAlbums) ProtoMessage() {}

func (x *ReqGetRecCommonAlbums) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetRecCommonAlbums.ProtoReflect.Descriptor instead.
func (*ReqGetRecCommonAlbums) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{5}
}

func (x *ReqGetRecCommonAlbums) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ResGetRecAlbums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums []*AlbumData `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
}

func (x *ResGetRecAlbums) Reset() {
	*x = ResGetRecAlbums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetRecAlbums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetRecAlbums) ProtoMessage() {}

func (x *ResGetRecAlbums) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetRecAlbums.ProtoReflect.Descriptor instead.
func (*ResGetRecAlbums) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{6}
}

func (x *ResGetRecAlbums) GetAlbums() []*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

type ReqGetRecBanners struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ReqGetRecBanners) Reset() {
	*x = ReqGetRecBanners{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetRecBanners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetRecBanners) ProtoMessage() {}

func (x *ReqGetRecBanners) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetRecBanners.ProtoReflect.Descriptor instead.
func (*ReqGetRecBanners) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{7}
}

func (x *ReqGetRecBanners) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ResGetRecBanners struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banners []*BannerData `protobuf:"bytes,1,rep,name=banners,proto3" json:"banners,omitempty"`
}

func (x *ResGetRecBanners) Reset() {
	*x = ResGetRecBanners{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetRecBanners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetRecBanners) ProtoMessage() {}

func (x *ResGetRecBanners) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetRecBanners.ProtoReflect.Descriptor instead.
func (*ResGetRecBanners) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{8}
}

func (x *ResGetRecBanners) GetBanners() []*BannerData {
	if x != nil {
		return x.Banners
	}
	return nil
}

type ReqGetAlbumsByPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choice uint32 `protobuf:"varint,1,opt,name=choice,proto3" json:"choice,omitempty"` // 0-默认 1-精选
	Page   uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit  uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqGetAlbumsByPage) Reset() {
	*x = ReqGetAlbumsByPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAlbumsByPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAlbumsByPage) ProtoMessage() {}

func (x *ReqGetAlbumsByPage) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAlbumsByPage.ProtoReflect.Descriptor instead.
func (*ReqGetAlbumsByPage) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{9}
}

func (x *ReqGetAlbumsByPage) GetChoice() uint32 {
	if x != nil {
		return x.Choice
	}
	return 0
}

func (x *ReqGetAlbumsByPage) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqGetAlbumsByPage) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ReqGetSubjectAlbumsByPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId uint64 `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Page      uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit     uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqGetSubjectAlbumsByPage) Reset() {
	*x = ReqGetSubjectAlbumsByPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetSubjectAlbumsByPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetSubjectAlbumsByPage) ProtoMessage() {}

func (x *ReqGetSubjectAlbumsByPage) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetSubjectAlbumsByPage.ProtoReflect.Descriptor instead.
func (*ReqGetSubjectAlbumsByPage) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{10}
}

func (x *ReqGetSubjectAlbumsByPage) GetSubjectId() uint64 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *ReqGetSubjectAlbumsByPage) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqGetSubjectAlbumsByPage) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResGetAlbumsByPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums  []*AlbumData `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	HasMore bool         `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *ResGetAlbumsByPage) Reset() {
	*x = ResGetAlbumsByPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAlbumsByPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAlbumsByPage) ProtoMessage() {}

func (x *ResGetAlbumsByPage) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAlbumsByPage.ProtoReflect.Descriptor instead.
func (*ResGetAlbumsByPage) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{11}
}

func (x *ResGetAlbumsByPage) GetAlbums() []*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *ResGetAlbumsByPage) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type ReqGetRecSubjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ReqGetRecSubjects) Reset() {
	*x = ReqGetRecSubjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetRecSubjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetRecSubjects) ProtoMessage() {}

func (x *ReqGetRecSubjects) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetRecSubjects.ProtoReflect.Descriptor instead.
func (*ReqGetRecSubjects) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{12}
}

func (x *ReqGetRecSubjects) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ResGetRecSubjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subjects []*SubjectData `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty"`
}

func (x *ResGetRecSubjects) Reset() {
	*x = ResGetRecSubjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetRecSubjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetRecSubjects) ProtoMessage() {}

func (x *ResGetRecSubjects) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetRecSubjects.ProtoReflect.Descriptor instead.
func (*ResGetRecSubjects) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{13}
}

func (x *ResGetRecSubjects) GetSubjects() []*SubjectData {
	if x != nil {
		return x.Subjects
	}
	return nil
}

type ReqGetAudioEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqGetAudioEdit) Reset() {
	*x = ReqGetAudioEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAudioEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAudioEdit) ProtoMessage() {}

func (x *ReqGetAudioEdit) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAudioEdit.ProtoReflect.Descriptor instead.
func (*ReqGetAudioEdit) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{14}
}

func (x *ReqGetAudioEdit) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResGetAudioEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Edits []*AudioEditData `protobuf:"bytes,1,rep,name=edits,proto3" json:"edits,omitempty"`
}

func (x *ResGetAudioEdit) Reset() {
	*x = ResGetAudioEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAudioEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAudioEdit) ProtoMessage() {}

func (x *ResGetAudioEdit) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAudioEdit.ProtoReflect.Descriptor instead.
func (*ResGetAudioEdit) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{15}
}

func (x *ResGetAudioEdit) GetEdits() []*AudioEditData {
	if x != nil {
		return x.Edits
	}
	return nil
}

type ReqGetAudioDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid uint32 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ReqGetAudioDetail) Reset() {
	*x = ReqGetAudioDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAudioDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAudioDetail) ProtoMessage() {}

func (x *ReqGetAudioDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAudioDetail.ProtoReflect.Descriptor instead.
func (*ReqGetAudioDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{16}
}

func (x *ReqGetAudioDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqGetAudioDetail) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ResGetAudioDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audio *AudioData   `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`
	Album []*AlbumData `protobuf:"bytes,2,rep,name=album,proto3" json:"album,omitempty"`
}

func (x *ResGetAudioDetail) Reset() {
	*x = ResGetAudioDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAudioDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAudioDetail) ProtoMessage() {}

func (x *ResGetAudioDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAudioDetail.ProtoReflect.Descriptor instead.
func (*ResGetAudioDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{17}
}

func (x *ResGetAudioDetail) GetAudio() *AudioData {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *ResGetAudioDetail) GetAlbum() []*AlbumData {
	if x != nil {
		return x.Album
	}
	return nil
}

type ReqGetAudioListByAlbumId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId uint64 `protobuf:"varint,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
}

func (x *ReqGetAudioListByAlbumId) Reset() {
	*x = ReqGetAudioListByAlbumId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAudioListByAlbumId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAudioListByAlbumId) ProtoMessage() {}

func (x *ReqGetAudioListByAlbumId) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAudioListByAlbumId.ProtoReflect.Descriptor instead.
func (*ReqGetAudioListByAlbumId) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{18}
}

func (x *ReqGetAudioListByAlbumId) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

type ResGetAudioListByAlbumId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audios []*AudioSimpleData `protobuf:"bytes,1,rep,name=audios,proto3" json:"audios,omitempty"`
}

func (x *ResGetAudioListByAlbumId) Reset() {
	*x = ResGetAudioListByAlbumId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAudioListByAlbumId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAudioListByAlbumId) ProtoMessage() {}

func (x *ResGetAudioListByAlbumId) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAudioListByAlbumId.ProtoReflect.Descriptor instead.
func (*ResGetAudioListByAlbumId) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{19}
}

func (x *ResGetAudioListByAlbumId) GetAudios() []*AudioSimpleData {
	if x != nil {
		return x.Audios
	}
	return nil
}

type ReqBatchGetAlbumAudioCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumIds []uint64 `protobuf:"varint,1,rep,packed,name=album_ids,json=albumIds,proto3" json:"album_ids,omitempty"`
}

func (x *ReqBatchGetAlbumAudioCount) Reset() {
	*x = ReqBatchGetAlbumAudioCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatchGetAlbumAudioCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatchGetAlbumAudioCount) ProtoMessage() {}

func (x *ReqBatchGetAlbumAudioCount) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatchGetAlbumAudioCount.ProtoReflect.Descriptor instead.
func (*ReqBatchGetAlbumAudioCount) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{20}
}

func (x *ReqBatchGetAlbumAudioCount) GetAlbumIds() []uint64 {
	if x != nil {
		return x.AlbumIds
	}
	return nil
}

type ResBatchGetAlbumAudioCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumCounts map[uint64]uint32 `protobuf:"bytes,1,rep,name=album_counts,json=albumCounts,proto3" json:"album_counts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ResBatchGetAlbumAudioCount) Reset() {
	*x = ResBatchGetAlbumAudioCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResBatchGetAlbumAudioCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResBatchGetAlbumAudioCount) ProtoMessage() {}

func (x *ResBatchGetAlbumAudioCount) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResBatchGetAlbumAudioCount.ProtoReflect.Descriptor instead.
func (*ResBatchGetAlbumAudioCount) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{21}
}

func (x *ResBatchGetAlbumAudioCount) GetAlbumCounts() map[uint64]uint32 {
	if x != nil {
		return x.AlbumCounts
	}
	return nil
}

type ReqGetAlbumCommentCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId uint64 `protobuf:"varint,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
}

func (x *ReqGetAlbumCommentCount) Reset() {
	*x = ReqGetAlbumCommentCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAlbumCommentCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAlbumCommentCount) ProtoMessage() {}

func (x *ReqGetAlbumCommentCount) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAlbumCommentCount.ProtoReflect.Descriptor instead.
func (*ReqGetAlbumCommentCount) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{22}
}

func (x *ReqGetAlbumCommentCount) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

type ResGetAlbumCommentCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ResGetAlbumCommentCount) Reset() {
	*x = ResGetAlbumCommentCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAlbumCommentCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAlbumCommentCount) ProtoMessage() {}

func (x *ResGetAlbumCommentCount) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAlbumCommentCount.ProtoReflect.Descriptor instead.
func (*ResGetAlbumCommentCount) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{23}
}

func (x *ResGetAlbumCommentCount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ReqIsUserCollectAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AlbumId uint64 `protobuf:"varint,2,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
}

func (x *ReqIsUserCollectAlbum) Reset() {
	*x = ReqIsUserCollectAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqIsUserCollectAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqIsUserCollectAlbum) ProtoMessage() {}

func (x *ReqIsUserCollectAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqIsUserCollectAlbum.ProtoReflect.Descriptor instead.
func (*ReqIsUserCollectAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{24}
}

func (x *ReqIsUserCollectAlbum) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqIsUserCollectAlbum) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

type ResIsUserCollectAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCollect bool `protobuf:"varint,1,opt,name=is_collect,json=isCollect,proto3" json:"is_collect,omitempty"`
}

func (x *ResIsUserCollectAlbum) Reset() {
	*x = ResIsUserCollectAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResIsUserCollectAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResIsUserCollectAlbum) ProtoMessage() {}

func (x *ResIsUserCollectAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResIsUserCollectAlbum.ProtoReflect.Descriptor instead.
func (*ResIsUserCollectAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{25}
}

func (x *ResIsUserCollectAlbum) GetIsCollect() bool {
	if x != nil {
		return x.IsCollect
	}
	return false
}

type ResIsUserCollectAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCollect bool `protobuf:"varint,1,opt,name=is_collect,json=isCollect,proto3" json:"is_collect,omitempty"`
}

func (x *ResIsUserCollectAudio) Reset() {
	*x = ResIsUserCollectAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResIsUserCollectAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResIsUserCollectAudio) ProtoMessage() {}

func (x *ResIsUserCollectAudio) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResIsUserCollectAudio.ProtoReflect.Descriptor instead.
func (*ResIsUserCollectAudio) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{26}
}

func (x *ResIsUserCollectAudio) GetIsCollect() bool {
	if x != nil {
		return x.IsCollect
	}
	return false
}

type ReqIsUserCollectAlbums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint32   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AlbumIds []uint64 `protobuf:"varint,2,rep,packed,name=album_ids,json=albumIds,proto3" json:"album_ids,omitempty"`
}

func (x *ReqIsUserCollectAlbums) Reset() {
	*x = ReqIsUserCollectAlbums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqIsUserCollectAlbums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqIsUserCollectAlbums) ProtoMessage() {}

func (x *ReqIsUserCollectAlbums) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqIsUserCollectAlbums.ProtoReflect.Descriptor instead.
func (*ReqIsUserCollectAlbums) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{27}
}

func (x *ReqIsUserCollectAlbums) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqIsUserCollectAlbums) GetAlbumIds() []uint64 {
	if x != nil {
		return x.AlbumIds
	}
	return nil
}

type ResIsUserCollectAlbums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCollects []bool `protobuf:"varint,1,rep,packed,name=is_collects,json=isCollects,proto3" json:"is_collects,omitempty"`
}

func (x *ResIsUserCollectAlbums) Reset() {
	*x = ResIsUserCollectAlbums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResIsUserCollectAlbums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResIsUserCollectAlbums) ProtoMessage() {}

func (x *ResIsUserCollectAlbums) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResIsUserCollectAlbums.ProtoReflect.Descriptor instead.
func (*ResIsUserCollectAlbums) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{28}
}

func (x *ResIsUserCollectAlbums) GetIsCollects() []bool {
	if x != nil {
		return x.IsCollects
	}
	return nil
}

type ReqCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id   uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Type uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"` // 0-专辑 1-音频
	From uint32 `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"` // 0-收藏 1-取消收藏
}

func (x *ReqCollect) Reset() {
	*x = ReqCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCollect) ProtoMessage() {}

func (x *ReqCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCollect.ProtoReflect.Descriptor instead.
func (*ReqCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{29}
}

func (x *ReqCollect) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqCollect) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqCollect) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqCollect) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

type ResCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResCollect) Reset() {
	*x = ResCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCollect) ProtoMessage() {}

func (x *ResCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCollect.ProtoReflect.Descriptor instead.
func (*ResCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{30}
}

type ReqGetAlbumCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Page  uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqGetAlbumCollectList) Reset() {
	*x = ReqGetAlbumCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAlbumCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAlbumCollectList) ProtoMessage() {}

func (x *ReqGetAlbumCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAlbumCollectList.ProtoReflect.Descriptor instead.
func (*ReqGetAlbumCollectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{31}
}

func (x *ReqGetAlbumCollectList) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqGetAlbumCollectList) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqGetAlbumCollectList) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResGetAlbumCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*AlbumData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	HasMore bool         `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *ResGetAlbumCollectList) Reset() {
	*x = ResGetAlbumCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAlbumCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAlbumCollectList) ProtoMessage() {}

func (x *ResGetAlbumCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAlbumCollectList.ProtoReflect.Descriptor instead.
func (*ResGetAlbumCollectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{32}
}

func (x *ResGetAlbumCollectList) GetList() []*AlbumData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ResGetAlbumCollectList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type ReqGetAudioCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Page  uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqGetAudioCollectList) Reset() {
	*x = ReqGetAudioCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAudioCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAudioCollectList) ProtoMessage() {}

func (x *ReqGetAudioCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAudioCollectList.ProtoReflect.Descriptor instead.
func (*ReqGetAudioCollectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{33}
}

func (x *ReqGetAudioCollectList) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqGetAudioCollectList) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqGetAudioCollectList) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResGetAudioCollectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*AudioSimpleData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	HasMore bool               `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *ResGetAudioCollectList) Reset() {
	*x = ResGetAudioCollectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAudioCollectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAudioCollectList) ProtoMessage() {}

func (x *ResGetAudioCollectList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAudioCollectList.ProtoReflect.Descriptor instead.
func (*ResGetAudioCollectList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{34}
}

func (x *ResGetAudioCollectList) GetList() []*AudioSimpleData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ResGetAudioCollectList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type ReqUpdateAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Labels string `protobuf:"bytes,4,opt,name=labels,proto3" json:"labels,omitempty"`
	OpUid  uint64 `protobuf:"varint,5,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqUpdateAudio) Reset() {
	*x = ReqUpdateAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateAudio) ProtoMessage() {}

func (x *ReqUpdateAudio) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateAudio.ProtoReflect.Descriptor instead.
func (*ReqUpdateAudio) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{35}
}

func (x *ReqUpdateAudio) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqUpdateAudio) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqUpdateAudio) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ReqUpdateAudio) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

func (x *ReqUpdateAudio) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ReqAuditAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AuditStatus int32  `protobuf:"varint,2,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"` // 1:通过 2:不通过
	AuditReason int32  `protobuf:"varint,3,opt,name=audit_reason,json=auditReason,proto3" json:"audit_reason,omitempty"` // 不通过原因
	OpUid       uint64 `protobuf:"varint,4,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqAuditAudio) Reset() {
	*x = ReqAuditAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAuditAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAuditAudio) ProtoMessage() {}

func (x *ReqAuditAudio) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAuditAudio.ProtoReflect.Descriptor instead.
func (*ReqAuditAudio) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{36}
}

func (x *ReqAuditAudio) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAuditAudio) GetAuditStatus() int32 {
	if x != nil {
		return x.AuditStatus
	}
	return 0
}

func (x *ReqAuditAudio) GetAuditReason() int32 {
	if x != nil {
		return x.AuditReason
	}
	return 0
}

func (x *ReqAuditAudio) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResAuditAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResAuditAudio) Reset() {
	*x = ResAuditAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAuditAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAuditAudio) ProtoMessage() {}

func (x *ResAuditAudio) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAuditAudio.ProtoReflect.Descriptor instead.
func (*ResAuditAudio) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{37}
}

type ReqCreateAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Intro string `protobuf:"bytes,2,opt,name=intro,proto3" json:"intro,omitempty"`
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	OpUid uint64 `protobuf:"varint,4,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqCreateAlbum) Reset() {
	*x = ReqCreateAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateAlbum) ProtoMessage() {}

func (x *ReqCreateAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateAlbum.ProtoReflect.Descriptor instead.
func (*ReqCreateAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{38}
}

func (x *ReqCreateAlbum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqCreateAlbum) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *ReqCreateAlbum) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqCreateAlbum) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResCreateAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResCreateAlbum) Reset() {
	*x = ResCreateAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateAlbum) ProtoMessage() {}

func (x *ResCreateAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateAlbum.ProtoReflect.Descriptor instead.
func (*ResCreateAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{39}
}

func (x *ResCreateAlbum) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReqUpdateAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Intro string `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	Cover string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	OpUid uint64 `protobuf:"varint,5,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqUpdateAlbum) Reset() {
	*x = ReqUpdateAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateAlbum) ProtoMessage() {}

func (x *ReqUpdateAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateAlbum.ProtoReflect.Descriptor instead.
func (*ReqUpdateAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{40}
}

func (x *ReqUpdateAlbum) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqUpdateAlbum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqUpdateAlbum) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *ReqUpdateAlbum) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqUpdateAlbum) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResUpdateAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResUpdateAlbum) Reset() {
	*x = ResUpdateAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateAlbum) ProtoMessage() {}

func (x *ResUpdateAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateAlbum.ProtoReflect.Descriptor instead.
func (*ResUpdateAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{41}
}

type ReqDelAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OpUid uint64 `protobuf:"varint,2,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
}

func (x *ReqDelAlbum) Reset() {
	*x = ReqDelAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDelAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDelAlbum) ProtoMessage() {}

func (x *ReqDelAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDelAlbum.ProtoReflect.Descriptor instead.
func (*ReqDelAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{42}
}

func (x *ReqDelAlbum) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqDelAlbum) GetOpUid() uint64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

type ResDelAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResDelAlbum) Reset() {
	*x = ResDelAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDelAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDelAlbum) ProtoMessage() {}

func (x *ResDelAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDelAlbum.ProtoReflect.Descriptor instead.
func (*ResDelAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{43}
}

type ReqGetAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime     uint64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       uint64 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CollectStatus int32  `protobuf:"varint,4,opt,name=collect_status,json=collectStatus,proto3" json:"collect_status,omitempty"` //-1:全部 0:未收录 1:已收录
	Page          int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqGetAlbumList) Reset() {
	*x = ReqGetAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAlbumList) ProtoMessage() {}

func (x *ReqGetAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAlbumList.ProtoReflect.Descriptor instead.
func (*ReqGetAlbumList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{44}
}

func (x *ReqGetAlbumList) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReqGetAlbumList) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReqGetAlbumList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqGetAlbumList) GetCollectStatus() int32 {
	if x != nil {
		return x.CollectStatus
	}
	return 0
}

func (x *ReqGetAlbumList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ReqGetAlbumList) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResGetAlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums []*AlbumData `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	Total  int32        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ResGetAlbumList) Reset() {
	*x = ResGetAlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAlbumList) ProtoMessage() {}

func (x *ResGetAlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAlbumList.ProtoReflect.Descriptor instead.
func (*ResGetAlbumList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{45}
}

func (x *ResGetAlbumList) GetAlbums() []*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *ResGetAlbumList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ReqGetAlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumStr []string `protobuf:"bytes,1,rep,name=album_str,json=albumStr,proto3" json:"album_str,omitempty"`
}

func (x *ReqGetAlbumDetail) Reset() {
	*x = ReqGetAlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAlbumDetail) ProtoMessage() {}

func (x *ReqGetAlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAlbumDetail.ProtoReflect.Descriptor instead.
func (*ReqGetAlbumDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{46}
}

func (x *ReqGetAlbumDetail) GetAlbumStr() []string {
	if x != nil {
		return x.AlbumStr
	}
	return nil
}

type ResGetAlbumDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums map[uint64]*AlbumData `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResGetAlbumDetail) Reset() {
	*x = ResGetAlbumDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetAlbumDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetAlbumDetail) ProtoMessage() {}

func (x *ResGetAlbumDetail) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetAlbumDetail.ProtoReflect.Descriptor instead.
func (*ResGetAlbumDetail) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{47}
}

func (x *ResGetAlbumDetail) GetAlbums() map[uint64]*AlbumData {
	if x != nil {
		return x.Albums
	}
	return nil
}

type ReqAudioCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioId uint64 `protobuf:"varint,1,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	AlbumId uint64 `protobuf:"varint,2,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	Type    int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"` //0:收录 1:移除
}

func (x *ReqAudioCollect) Reset() {
	*x = ReqAudioCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAudioCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAudioCollect) ProtoMessage() {}

func (x *ReqAudioCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAudioCollect.ProtoReflect.Descriptor instead.
func (*ReqAudioCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{48}
}

func (x *ReqAudioCollect) GetAudioId() uint64 {
	if x != nil {
		return x.AudioId
	}
	return 0
}

func (x *ReqAudioCollect) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *ReqAudioCollect) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ResAudioCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResAudioCollect) Reset() {
	*x = ResAudioCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAudioCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAudioCollect) ProtoMessage() {}

func (x *ResAudioCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAudioCollect.ProtoReflect.Descriptor instead.
func (*ResAudioCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{49}
}

type ReqAudioSubmitComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioId uint64 `protobuf:"varint,1,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Type    uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Uid     uint32 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Address string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ReqAudioSubmitComment) Reset() {
	*x = ReqAudioSubmitComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAudioSubmitComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAudioSubmitComment) ProtoMessage() {}

func (x *ReqAudioSubmitComment) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAudioSubmitComment.ProtoReflect.Descriptor instead.
func (*ReqAudioSubmitComment) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{50}
}

func (x *ReqAudioSubmitComment) GetAudioId() uint64 {
	if x != nil {
		return x.AudioId
	}
	return 0
}

func (x *ReqAudioSubmitComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReqAudioSubmitComment) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqAudioSubmitComment) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqAudioSubmitComment) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ReqGetAudioCommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioId uint64 `protobuf:"varint,1,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	Offset  int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size    uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReqGetAudioCommentList) Reset() {
	*x = ReqGetAudioCommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAudioCommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAudioCommentList) ProtoMessage() {}

func (x *ReqGetAudioCommentList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAudioCommentList.ProtoReflect.Descriptor instead.
func (*ReqGetAudioCommentList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{51}
}

func (x *ReqGetAudioCommentList) GetAudioId() uint64 {
	if x != nil {
		return x.AudioId
	}
	return 0
}

func (x *ReqGetAudioCommentList) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReqGetAudioCommentList) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReqGetAlbumCommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId uint64 `protobuf:"varint,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	Offset  int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size    uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReqGetAlbumCommentList) Reset() {
	*x = ReqGetAlbumCommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAlbumCommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAlbumCommentList) ProtoMessage() {}

func (x *ReqGetAlbumCommentList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAlbumCommentList.ProtoReflect.Descriptor instead.
func (*ReqGetAlbumCommentList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{52}
}

func (x *ReqGetAlbumCommentList) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *ReqGetAlbumCommentList) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReqGetAlbumCommentList) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ResCommonPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResCommonPost) Reset() {
	*x = ResCommonPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCommonPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCommonPost) ProtoMessage() {}

func (x *ResCommonPost) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCommonPost.ProtoReflect.Descriptor instead.
func (*ResCommonPost) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{53}
}

func (x *ResCommonPost) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResCommonPost) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResCommonPost) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ResCommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Comment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ResCommentList) Reset() {
	*x = ResCommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCommentList) ProtoMessage() {}

func (x *ResCommentList) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCommentList.ProtoReflect.Descriptor instead.
func (*ResCommentList) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{54}
}

func (x *ResCommentList) GetList() []*Comment {
	if x != nil {
		return x.List
	}
	return nil
}

type ReqAlbumSubmitComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId uint64 `protobuf:"varint,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Uid     uint32 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ReqAlbumSubmitComment) Reset() {
	*x = ReqAlbumSubmitComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAlbumSubmitComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAlbumSubmitComment) ProtoMessage() {}

func (x *ReqAlbumSubmitComment) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAlbumSubmitComment.ProtoReflect.Descriptor instead.
func (*ReqAlbumSubmitComment) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{55}
}

func (x *ReqAlbumSubmitComment) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *ReqAlbumSubmitComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReqAlbumSubmitComment) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqAlbumSubmitComment) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// 举报回调参数
type ReqUpdateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // 评论id
	Type   uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`     // 0-专辑 1-音频
	Status uint32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 状态
}

func (x *ReqUpdateStatus) Reset() {
	*x = ReqUpdateStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateStatus) ProtoMessage() {}

func (x *ReqUpdateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateStatus.ProtoReflect.Descriptor instead.
func (*ReqUpdateStatus) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{56}
}

func (x *ReqUpdateStatus) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqUpdateStatus) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReqUpdateStatus) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 举报回调接过
type ResUpdateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Retry   bool   `protobuf:"varint,3,opt,name=retry,proto3" json:"retry,omitempty"`
}

func (x *ResUpdateStatus) Reset() {
	*x = ResUpdateStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateStatus) ProtoMessage() {}

func (x *ResUpdateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateStatus.ProtoReflect.Descriptor instead.
func (*ResUpdateStatus) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{57}
}

func (x *ResUpdateStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResUpdateStatus) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResUpdateStatus) GetRetry() bool {
	if x != nil {
		return x.Retry
	}
	return false
}

type ReqPlayStatReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId uint64 `protobuf:"varint,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	AudioId uint64 `protobuf:"varint,2,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
}

func (x *ReqPlayStatReport) Reset() {
	*x = ReqPlayStatReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPlayStatReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPlayStatReport) ProtoMessage() {}

func (x *ReqPlayStatReport) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPlayStatReport.ProtoReflect.Descriptor instead.
func (*ReqPlayStatReport) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{58}
}

func (x *ReqPlayStatReport) GetAlbumId() uint64 {
	if x != nil {
		return x.AlbumId
	}
	return 0
}

func (x *ReqPlayStatReport) GetAudioId() uint64 {
	if x != nil {
		return x.AudioId
	}
	return 0
}

type ResPlayStatReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResPlayStatReport) Reset() {
	*x = ResPlayStatReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResPlayStatReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPlayStatReport) ProtoMessage() {}

func (x *ResPlayStatReport) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPlayStatReport.ProtoReflect.Descriptor instead.
func (*ResPlayStatReport) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{59}
}

type ReqGetValidAudioUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ReqGetValidAudioUsers) Reset() {
	*x = ReqGetValidAudioUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetValidAudioUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetValidAudioUsers) ProtoMessage() {}

func (x *ReqGetValidAudioUsers) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetValidAudioUsers.ProtoReflect.Descriptor instead.
func (*ReqGetValidAudioUsers) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{60}
}

func (x *ReqGetValidAudioUsers) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ResGetValidAudioUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uids []uint32 `protobuf:"varint,1,rep,packed,name=uids,proto3" json:"uids,omitempty"`
}

func (x *ResGetValidAudioUsers) Reset() {
	*x = ResGetValidAudioUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetValidAudioUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetValidAudioUsers) ProtoMessage() {}

func (x *ResGetValidAudioUsers) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetValidAudioUsers.ProtoReflect.Descriptor instead.
func (*ResGetValidAudioUsers) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{61}
}

func (x *ResGetValidAudioUsers) GetUids() []uint32 {
	if x != nil {
		return x.Uids
	}
	return nil
}

type ReqGetActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqGetActivity) Reset() {
	*x = ReqGetActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetActivity) ProtoMessage() {}

func (x *ReqGetActivity) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetActivity.ProtoReflect.Descriptor instead.
func (*ReqGetActivity) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{62}
}

func (x *ReqGetActivity) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespGetActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg      string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Activity *ActivityInfo `protobuf:"bytes,3,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *RespGetActivity) Reset() {
	*x = RespGetActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetActivity) ProtoMessage() {}

func (x *RespGetActivity) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetActivity.ProtoReflect.Descriptor instead.
func (*RespGetActivity) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{63}
}

func (x *RespGetActivity) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespGetActivity) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetActivity) GetActivity() *ActivityInfo {
	if x != nil {
		return x.Activity
	}
	return nil
}

type ActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Intro       string `protobuf:"bytes,3,opt,name=intro,proto3" json:"intro,omitempty"`
	Cover       string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	StartTime   uint32 `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     uint32 `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	RankAwardId uint32 `protobuf:"varint,7,opt,name=rank_award_id,json=rankAwardId,proto3" json:"rank_award_id,omitempty"`
	RuleUrl     string `protobuf:"bytes,8,opt,name=rule_url,json=ruleUrl,proto3" json:"rule_url,omitempty"`
}

func (x *ActivityInfo) Reset() {
	*x = ActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityInfo) ProtoMessage() {}

func (x *ActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityInfo.ProtoReflect.Descriptor instead.
func (*ActivityInfo) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{64}
}

func (x *ActivityInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActivityInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *ActivityInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ActivityInfo) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ActivityInfo) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ActivityInfo) GetRankAwardId() uint32 {
	if x != nil {
		return x.RankAwardId
	}
	return 0
}

func (x *ActivityInfo) GetRuleUrl() string {
	if x != nil {
		return x.RuleUrl
	}
	return ""
}

type ReqGetAwardPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqGetAwardPackage) Reset() {
	*x = ReqGetAwardPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAwardPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAwardPackage) ProtoMessage() {}

func (x *ReqGetAwardPackage) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAwardPackage.ProtoReflect.Descriptor instead.
func (*ReqGetAwardPackage) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{65}
}

func (x *ReqGetAwardPackage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespGetAwardPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data    *AwardPackageInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespGetAwardPackage) Reset() {
	*x = RespGetAwardPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetAwardPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetAwardPackage) ProtoMessage() {}

func (x *RespGetAwardPackage) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetAwardPackage.ProtoReflect.Descriptor instead.
func (*RespGetAwardPackage) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{66}
}

func (x *RespGetAwardPackage) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespGetAwardPackage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetAwardPackage) GetData() *AwardPackageInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReqGetRankAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReqGetRankAward) Reset() {
	*x = ReqGetRankAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetRankAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetRankAward) ProtoMessage() {}

func (x *ReqGetRankAward) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetRankAward.ProtoReflect.Descriptor instead.
func (*ReqGetRankAward) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{67}
}

func (x *ReqGetRankAward) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespGetRankAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Name    string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Package *AwardPackageInfo   `protobuf:"bytes,4,opt,name=package,proto3" json:"package,omitempty"` // 奖励包信息
	Ranks   []*ActivityRankInfo `protobuf:"bytes,5,rep,name=ranks,proto3" json:"ranks,omitempty"`
}

func (x *RespGetRankAward) Reset() {
	*x = RespGetRankAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetRankAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetRankAward) ProtoMessage() {}

func (x *RespGetRankAward) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetRankAward.ProtoReflect.Descriptor instead.
func (*RespGetRankAward) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{68}
}

func (x *RespGetRankAward) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespGetRankAward) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetRankAward) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RespGetRankAward) GetPackage() *AwardPackageInfo {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *RespGetRankAward) GetRanks() []*ActivityRankInfo {
	if x != nil {
		return x.Ranks
	}
	return nil
}

type ActivityRankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`   // 排行奖励类型 1-单个 2-范围
	Start uint32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"` // 开始名次
	End   uint32 `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`     // 结束名次
	Days  uint32 `protobuf:"varint,5,opt,name=days,proto3" json:"days,omitempty"`   // 奖励天数
}

func (x *ActivityRankInfo) Reset() {
	*x = ActivityRankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRankInfo) ProtoMessage() {}

func (x *ActivityRankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRankInfo.ProtoReflect.Descriptor instead.
func (*ActivityRankInfo) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{69}
}

func (x *ActivityRankInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ActivityRankInfo) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ActivityRankInfo) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *ActivityRankInfo) GetDays() uint32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type AwardPackageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // 奖励包id
	Name     string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 奖励包名称
	Pretends []*PretendInfo `protobuf:"bytes,3,rep,name=pretends,proto3" json:"pretends,omitempty"`
}

func (x *AwardPackageInfo) Reset() {
	*x = AwardPackageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardPackageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardPackageInfo) ProtoMessage() {}

func (x *AwardPackageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardPackageInfo.ProtoReflect.Descriptor instead.
func (*AwardPackageInfo) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{70}
}

func (x *AwardPackageInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AwardPackageInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AwardPackageInfo) GetPretends() []*PretendInfo {
	if x != nil {
		return x.Pretends
	}
	return nil
}

type PretendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 装扮名称
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *PretendInfo) Reset() {
	*x = PretendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PretendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PretendInfo) ProtoMessage() {}

func (x *PretendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PretendInfo.ProtoReflect.Descriptor instead.
func (*PretendInfo) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{71}
}

func (x *PretendInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PretendInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PretendInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type ReqBatchGetAudioInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioId []uint32 `protobuf:"varint,1,rep,packed,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
}

func (x *ReqBatchGetAudioInfo) Reset() {
	*x = ReqBatchGetAudioInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatchGetAudioInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatchGetAudioInfo) ProtoMessage() {}

func (x *ReqBatchGetAudioInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatchGetAudioInfo.ProtoReflect.Descriptor instead.
func (*ReqBatchGetAudioInfo) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{72}
}

func (x *ReqBatchGetAudioInfo) GetAudioId() []uint32 {
	if x != nil {
		return x.AudioId
	}
	return nil
}

type RespBatchGetAudioInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                           `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message string                         `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Items   []*RespBatchGetAudioInfo_Audio `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RespBatchGetAudioInfo) Reset() {
	*x = RespBatchGetAudioInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespBatchGetAudioInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespBatchGetAudioInfo) ProtoMessage() {}

func (x *RespBatchGetAudioInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespBatchGetAudioInfo.ProtoReflect.Descriptor instead.
func (*RespBatchGetAudioInfo) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{73}
}

func (x *RespBatchGetAudioInfo) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespBatchGetAudioInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RespBatchGetAudioInfo) GetItems() []*RespBatchGetAudioInfo_Audio {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReqGenRecAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                              // 专辑名称
	Intro   string   `protobuf:"bytes,2,opt,name=intro,proto3" json:"intro,omitempty"`                            // 专辑简介
	Cover   string   `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`                            // 专辑封面
	AudioId []uint32 `protobuf:"varint,4,rep,packed,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"` // 声音id
}

func (x *ReqGenRecAlbum) Reset() {
	*x = ReqGenRecAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGenRecAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGenRecAlbum) ProtoMessage() {}

func (x *ReqGenRecAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGenRecAlbum.ProtoReflect.Descriptor instead.
func (*ReqGenRecAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{74}
}

func (x *ReqGenRecAlbum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqGenRecAlbum) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *ReqGenRecAlbum) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ReqGenRecAlbum) GetAudioId() []uint32 {
	if x != nil {
		return x.AudioId
	}
	return nil
}

type RespGenRecAlbum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *RespGenRecAlbum) Reset() {
	*x = RespGenRecAlbum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGenRecAlbum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGenRecAlbum) ProtoMessage() {}

func (x *RespGenRecAlbum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGenRecAlbum.ProtoReflect.Descriptor instead.
func (*RespGenRecAlbum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{75}
}

func (x *RespGenRecAlbum) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespGenRecAlbum) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqBatchCheckUserCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     uint32   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AudioId []uint32 `protobuf:"varint,2,rep,packed,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
}

func (x *ReqBatchCheckUserCollect) Reset() {
	*x = ReqBatchCheckUserCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatchCheckUserCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatchCheckUserCollect) ProtoMessage() {}

func (x *ReqBatchCheckUserCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatchCheckUserCollect.ProtoReflect.Descriptor instead.
func (*ReqBatchCheckUserCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{76}
}

func (x *ReqBatchCheckUserCollect) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqBatchCheckUserCollect) GetAudioId() []uint32 {
	if x != nil {
		return x.AudioId
	}
	return nil
}

type RespBatchCheckUserCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool            `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message     string          `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	CollectInfo map[uint32]bool `protobuf:"bytes,3,rep,name=collect_info,json=collectInfo,proto3" json:"collect_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *RespBatchCheckUserCollect) Reset() {
	*x = RespBatchCheckUserCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespBatchCheckUserCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespBatchCheckUserCollect) ProtoMessage() {}

func (x *RespBatchCheckUserCollect) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespBatchCheckUserCollect.ProtoReflect.Descriptor instead.
func (*RespBatchCheckUserCollect) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{77}
}

func (x *RespBatchCheckUserCollect) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespBatchCheckUserCollect) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RespBatchCheckUserCollect) GetCollectInfo() map[uint32]bool {
	if x != nil {
		return x.CollectInfo
	}
	return nil
}

type ReqBatchGetCollectNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectId []uint32 `protobuf:"varint,1,rep,packed,name=collect_id,json=collectId,proto3" json:"collect_id,omitempty"`
}

func (x *ReqBatchGetCollectNum) Reset() {
	*x = ReqBatchGetCollectNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatchGetCollectNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatchGetCollectNum) ProtoMessage() {}

func (x *ReqBatchGetCollectNum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatchGetCollectNum.ProtoReflect.Descriptor instead.
func (*ReqBatchGetCollectNum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{78}
}

func (x *ReqBatchGetCollectNum) GetCollectId() []uint32 {
	if x != nil {
		return x.CollectId
	}
	return nil
}

type RespBatchGetCollectNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Nums    map[uint32]uint32 `protobuf:"bytes,3,rep,name=nums,proto3" json:"nums,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *RespBatchGetCollectNum) Reset() {
	*x = RespBatchGetCollectNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespBatchGetCollectNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespBatchGetCollectNum) ProtoMessage() {}

func (x *RespBatchGetCollectNum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespBatchGetCollectNum.ProtoReflect.Descriptor instead.
func (*RespBatchGetCollectNum) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{79}
}

func (x *RespBatchGetCollectNum) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespBatchGetCollectNum) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RespBatchGetCollectNum) GetNums() map[uint32]uint32 {
	if x != nil {
		return x.Nums
	}
	return nil
}

type ReqAudioCommentAuditCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        // voice_lover_audio_comment 表的id
	AuditStatus  uint32 `protobuf:"varint,2,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`   // 1-审核通过 2-审核拒绝
	RejectReason string `protobuf:"bytes,3,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"` // 审核拒绝原因
}

func (x *ReqAudioCommentAuditCallback) Reset() {
	*x = ReqAudioCommentAuditCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAudioCommentAuditCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAudioCommentAuditCallback) ProtoMessage() {}

func (x *ReqAudioCommentAuditCallback) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAudioCommentAuditCallback.ProtoReflect.Descriptor instead.
func (*ReqAudioCommentAuditCallback) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{80}
}

func (x *ReqAudioCommentAuditCallback) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAudioCommentAuditCallback) GetAuditStatus() uint32 {
	if x != nil {
		return x.AuditStatus
	}
	return 0
}

func (x *ReqAudioCommentAuditCallback) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

type RespAudioCommentAuditCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *RespAudioCommentAuditCallback) Reset() {
	*x = RespAudioCommentAuditCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAudioCommentAuditCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAudioCommentAuditCallback) ProtoMessage() {}

func (x *RespAudioCommentAuditCallback) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAudioCommentAuditCallback.ProtoReflect.Descriptor instead.
func (*RespAudioCommentAuditCallback) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{81}
}

func (x *RespAudioCommentAuditCallback) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAudioCommentAuditCallback) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqAlbumCommentAuditCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        // voice_lover_audio_comment 表的id
	AuditStatus  uint32 `protobuf:"varint,2,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`   // 1-审核通过 2-审核拒绝
	RejectReason string `protobuf:"bytes,3,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"` // 审核拒绝原因
}

func (x *ReqAlbumCommentAuditCallback) Reset() {
	*x = ReqAlbumCommentAuditCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAlbumCommentAuditCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAlbumCommentAuditCallback) ProtoMessage() {}

func (x *ReqAlbumCommentAuditCallback) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAlbumCommentAuditCallback.ProtoReflect.Descriptor instead.
func (*ReqAlbumCommentAuditCallback) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{82}
}

func (x *ReqAlbumCommentAuditCallback) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAlbumCommentAuditCallback) GetAuditStatus() uint32 {
	if x != nil {
		return x.AuditStatus
	}
	return 0
}

func (x *ReqAlbumCommentAuditCallback) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

type RespAlbumCommentAuditCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *RespAlbumCommentAuditCallback) Reset() {
	*x = RespAlbumCommentAuditCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespAlbumCommentAuditCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAlbumCommentAuditCallback) ProtoMessage() {}

func (x *RespAlbumCommentAuditCallback) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAlbumCommentAuditCallback.ProtoReflect.Descriptor instead.
func (*RespAlbumCommentAuditCallback) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{83}
}

func (x *RespAlbumCommentAuditCallback) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespAlbumCommentAuditCallback) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RespBatchGetAudioInfo_Audio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc       string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Resource   string `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	Cover      string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	From       uint32 `protobuf:"varint,6,opt,name=from,proto3" json:"from,omitempty"`
	Seconds    uint32 `protobuf:"varint,7,opt,name=seconds,proto3" json:"seconds,omitempty"`
	PubUid     uint32 `protobuf:"varint,8,opt,name=pub_uid,json=pubUid,proto3" json:"pub_uid,omitempty"`
	CreateTime uint32 `protobuf:"varint,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime uint32 `protobuf:"varint,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	ActivityId uint32 `protobuf:"varint,11,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	PlayCnt    uint32 `protobuf:"varint,12,opt,name=play_cnt,json=playCnt,proto3" json:"play_cnt,omitempty"`
	LikeNum    uint32 `protobuf:"varint,13,opt,name=like_num,json=likeNum,proto3" json:"like_num,omitempty"`
}

func (x *RespBatchGetAudioInfo_Audio) Reset() {
	*x = RespBatchGetAudioInfo_Audio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespBatchGetAudioInfo_Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespBatchGetAudioInfo_Audio) ProtoMessage() {}

func (x *RespBatchGetAudioInfo_Audio) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_voice_lover_voice_lover_message_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespBatchGetAudioInfo_Audio.ProtoReflect.Descriptor instead.
func (*RespBatchGetAudioInfo_Audio) Descriptor() ([]byte, []int) {
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP(), []int{73, 0}
}

func (x *RespBatchGetAudioInfo_Audio) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RespBatchGetAudioInfo_Audio) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RespBatchGetAudioInfo_Audio) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RespBatchGetAudioInfo_Audio) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *RespBatchGetAudioInfo_Audio) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *RespBatchGetAudioInfo_Audio) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *RespBatchGetAudioInfo_Audio) GetSeconds() uint32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *RespBatchGetAudioInfo_Audio) GetPubUid() uint32 {
	if x != nil {
		return x.PubUid
	}
	return 0
}

func (x *RespBatchGetAudioInfo_Audio) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *RespBatchGetAudioInfo_Audio) GetUpdateTime() uint32 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *RespBatchGetAudioInfo_Audio) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *RespBatchGetAudioInfo_Audio) GetPlayCnt() uint32 {
	if x != nil {
		return x.PlayCnt
	}
	return 0
}

func (x *RespBatchGetAudioInfo_Audio) GetLikeNum() uint32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

var File_rpc_voice_lover_voice_lover_message_proto protoreflect.FileDescriptor

var file_rpc_voice_lover_voice_lover_message_proto_rawDesc = []byte{
	0x0a, 0x29, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x72, 0x62, 0x70,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72,
	0x1a, 0x28, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x09, 0x0a, 0x07, 0x52, 0x65,
	0x73, 0x42, 0x61, 0x73, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x64, 0x75, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x64, 0x69, 0x74, 0x44,
	0x75, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x13, 0x52,
	0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x23, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x29, 0x0a,
	0x15, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x62,
	0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x73, 0x22, 0x24, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a,
	0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x56, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x64, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x67, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x06,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72,
	0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76,
	0x65, 0x72, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22,
	0x25, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x65, 0x71,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x64, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x0f,
	0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x64, 0x69, 0x74, 0x12,
	0x38, 0x0a, 0x05, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x64, 0x69, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x65, 0x64, 0x69, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x11, 0x52, 0x65, 0x71,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x22, 0x7f, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x34, 0x0a, 0x05, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x62, 0x70,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72,
	0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x22, 0x35, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x73, 0x22, 0x39, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x73, 0x22, 0xc1, 0x01,
	0x0a, 0x1a, 0x52, 0x65, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x63, 0x0a, 0x0c,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x34, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x44, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x49,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x22, 0x36,
	0x0a, 0x15, 0x52, 0x65, 0x73, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x36, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x49, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x47,
	0x0a, 0x16, 0x52, 0x65, 0x71, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x49, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x73, 0x22, 0x56, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x0c, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x67,
	0x0a, 0x16, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6d, 0x0a,
	0x16, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x79, 0x0a, 0x0e,
	0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6f, 0x70, 0x55, 0x69, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x22, 0x67, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x22,
	0x20, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x77, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x34, 0x0a, 0x0b,
	0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6f,
	0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x70, 0x55,
	0x69, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x22, 0xb0, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x5f, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x30, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x53, 0x74, 0x72, 0x22, 0xba, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4a, 0x0a,
	0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x1a, 0x59, 0x0a, 0x0b, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x62, 0x70, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x5b, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x5f, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x5f, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x4f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x42, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x15, 0x52, 0x65,
	0x71, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x4d, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x53, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x22, 0x49, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x50,
	0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x29, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73,
	0x22, 0x20, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x7c, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x3d, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x22, 0xd9, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x24, 0x0a, 0x12,
	0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x7c, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61,
	0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x21, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x52,
	0x61, 0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x62, 0x70, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x72, 0x61, 0x6e,
	0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x22, 0x62, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x74, 0x0a, 0x10, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x74, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x73,
	0x22, 0x45, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x22, 0xe9, 0x03, 0x0a, 0x15, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0xd3, 0x02, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x75, 0x62, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6c,
	0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x6b, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x6e,
	0x52, 0x65, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x6e, 0x52, 0x65,
	0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x18, 0x52, 0x65,
	0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x49, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x62, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x72, 0x62,
	0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x3e, 0x0a, 0x10, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x15, 0x52, 0x65, 0x71,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0xd0, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x49, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x72, 0x62, 0x70, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x2e, 0x4e, 0x75, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x4e,
	0x75, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x1d,
	0x52, 0x65, 0x73, 0x70, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x76, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x1d, 0x52, 0x65, 0x73,
	0x70, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x39,
	0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x61,
	0x6f, 0x6c, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x72, 0x62, 0x70, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x5f, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rpc_voice_lover_voice_lover_message_proto_rawDescOnce sync.Once
	file_rpc_voice_lover_voice_lover_message_proto_rawDescData = file_rpc_voice_lover_voice_lover_message_proto_rawDesc
)

func file_rpc_voice_lover_voice_lover_message_proto_rawDescGZIP() []byte {
	file_rpc_voice_lover_voice_lover_message_proto_rawDescOnce.Do(func() {
		file_rpc_voice_lover_voice_lover_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_voice_lover_voice_lover_message_proto_rawDescData)
	})
	return file_rpc_voice_lover_voice_lover_message_proto_rawDescData
}

var file_rpc_voice_lover_voice_lover_message_proto_msgTypes = make([]protoimpl.MessageInfo, 89)
var file_rpc_voice_lover_voice_lover_message_proto_goTypes = []interface{}{
	(*ResBase)(nil),                       // 0: rbp.rpc.voice_lover.ResBase
	(*ReqPost)(nil),                       // 1: rbp.rpc.voice_lover.ReqPost
	(*ReqGetAlbumInfoById)(nil),           // 2: rbp.rpc.voice_lover.ReqGetAlbumInfoById
	(*ResGetAlbumInfoById)(nil),           // 3: rbp.rpc.voice_lover.ResGetAlbumInfoById
	(*ReqGetRecAlbums)(nil),               // 4: rbp.rpc.voice_lover.ReqGetRecAlbums
	(*ReqGetRecCommonAlbums)(nil),         // 5: rbp.rpc.voice_lover.ReqGetRecCommonAlbums
	(*ResGetRecAlbums)(nil),               // 6: rbp.rpc.voice_lover.ResGetRecAlbums
	(*ReqGetRecBanners)(nil),              // 7: rbp.rpc.voice_lover.ReqGetRecBanners
	(*ResGetRecBanners)(nil),              // 8: rbp.rpc.voice_lover.ResGetRecBanners
	(*ReqGetAlbumsByPage)(nil),            // 9: rbp.rpc.voice_lover.ReqGetAlbumsByPage
	(*ReqGetSubjectAlbumsByPage)(nil),     // 10: rbp.rpc.voice_lover.ReqGetSubjectAlbumsByPage
	(*ResGetAlbumsByPage)(nil),            // 11: rbp.rpc.voice_lover.ResGetAlbumsByPage
	(*ReqGetRecSubjects)(nil),             // 12: rbp.rpc.voice_lover.ReqGetRecSubjects
	(*ResGetRecSubjects)(nil),             // 13: rbp.rpc.voice_lover.ResGetRecSubjects
	(*ReqGetAudioEdit)(nil),               // 14: rbp.rpc.voice_lover.ReqGetAudioEdit
	(*ResGetAudioEdit)(nil),               // 15: rbp.rpc.voice_lover.ResGetAudioEdit
	(*ReqGetAudioDetail)(nil),             // 16: rbp.rpc.voice_lover.ReqGetAudioDetail
	(*ResGetAudioDetail)(nil),             // 17: rbp.rpc.voice_lover.ResGetAudioDetail
	(*ReqGetAudioListByAlbumId)(nil),      // 18: rbp.rpc.voice_lover.ReqGetAudioListByAlbumId
	(*ResGetAudioListByAlbumId)(nil),      // 19: rbp.rpc.voice_lover.ResGetAudioListByAlbumId
	(*ReqBatchGetAlbumAudioCount)(nil),    // 20: rbp.rpc.voice_lover.ReqBatchGetAlbumAudioCount
	(*ResBatchGetAlbumAudioCount)(nil),    // 21: rbp.rpc.voice_lover.ResBatchGetAlbumAudioCount
	(*ReqGetAlbumCommentCount)(nil),       // 22: rbp.rpc.voice_lover.ReqGetAlbumCommentCount
	(*ResGetAlbumCommentCount)(nil),       // 23: rbp.rpc.voice_lover.ResGetAlbumCommentCount
	(*ReqIsUserCollectAlbum)(nil),         // 24: rbp.rpc.voice_lover.ReqIsUserCollectAlbum
	(*ResIsUserCollectAlbum)(nil),         // 25: rbp.rpc.voice_lover.ResIsUserCollectAlbum
	(*ResIsUserCollectAudio)(nil),         // 26: rbp.rpc.voice_lover.ResIsUserCollectAudio
	(*ReqIsUserCollectAlbums)(nil),        // 27: rbp.rpc.voice_lover.ReqIsUserCollectAlbums
	(*ResIsUserCollectAlbums)(nil),        // 28: rbp.rpc.voice_lover.ResIsUserCollectAlbums
	(*ReqCollect)(nil),                    // 29: rbp.rpc.voice_lover.ReqCollect
	(*ResCollect)(nil),                    // 30: rbp.rpc.voice_lover.ResCollect
	(*ReqGetAlbumCollectList)(nil),        // 31: rbp.rpc.voice_lover.ReqGetAlbumCollectList
	(*ResGetAlbumCollectList)(nil),        // 32: rbp.rpc.voice_lover.ResGetAlbumCollectList
	(*ReqGetAudioCollectList)(nil),        // 33: rbp.rpc.voice_lover.ReqGetAudioCollectList
	(*ResGetAudioCollectList)(nil),        // 34: rbp.rpc.voice_lover.ResGetAudioCollectList
	(*ReqUpdateAudio)(nil),                // 35: rbp.rpc.voice_lover.ReqUpdateAudio
	(*ReqAuditAudio)(nil),                 // 36: rbp.rpc.voice_lover.ReqAuditAudio
	(*ResAuditAudio)(nil),                 // 37: rbp.rpc.voice_lover.ResAuditAudio
	(*ReqCreateAlbum)(nil),                // 38: rbp.rpc.voice_lover.ReqCreateAlbum
	(*ResCreateAlbum)(nil),                // 39: rbp.rpc.voice_lover.ResCreateAlbum
	(*ReqUpdateAlbum)(nil),                // 40: rbp.rpc.voice_lover.ReqUpdateAlbum
	(*ResUpdateAlbum)(nil),                // 41: rbp.rpc.voice_lover.ResUpdateAlbum
	(*ReqDelAlbum)(nil),                   // 42: rbp.rpc.voice_lover.ReqDelAlbum
	(*ResDelAlbum)(nil),                   // 43: rbp.rpc.voice_lover.ResDelAlbum
	(*ReqGetAlbumList)(nil),               // 44: rbp.rpc.voice_lover.ReqGetAlbumList
	(*ResGetAlbumList)(nil),               // 45: rbp.rpc.voice_lover.ResGetAlbumList
	(*ReqGetAlbumDetail)(nil),             // 46: rbp.rpc.voice_lover.ReqGetAlbumDetail
	(*ResGetAlbumDetail)(nil),             // 47: rbp.rpc.voice_lover.ResGetAlbumDetail
	(*ReqAudioCollect)(nil),               // 48: rbp.rpc.voice_lover.ReqAudioCollect
	(*ResAudioCollect)(nil),               // 49: rbp.rpc.voice_lover.ResAudioCollect
	(*ReqAudioSubmitComment)(nil),         // 50: rbp.rpc.voice_lover.ReqAudioSubmitComment
	(*ReqGetAudioCommentList)(nil),        // 51: rbp.rpc.voice_lover.ReqGetAudioCommentList
	(*ReqGetAlbumCommentList)(nil),        // 52: rbp.rpc.voice_lover.ReqGetAlbumCommentList
	(*ResCommonPost)(nil),                 // 53: rbp.rpc.voice_lover.ResCommonPost
	(*ResCommentList)(nil),                // 54: rbp.rpc.voice_lover.ResCommentList
	(*ReqAlbumSubmitComment)(nil),         // 55: rbp.rpc.voice_lover.ReqAlbumSubmitComment
	(*ReqUpdateStatus)(nil),               // 56: rbp.rpc.voice_lover.ReqUpdateStatus
	(*ResUpdateStatus)(nil),               // 57: rbp.rpc.voice_lover.ResUpdateStatus
	(*ReqPlayStatReport)(nil),             // 58: rbp.rpc.voice_lover.ReqPlayStatReport
	(*ResPlayStatReport)(nil),             // 59: rbp.rpc.voice_lover.ResPlayStatReport
	(*ReqGetValidAudioUsers)(nil),         // 60: rbp.rpc.voice_lover.ReqGetValidAudioUsers
	(*ResGetValidAudioUsers)(nil),         // 61: rbp.rpc.voice_lover.ResGetValidAudioUsers
	(*ReqGetActivity)(nil),                // 62: rbp.rpc.voice_lover.ReqGetActivity
	(*RespGetActivity)(nil),               // 63: rbp.rpc.voice_lover.RespGetActivity
	(*ActivityInfo)(nil),                  // 64: rbp.rpc.voice_lover.ActivityInfo
	(*ReqGetAwardPackage)(nil),            // 65: rbp.rpc.voice_lover.ReqGetAwardPackage
	(*RespGetAwardPackage)(nil),           // 66: rbp.rpc.voice_lover.RespGetAwardPackage
	(*ReqGetRankAward)(nil),               // 67: rbp.rpc.voice_lover.ReqGetRankAward
	(*RespGetRankAward)(nil),              // 68: rbp.rpc.voice_lover.RespGetRankAward
	(*ActivityRankInfo)(nil),              // 69: rbp.rpc.voice_lover.ActivityRankInfo
	(*AwardPackageInfo)(nil),              // 70: rbp.rpc.voice_lover.AwardPackageInfo
	(*PretendInfo)(nil),                   // 71: rbp.rpc.voice_lover.PretendInfo
	(*ReqBatchGetAudioInfo)(nil),          // 72: rbp.rpc.voice_lover.ReqBatchGetAudioInfo
	(*RespBatchGetAudioInfo)(nil),         // 73: rbp.rpc.voice_lover.RespBatchGetAudioInfo
	(*ReqGenRecAlbum)(nil),                // 74: rbp.rpc.voice_lover.ReqGenRecAlbum
	(*RespGenRecAlbum)(nil),               // 75: rbp.rpc.voice_lover.RespGenRecAlbum
	(*ReqBatchCheckUserCollect)(nil),      // 76: rbp.rpc.voice_lover.ReqBatchCheckUserCollect
	(*RespBatchCheckUserCollect)(nil),     // 77: rbp.rpc.voice_lover.RespBatchCheckUserCollect
	(*ReqBatchGetCollectNum)(nil),         // 78: rbp.rpc.voice_lover.ReqBatchGetCollectNum
	(*RespBatchGetCollectNum)(nil),        // 79: rbp.rpc.voice_lover.RespBatchGetCollectNum
	(*ReqAudioCommentAuditCallback)(nil),  // 80: rbp.rpc.voice_lover.ReqAudioCommentAuditCallback
	(*RespAudioCommentAuditCallback)(nil), // 81: rbp.rpc.voice_lover.RespAudioCommentAuditCallback
	(*ReqAlbumCommentAuditCallback)(nil),  // 82: rbp.rpc.voice_lover.ReqAlbumCommentAuditCallback
	(*RespAlbumCommentAuditCallback)(nil), // 83: rbp.rpc.voice_lover.RespAlbumCommentAuditCallback
	nil,                                   // 84: rbp.rpc.voice_lover.ResBatchGetAlbumAudioCount.AlbumCountsEntry
	nil,                                   // 85: rbp.rpc.voice_lover.ResGetAlbumDetail.AlbumsEntry
	(*RespBatchGetAudioInfo_Audio)(nil),   // 86: rbp.rpc.voice_lover.RespBatchGetAudioInfo.Audio
	nil,                                   // 87: rbp.rpc.voice_lover.RespBatchCheckUserCollect.CollectInfoEntry
	nil,                                   // 88: rbp.rpc.voice_lover.RespBatchGetCollectNum.NumsEntry
	(*AlbumData)(nil),                     // 89: rbp.rpc.voice_lover.AlbumData
	(*BannerData)(nil),                    // 90: rbp.rpc.voice_lover.BannerData
	(*SubjectData)(nil),                   // 91: rbp.rpc.voice_lover.SubjectData
	(*AudioEditData)(nil),                 // 92: rbp.rpc.voice_lover.AudioEditData
	(*AudioData)(nil),                     // 93: rbp.rpc.voice_lover.AudioData
	(*AudioSimpleData)(nil),               // 94: rbp.rpc.voice_lover.AudioSimpleData
	(*Comment)(nil),                       // 95: rbp.rpc.voice_lover.Comment
}
var file_rpc_voice_lover_voice_lover_message_proto_depIdxs = []int32{
	89, // 0: rbp.rpc.voice_lover.ResGetAlbumInfoById.album:type_name -> rbp.rpc.voice_lover.AlbumData
	89, // 1: rbp.rpc.voice_lover.ResGetRecAlbums.albums:type_name -> rbp.rpc.voice_lover.AlbumData
	90, // 2: rbp.rpc.voice_lover.ResGetRecBanners.banners:type_name -> rbp.rpc.voice_lover.BannerData
	89, // 3: rbp.rpc.voice_lover.ResGetAlbumsByPage.albums:type_name -> rbp.rpc.voice_lover.AlbumData
	91, // 4: rbp.rpc.voice_lover.ResGetRecSubjects.subjects:type_name -> rbp.rpc.voice_lover.SubjectData
	92, // 5: rbp.rpc.voice_lover.ResGetAudioEdit.edits:type_name -> rbp.rpc.voice_lover.AudioEditData
	93, // 6: rbp.rpc.voice_lover.ResGetAudioDetail.audio:type_name -> rbp.rpc.voice_lover.AudioData
	89, // 7: rbp.rpc.voice_lover.ResGetAudioDetail.album:type_name -> rbp.rpc.voice_lover.AlbumData
	94, // 8: rbp.rpc.voice_lover.ResGetAudioListByAlbumId.audios:type_name -> rbp.rpc.voice_lover.AudioSimpleData
	84, // 9: rbp.rpc.voice_lover.ResBatchGetAlbumAudioCount.album_counts:type_name -> rbp.rpc.voice_lover.ResBatchGetAlbumAudioCount.AlbumCountsEntry
	89, // 10: rbp.rpc.voice_lover.ResGetAlbumCollectList.list:type_name -> rbp.rpc.voice_lover.AlbumData
	94, // 11: rbp.rpc.voice_lover.ResGetAudioCollectList.list:type_name -> rbp.rpc.voice_lover.AudioSimpleData
	89, // 12: rbp.rpc.voice_lover.ResGetAlbumList.albums:type_name -> rbp.rpc.voice_lover.AlbumData
	85, // 13: rbp.rpc.voice_lover.ResGetAlbumDetail.albums:type_name -> rbp.rpc.voice_lover.ResGetAlbumDetail.AlbumsEntry
	95, // 14: rbp.rpc.voice_lover.ResCommentList.list:type_name -> rbp.rpc.voice_lover.Comment
	64, // 15: rbp.rpc.voice_lover.RespGetActivity.activity:type_name -> rbp.rpc.voice_lover.ActivityInfo
	70, // 16: rbp.rpc.voice_lover.RespGetAwardPackage.data:type_name -> rbp.rpc.voice_lover.AwardPackageInfo
	70, // 17: rbp.rpc.voice_lover.RespGetRankAward.package:type_name -> rbp.rpc.voice_lover.AwardPackageInfo
	69, // 18: rbp.rpc.voice_lover.RespGetRankAward.ranks:type_name -> rbp.rpc.voice_lover.ActivityRankInfo
	71, // 19: rbp.rpc.voice_lover.AwardPackageInfo.pretends:type_name -> rbp.rpc.voice_lover.PretendInfo
	86, // 20: rbp.rpc.voice_lover.RespBatchGetAudioInfo.items:type_name -> rbp.rpc.voice_lover.RespBatchGetAudioInfo.Audio
	87, // 21: rbp.rpc.voice_lover.RespBatchCheckUserCollect.collect_info:type_name -> rbp.rpc.voice_lover.RespBatchCheckUserCollect.CollectInfoEntry
	88, // 22: rbp.rpc.voice_lover.RespBatchGetCollectNum.nums:type_name -> rbp.rpc.voice_lover.RespBatchGetCollectNum.NumsEntry
	89, // 23: rbp.rpc.voice_lover.ResGetAlbumDetail.AlbumsEntry.value:type_name -> rbp.rpc.voice_lover.AlbumData
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_rpc_voice_lover_voice_lover_message_proto_init() }
func file_rpc_voice_lover_voice_lover_message_proto_init() {
	if File_rpc_voice_lover_voice_lover_message_proto != nil {
		return
	}
	file_rpc_voice_lover_voice_lover_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAlbumInfoById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAlbumInfoById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetRecAlbums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetRecCommonAlbums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetRecAlbums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetRecBanners); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetRecBanners); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAlbumsByPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetSubjectAlbumsByPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAlbumsByPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetRecSubjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetRecSubjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAudioEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAudioEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAudioDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAudioDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAudioListByAlbumId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAudioListByAlbumId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatchGetAlbumAudioCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResBatchGetAlbumAudioCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAlbumCommentCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAlbumCommentCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqIsUserCollectAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResIsUserCollectAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResIsUserCollectAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqIsUserCollectAlbums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResIsUserCollectAlbums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAlbumCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAlbumCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAudioCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAudioCollectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAuditAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAuditAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpdateAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDelAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDelAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetAlbumDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAudioCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAudioCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAudioSubmitComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAudioCommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAlbumCommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCommonPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAlbumSubmitComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpdateStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPlayStatReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResPlayStatReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetValidAudioUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetValidAudioUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAwardPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetAwardPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetRankAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetRankAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityRankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardPackageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PretendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatchGetAudioInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespBatchGetAudioInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGenRecAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGenRecAlbum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatchCheckUserCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespBatchCheckUserCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatchGetCollectNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespBatchGetCollectNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAudioCommentAuditCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAudioCommentAuditCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAlbumCommentAuditCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespAlbumCommentAuditCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_voice_lover_voice_lover_message_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespBatchGetAudioInfo_Audio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_voice_lover_voice_lover_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   89,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_voice_lover_voice_lover_message_proto_goTypes,
		DependencyIndexes: file_rpc_voice_lover_voice_lover_message_proto_depIdxs,
		MessageInfos:      file_rpc_voice_lover_voice_lover_message_proto_msgTypes,
	}.Build()
	File_rpc_voice_lover_voice_lover_message_proto = out.File
	file_rpc_voice_lover_voice_lover_message_proto_rawDesc = nil
	file_rpc_voice_lover_voice_lover_message_proto_goTypes = nil
	file_rpc_voice_lover_voice_lover_message_proto_depIdxs = nil
}
