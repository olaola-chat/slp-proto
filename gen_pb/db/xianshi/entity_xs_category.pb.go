// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: entity_xs_category.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityXsCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"cid,primary"
	Cid uint32 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty" orm:"cid,primary"` //
	//@inject_tag: orm:"pid"
	Pid uint32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty" orm:"pid"` // 父类
	//@inject_tag: orm:"rid"
	Rid uint32 `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty" orm:"rid"` // 根类
	//@inject_tag: orm:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" orm:"name"` //
	//@inject_tag: orm:"icon"
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty" orm:"icon"` //
	//@inject_tag: orm:"type"
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty" orm:"type"` // 分类是连麦/线下/图文/视频
	//@inject_tag: orm:"price"
	Price uint32 `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty" orm:"price"` // 单价 / 分
	//@inject_tag: orm:"uint"
	Uint string `protobuf:"bytes,8,opt,name=uint,proto3" json:"uint,omitempty" orm:"uint"` // 单位（小时/局/十五分钟）
	//@inject_tag: orm:"auth"
	Auth string `protobuf:"bytes,9,opt,name=auth,proto3" json:"auth,omitempty" orm:"auth"` // 无需审核，一般审核，需要人工审核
	//@inject_tag: orm:"cover_description"
	CoverDescription string `protobuf:"bytes,10,opt,name=cover_description,json=coverDescription,proto3" json:"cover_description,omitempty" orm:"cover_description"` // 为空，则显示默认，请上传本人正面清晰照一张，无遮挡
	//@inject_tag: orm:"audio_description"
	AudioDescription string `protobuf:"bytes,11,opt,name=audio_description,json=audioDescription,proto3" json:"audio_description,omitempty" orm:"audio_description"` //
	//@inject_tag: orm:"example"
	Example string `protobuf:"bytes,12,opt,name=example,proto3" json:"example,omitempty" orm:"example"` //
	//@inject_tag: orm:"level"
	Level uint32 `protobuf:"varint,13,opt,name=level,proto3" json:"level,omitempty" orm:"level"` //
	//@inject_tag: orm:"deleted"
	Deleted uint32 `protobuf:"varint,14,opt,name=deleted,proto3" json:"deleted,omitempty" orm:"deleted"` //
	//@inject_tag: orm:"service_uid"
	ServiceUid uint32 `protobuf:"varint,15,opt,name=service_uid,json=serviceUid,proto3" json:"service_uid,omitempty" orm:"service_uid"` // person审核
	//@inject_tag: orm:"dpath"
	Dpath uint32 `protobuf:"varint,16,opt,name=dpath,proto3" json:"dpath,omitempty" orm:"dpath"` // 深度
	//@inject_tag: orm:"audio_need"
	AudioNeed uint32 `protobuf:"varint,17,opt,name=audio_need,json=audioNeed,proto3" json:"audio_need,omitempty" orm:"audio_need"` //
	//@inject_tag: orm:"types"
	Types string `protobuf:"bytes,18,opt,name=types,proto3" json:"types,omitempty" orm:"types"` // 对于线下品类，需要地图，这是高德的分类
	//@inject_tag: orm:"description"
	Description string `protobuf:"bytes,19,opt,name=description,proto3" json:"description,omitempty" orm:"description"` //
	//@inject_tag: orm:"ordering"
	Ordering uint32 `protobuf:"varint,20,opt,name=ordering,proto3" json:"ordering,omitempty" orm:"ordering"` //
	//@inject_tag: orm:"free"
	Free uint32 `protobuf:"varint,21,opt,name=free,proto3" json:"free,omitempty" orm:"free"` // 对用户首单免额/分
	//@inject_tag: orm:"game_id_need"
	GameIdNeed uint32 `protobuf:"varint,22,opt,name=game_id_need,json=gameIdNeed,proto3" json:"game_id_need,omitempty" orm:"game_id_need"` // 是否需要用户的game id
	//@inject_tag: orm:"video_need"
	VideoNeed uint32 `protobuf:"varint,23,opt,name=video_need,json=videoNeed,proto3" json:"video_need,omitempty" orm:"video_need"` // 是否需要用户上传视频
	//@inject_tag: orm:"video_id"
	VideoId uint32 `protobuf:"varint,24,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty" orm:"video_id"` // 实例的视频ID
	//@inject_tag: orm:"video_description"
	VideoDescription string `protobuf:"bytes,25,opt,name=video_description,json=videoDescription,proto3" json:"video_description,omitempty" orm:"video_description"` // 技能视频描述
	//@inject_tag: orm:"cond"
	Cond string `protobuf:"bytes,26,opt,name=cond,proto3" json:"cond,omitempty" orm:"cond"` // 技能资质要求
	//@inject_tag: orm:"duration"
	Duration int32 `protobuf:"varint,27,opt,name=duration,proto3" json:"duration,omitempty" orm:"duration"` // 锁定时间
	//@inject_tag: orm:"rate"
	Rate uint32 `protobuf:"varint,28,opt,name=rate,proto3" json:"rate,omitempty" orm:"rate"` // 品类的费率
	//@inject_tag: orm:"use_skill_cover"
	UseSkillCover int32 `protobuf:"varint,29,opt,name=use_skill_cover,json=useSkillCover,proto3" json:"use_skill_cover,omitempty" orm:"use_skill_cover"` // 使用技能封面
	//@inject_tag: orm:"_name"
	// string _name                            = 30; // 送审名字
	//@inject_tag: orm:"_display"
	XDisplay int32 `protobuf:"varint,31,opt,name=_display,json=Display,proto3" json:"_display,omitempty" orm:"_display"` // 是否显示的品类
	//@inject_tag: orm:"language"
	Language string `protobuf:"bytes,32,opt,name=language,proto3" json:"language,omitempty" orm:"language"` // 语言种类 分别为中文 台湾 英文
	//@inject_tag: orm:"audio_example"
	AudioExample string `protobuf:"bytes,33,opt,name=audio_example,json=audioExample,proto3" json:"audio_example,omitempty" orm:"audio_example"` //
}

func (x *EntityXsCategory) Reset() {
	*x = EntityXsCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_xs_category_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsCategory) ProtoMessage() {}

func (x *EntityXsCategory) ProtoReflect() protoreflect.Message {
	mi := &file_entity_xs_category_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsCategory.ProtoReflect.Descriptor instead.
func (*EntityXsCategory) Descriptor() ([]byte, []int) {
	return file_entity_xs_category_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsCategory) GetCid() uint32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *EntityXsCategory) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *EntityXsCategory) GetRid() uint32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *EntityXsCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityXsCategory) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *EntityXsCategory) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EntityXsCategory) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *EntityXsCategory) GetUint() string {
	if x != nil {
		return x.Uint
	}
	return ""
}

func (x *EntityXsCategory) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *EntityXsCategory) GetCoverDescription() string {
	if x != nil {
		return x.CoverDescription
	}
	return ""
}

func (x *EntityXsCategory) GetAudioDescription() string {
	if x != nil {
		return x.AudioDescription
	}
	return ""
}

func (x *EntityXsCategory) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *EntityXsCategory) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *EntityXsCategory) GetDeleted() uint32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *EntityXsCategory) GetServiceUid() uint32 {
	if x != nil {
		return x.ServiceUid
	}
	return 0
}

func (x *EntityXsCategory) GetDpath() uint32 {
	if x != nil {
		return x.Dpath
	}
	return 0
}

func (x *EntityXsCategory) GetAudioNeed() uint32 {
	if x != nil {
		return x.AudioNeed
	}
	return 0
}

func (x *EntityXsCategory) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

func (x *EntityXsCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EntityXsCategory) GetOrdering() uint32 {
	if x != nil {
		return x.Ordering
	}
	return 0
}

func (x *EntityXsCategory) GetFree() uint32 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *EntityXsCategory) GetGameIdNeed() uint32 {
	if x != nil {
		return x.GameIdNeed
	}
	return 0
}

func (x *EntityXsCategory) GetVideoNeed() uint32 {
	if x != nil {
		return x.VideoNeed
	}
	return 0
}

func (x *EntityXsCategory) GetVideoId() uint32 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *EntityXsCategory) GetVideoDescription() string {
	if x != nil {
		return x.VideoDescription
	}
	return ""
}

func (x *EntityXsCategory) GetCond() string {
	if x != nil {
		return x.Cond
	}
	return ""
}

func (x *EntityXsCategory) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *EntityXsCategory) GetRate() uint32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *EntityXsCategory) GetUseSkillCover() int32 {
	if x != nil {
		return x.UseSkillCover
	}
	return 0
}

func (x *EntityXsCategory) GetXDisplay() int32 {
	if x != nil {
		return x.XDisplay
	}
	return 0
}

func (x *EntityXsCategory) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *EntityXsCategory) GetAudioExample() string {
	if x != nil {
		return x.AudioExample
	}
	return ""
}

var File_entity_xs_category_proto protoreflect.FileDescriptor

var file_entity_xs_category_proto_rawDesc = []byte{
	0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xf5,
	0x06, 0x0a, 0x10, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x58, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x4e, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x5f, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x4e, 0x65, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x4e, 0x65, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x5f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_xs_category_proto_rawDescOnce sync.Once
	file_entity_xs_category_proto_rawDescData = file_entity_xs_category_proto_rawDesc
)

func file_entity_xs_category_proto_rawDescGZIP() []byte {
	file_entity_xs_category_proto_rawDescOnce.Do(func() {
		file_entity_xs_category_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_xs_category_proto_rawDescData)
	})
	return file_entity_xs_category_proto_rawDescData
}

var file_entity_xs_category_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entity_xs_category_proto_goTypes = []interface{}{
	(*EntityXsCategory)(nil), // 0: pb.EntityXsCategory
}
var file_entity_xs_category_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entity_xs_category_proto_init() }
func file_entity_xs_category_proto_init() {
	if File_entity_xs_category_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_xs_category_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_xs_category_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_xs_category_proto_goTypes,
		DependencyIndexes: file_entity_xs_category_proto_depIdxs,
		MessageInfos:      file_entity_xs_category_proto_msgTypes,
	}.Build()
	File_entity_xs_category_proto = out.File
	file_entity_xs_category_proto_rawDesc = nil
	file_entity_xs_category_proto_goTypes = nil
	file_entity_xs_category_proto_depIdxs = nil
}
