// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.15.5
// source: entity_xs_reception_task_user.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EntityXsReceptionTaskUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"id,primary"
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" orm:"id,primary"` //
	//@inject_tag: orm:"uid"
	Uid uint32 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty" orm:"uid"` // 接待uid
	//@inject_tag: orm:"rt_id"
	RtId uint32 `protobuf:"varint,3,opt,name=rt_id,json=rtId,proto3" json:"rt_id,omitempty" orm:"rt_id"` // 接待任务基础id
	//@inject_tag: orm:"rid"
	Rid uint32 `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty" orm:"rid"` // 房间id
	//@inject_tag: orm:"fans_group_num"
	FansGroupNum uint32 `protobuf:"varint,5,opt,name=fans_group_num,json=fansGroupNum,proto3" json:"fans_group_num,omitempty" orm:"fans_group_num"` // 粉丝团数
	//@inject_tag: orm:"cute_boss_num"
	CuteBossNum uint32 `protobuf:"varint,6,opt,name=cute_boss_num,json=cuteBossNum,proto3" json:"cute_boss_num,omitempty" orm:"cute_boss_num"` // 萌新老板数
	//@inject_tag: orm:"fans_num"
	FansNum uint32 `protobuf:"varint,7,opt,name=fans_num,json=fansNum,proto3" json:"fans_num,omitempty" orm:"fans_num"` // 粉丝数
	//@inject_tag: orm:"live_day_num"
	LiveDayNum uint32 `protobuf:"varint,8,opt,name=live_day_num,json=liveDayNum,proto3" json:"live_day_num,omitempty" orm:"live_day_num"` // 直播有效天
	//@inject_tag: orm:"live_gift_sum"
	LiveGiftSum uint32 `protobuf:"varint,9,opt,name=live_gift_sum,json=liveGiftSum,proto3" json:"live_gift_sum,omitempty" orm:"live_gift_sum"` // 接档礼物值
	//@inject_tag: orm:"live_time"
	LiveTime uint32 `protobuf:"varint,10,opt,name=live_time,json=liveTime,proto3" json:"live_time,omitempty" orm:"live_time"` // 直播时长（单位秒）
	//@inject_tag: orm:"pay_boss_num"
	PayBossNum uint32 `protobuf:"varint,11,opt,name=pay_boss_num,json=payBossNum,proto3" json:"pay_boss_num,omitempty" orm:"pay_boss_num"` // 下单老板数
	//@inject_tag: orm:"reception_time"
	ReceptionTime uint32 `protobuf:"varint,12,opt,name=reception_time,json=receptionTime,proto3" json:"reception_time,omitempty" orm:"reception_time"` // 接档时长（单位秒）
	//@inject_tag: orm:"boss_num"
	BossNum uint32 `protobuf:"varint,13,opt,name=boss_num,json=bossNum,proto3" json:"boss_num,omitempty" orm:"boss_num"` // 老板数
	//@inject_tag: orm:"gold_position_num"
	GoldPositionNum uint32 `protobuf:"varint,14,opt,name=gold_position_num,json=goldPositionNum,proto3" json:"gold_position_num,omitempty" orm:"gold_position_num"` // 金坑数
	//@inject_tag: orm:"silver_position_num"
	SilverPositionNum uint32 `protobuf:"varint,15,opt,name=silver_position_num,json=silverPositionNum,proto3" json:"silver_position_num,omitempty" orm:"silver_position_num"` // 银坑数
	//@inject_tag: orm:"copper_position_num"
	CopperPositionNum uint32 `protobuf:"varint,16,opt,name=copper_position_num,json=copperPositionNum,proto3" json:"copper_position_num,omitempty" orm:"copper_position_num"` // 铜坑数
	//@inject_tag: orm:"choose_song_num"
	ChooseSongNum uint32 `protobuf:"varint,17,opt,name=choose_song_num,json=chooseSongNum,proto3" json:"choose_song_num,omitempty" orm:"choose_song_num"` // 点歌数量
	//@inject_tag: orm:"heart_beats_num"
	HeartBeatsNum uint32 `protobuf:"varint,18,opt,name=heart_beats_num,json=heartBeatsNum,proto3" json:"heart_beats_num,omitempty" orm:"heart_beats_num"` // 心跳加速数目
	//@inject_tag: orm:"inlove_firstsight_num"
	InloveFirstsightNum uint32 `protobuf:"varint,19,opt,name=inlove_firstsight_num,json=inloveFirstsightNum,proto3" json:"inlove_firstsight_num,omitempty" orm:"inlove_firstsight_num"` // 一见钟情数目
	//@inject_tag: orm:"only_you_num"
	OnlyYouNum uint32 `protobuf:"varint,20,opt,name=only_you_num,json=onlyYouNum,proto3" json:"only_you_num,omitempty" orm:"only_you_num"` // 非你不可数目
	//@inject_tag: orm:"below_five_num"
	BelowFiveNum uint32 `protobuf:"varint,21,opt,name=below_five_num,json=belowFiveNum,proto3" json:"below_five_num,omitempty" orm:"below_five_num"` // 0~5级付费用户数
	//@inject_tag: orm:"invite_live_num"
	InviteLiveNum uint32 `protobuf:"varint,22,opt,name=invite_live_num,json=inviteLiveNum,proto3" json:"invite_live_num,omitempty" orm:"invite_live_num"` // 邀请上麦数
	//@inject_tag: orm:"warning_paid_num"
	WarningPaidNum uint32 `protobuf:"varint,23,opt,name=warning_paid_num,json=warningPaidNum,proto3" json:"warning_paid_num,omitempty" orm:"warning_paid_num"` // 付费优质用户数
	//@inject_tag: orm:"level"
	Level uint32 `protobuf:"varint,24,opt,name=level,proto3" json:"level,omitempty" orm:"level"` // 当前所在任务等级
	//@inject_tag: orm:"complete_level"
	CompleteLevel uint32 `protobuf:"varint,25,opt,name=complete_level,json=completeLevel,proto3" json:"complete_level,omitempty" orm:"complete_level"` // 完成的最高任务等级
	//@inject_tag: orm:"settle_time"
	SettleTime uint32 `protobuf:"varint,26,opt,name=settle_time,json=settleTime,proto3" json:"settle_time,omitempty" orm:"settle_time"` // 结算时间
	//@inject_tag: orm:"create_time"
	CreateTime uint32 `protobuf:"varint,27,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty" orm:"create_time"` // 创建时间
	//@inject_tag: orm:"update_time"
	UpdateTime int64 `protobuf:"varint,28,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty" orm:"update_time"` // 最后更新时间
	//@inject_tag: orm:"vip_between_seven_and_fourteen_dashang_num"
	VipBetweenSevenAndFourteenDashangNum int64 `protobuf:"varint,29,opt,name=vip_between_seven_and_fourteen_dashang_num,json=vipBetweenSevenAndFourteenDashangNum,proto3" json:"vip_between_seven_and_fourteen_dashang_num,omitempty" orm:"vip_between_seven_and_fourteen_dashang_num"` //
	//@inject_tag: orm:"reception_gift_num"
	ReceptionGiftNum int64 `protobuf:"varint,30,opt,name=reception_gift_num,json=receptionGiftNum,proto3" json:"reception_gift_num,omitempty" orm:"reception_gift_num"` //
	//@inject_tag: orm:"new_user_follow_num"
	NewUserFollowNum int64 `protobuf:"varint,31,opt,name=new_user_follow_num,json=newUserFollowNum,proto3" json:"new_user_follow_num,omitempty" orm:"new_user_follow_num"` //
	//@inject_tag: orm:"vip_between_seven_and_forteen_gift_num"
	VipBetweenSevenAndForteenGiftNum int64 `protobuf:"varint,32,opt,name=vip_between_seven_and_forteen_gift_num,json=vipBetweenSevenAndForteenGiftNum,proto3" json:"vip_between_seven_and_forteen_gift_num,omitempty" orm:"vip_between_seven_and_forteen_gift_num"` //
}

func (x *EntityXsReceptionTaskUser) Reset() {
	*x = EntityXsReceptionTaskUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_xs_reception_task_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsReceptionTaskUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsReceptionTaskUser) ProtoMessage() {}

func (x *EntityXsReceptionTaskUser) ProtoReflect() protoreflect.Message {
	mi := &file_entity_xs_reception_task_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsReceptionTaskUser.ProtoReflect.Descriptor instead.
func (*EntityXsReceptionTaskUser) Descriptor() ([]byte, []int) {
	return file_entity_xs_reception_task_user_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsReceptionTaskUser) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetRtId() uint32 {
	if x != nil {
		return x.RtId
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetRid() uint32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetFansGroupNum() uint32 {
	if x != nil {
		return x.FansGroupNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetCuteBossNum() uint32 {
	if x != nil {
		return x.CuteBossNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetFansNum() uint32 {
	if x != nil {
		return x.FansNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetLiveDayNum() uint32 {
	if x != nil {
		return x.LiveDayNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetLiveGiftSum() uint32 {
	if x != nil {
		return x.LiveGiftSum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetLiveTime() uint32 {
	if x != nil {
		return x.LiveTime
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetPayBossNum() uint32 {
	if x != nil {
		return x.PayBossNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetReceptionTime() uint32 {
	if x != nil {
		return x.ReceptionTime
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetBossNum() uint32 {
	if x != nil {
		return x.BossNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetGoldPositionNum() uint32 {
	if x != nil {
		return x.GoldPositionNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetSilverPositionNum() uint32 {
	if x != nil {
		return x.SilverPositionNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetCopperPositionNum() uint32 {
	if x != nil {
		return x.CopperPositionNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetChooseSongNum() uint32 {
	if x != nil {
		return x.ChooseSongNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetHeartBeatsNum() uint32 {
	if x != nil {
		return x.HeartBeatsNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetInloveFirstsightNum() uint32 {
	if x != nil {
		return x.InloveFirstsightNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetOnlyYouNum() uint32 {
	if x != nil {
		return x.OnlyYouNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetBelowFiveNum() uint32 {
	if x != nil {
		return x.BelowFiveNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetInviteLiveNum() uint32 {
	if x != nil {
		return x.InviteLiveNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetWarningPaidNum() uint32 {
	if x != nil {
		return x.WarningPaidNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetCompleteLevel() uint32 {
	if x != nil {
		return x.CompleteLevel
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetSettleTime() uint32 {
	if x != nil {
		return x.SettleTime
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetVipBetweenSevenAndFourteenDashangNum() int64 {
	if x != nil {
		return x.VipBetweenSevenAndFourteenDashangNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetReceptionGiftNum() int64 {
	if x != nil {
		return x.ReceptionGiftNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetNewUserFollowNum() int64 {
	if x != nil {
		return x.NewUserFollowNum
	}
	return 0
}

func (x *EntityXsReceptionTaskUser) GetVipBetweenSevenAndForteenGiftNum() int64 {
	if x != nil {
		return x.VipBetweenSevenAndForteenGiftNum
	}
	return 0
}

var File_entity_xs_reception_task_user_proto protoreflect.FileDescriptor

var file_entity_xs_reception_task_user_proto_rawDesc = []byte{
	0x0a, 0x23, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xe3, 0x09, 0x0a, 0x19, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x58, 0x73, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x74, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x61, 0x6e, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x62,
	0x6f, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x75, 0x74, 0x65, 0x42, 0x6f, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61,
	0x6e, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x61,
	0x6e, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61,
	0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x76,
	0x65, 0x44, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x67, 0x69, 0x66, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6c, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x5f,
	0x62, 0x6f, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x42, 0x6f, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x6f, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x11,
	0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x6f, 0x6c, 0x64, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x69, 0x6c, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x70, 0x70,
	0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6f, 0x70, 0x70, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x6f, 0x6f,
	0x73, 0x65, 0x5f, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x53, 0x6f, 0x6e, 0x67, 0x4e, 0x75, 0x6d,
	0x12, 0x26, 0x0a, 0x0f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x65, 0x61, 0x74, 0x73, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x42, 0x65, 0x61, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x6c, 0x6f,
	0x76, 0x65, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x73, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x69, 0x6e, 0x6c, 0x6f, 0x76, 0x65, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x73, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0c,
	0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x79, 0x6f, 0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x59, 0x6f, 0x75, 0x4e, 0x75, 0x6d, 0x12, 0x24,
	0x0a, 0x0e, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x46, 0x69, 0x76,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x76, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x10,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x2a, 0x76, 0x69, 0x70, 0x5f, 0x62, 0x65,
	0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f,
	0x66, 0x6f, 0x75, 0x72, 0x74, 0x65, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x61, 0x6e, 0x67,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x24, 0x76, 0x69, 0x70, 0x42,
	0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x41, 0x6e, 0x64, 0x46, 0x6f,
	0x75, 0x72, 0x74, 0x65, 0x65, 0x6e, 0x44, 0x61, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x4e, 0x75, 0x6d,
	0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x2d,
	0x0a, 0x13, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6e, 0x65, 0x77,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x12, 0x50, 0x0a,
	0x26, 0x76, 0x69, 0x70, 0x5f, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x76,
	0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x74, 0x65, 0x65, 0x6e, 0x5f, 0x67,
	0x69, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x20, 0x76,
	0x69, 0x70, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x41, 0x6e,
	0x64, 0x46, 0x6f, 0x72, 0x74, 0x65, 0x65, 0x6e, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x42,
	0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_xs_reception_task_user_proto_rawDescOnce sync.Once
	file_entity_xs_reception_task_user_proto_rawDescData = file_entity_xs_reception_task_user_proto_rawDesc
)

func file_entity_xs_reception_task_user_proto_rawDescGZIP() []byte {
	file_entity_xs_reception_task_user_proto_rawDescOnce.Do(func() {
		file_entity_xs_reception_task_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_xs_reception_task_user_proto_rawDescData)
	})
	return file_entity_xs_reception_task_user_proto_rawDescData
}

var file_entity_xs_reception_task_user_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entity_xs_reception_task_user_proto_goTypes = []interface{}{
	(*EntityXsReceptionTaskUser)(nil), // 0: pb.EntityXsReceptionTaskUser
}
var file_entity_xs_reception_task_user_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entity_xs_reception_task_user_proto_init() }
func file_entity_xs_reception_task_user_proto_init() {
	if File_entity_xs_reception_task_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_xs_reception_task_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsReceptionTaskUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_xs_reception_task_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_xs_reception_task_user_proto_goTypes,
		DependencyIndexes: file_entity_xs_reception_task_user_proto_depIdxs,
		MessageInfos:      file_entity_xs_reception_task_user_proto_msgTypes,
	}.Build()
	File_entity_xs_reception_task_user_proto = out.File
	file_entity_xs_reception_task_user_proto_rawDesc = nil
	file_entity_xs_reception_task_user_proto_goTypes = nil
	file_entity_xs_reception_task_user_proto_depIdxs = nil
}
