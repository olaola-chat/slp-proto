// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.15.5
// source: entity_xs_commodity.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EntityXsCommodity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"cid,primary"
	Cid int32 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty" orm:"cid,primary"` //
	//@inject_tag: orm:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" orm:"name"` //
	//@inject_tag: orm:"group_id"
	GroupId uint32 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty" orm:"group_id"` // 同组sku物品共属的组id
	//@inject_tag: orm:"name_zh_tw"
	NameZhTw string `protobuf:"bytes,4,opt,name=name_zh_tw,json=nameZhTw,proto3" json:"name_zh_tw,omitempty" orm:"name_zh_tw"` // 台湾版名称
	//@inject_tag: orm:"name_en"
	NameEn string `protobuf:"bytes,5,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty" orm:"name_en"` // 英文版名称
	//@inject_tag: orm:"type"
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty" orm:"type"` // 经验值（exp）,箱子（box),钥匙(key),头像框(header),爵位(title),礼物(gift),守护(defend),电台守护(radio-defend),优惠券(coupon),坐骑(mounts),ring), 入场特效(effect), 主页装扮(decorate)，联盟宝箱(union-box)，联盟头像框(union_header)，结婚戒指(marry_ring), 游戏赛事(game_ticket), 云游戏时长卡(cloud_game_card), 车队(vehicle_ticket), 陪玩车票(play_ticket),团战应援券(group_pk_coupon),夜店酒水(pub_drink),喊话卡(broadcast_ticket),游戏讲座(game_lecture_video),访客记录本(visitor_book),陪玩券(god_discount_ticket),道具类(prop),小喇叭(trumpet),皮队友通用物品类型(prop_mate),伴伴玩伴卡(game_card),聊天气泡尾饰(bubble_tail),房间资料卡装饰(card_decorate)
	//@inject_tag: orm:"sub_type"
	SubType string `protobuf:"bytes,7,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty" orm:"sub_type"` // 子类型名
	//@inject_tag: orm:"description"
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty" orm:"description"` // 物品描述
	//@inject_tag: orm:"price"
	Price int32 `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty" orm:"price"` // 价格
	//@inject_tag: orm:"image"
	Image string `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty" orm:"image"` // 图标地址
	//@inject_tag: orm:"image_bg"
	ImageBg string `protobuf:"bytes,11,opt,name=image_bg,json=imageBg,proto3" json:"image_bg,omitempty" orm:"image_bg"` // 背景图
	//@inject_tag: orm:"image_zh_tw"
	ImageZhTw string `protobuf:"bytes,12,opt,name=image_zh_tw,json=imageZhTw,proto3" json:"image_zh_tw,omitempty" orm:"image_zh_tw"` // 图标地址台湾版
	//@inject_tag: orm:"image_en"
	ImageEn string `protobuf:"bytes,13,opt,name=image_en,json=imageEn,proto3" json:"image_en,omitempty" orm:"image_en"` // 图标地址英文版
	//@inject_tag: orm:"period"
	Period int32 `protobuf:"varint,14,opt,name=period,proto3" json:"period,omitempty" orm:"period"` // 有效期，精确到天
	//@inject_tag: orm:"period_hour"
	PeriodHour int32 `protobuf:"varint,15,opt,name=period_hour,json=periodHour,proto3" json:"period_hour,omitempty" orm:"period_hour"` //
	//@inject_tag: orm:"only_newpay"
	OnlyNewpay int32 `protobuf:"varint,16,opt,name=only_newpay,json=onlyNewpay,proto3" json:"only_newpay,omitempty" orm:"only_newpay"` // 是否必须为新支付
	//@inject_tag: orm:"duction_money"
	DuctionMoney int32 `protobuf:"varint,17,opt,name=duction_money,json=ductionMoney,proto3" json:"duction_money,omitempty" orm:"duction_money"` // 优惠券抵扣的钱，单位分
	//@inject_tag: orm:"ext_id"
	ExtId int32 `protobuf:"varint,18,opt,name=ext_id,json=extId,proto3" json:"ext_id,omitempty" orm:"ext_id"` // 类型为礼物优惠券时可使用的物品id 类型为守护、电台守护、爵位优惠券时表示物品的等级 类型为爵位时表示爵位的等级 类型为守护、电台守护时表示守护的等级 类型为礼物时表示礼物的gid
	//@inject_tag: orm:"ext_name"
	ExtName string `protobuf:"bytes,19,opt,name=ext_name,json=extName,proto3" json:"ext_name,omitempty" orm:"ext_name"` // 优惠券适用的物品名称
	//@inject_tag: orm:"jump_page"
	JumpPage string `protobuf:"bytes,20,opt,name=jump_page,json=jumpPage,proto3" json:"jump_page,omitempty" orm:"jump_page"` // 可跳转的页面
	//@inject_tag: orm:"coupon_type"
	CouponType string `protobuf:"bytes,21,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type,omitempty" orm:"coupon_type"` // 优惠券的类型
	//@inject_tag: orm:"dateline"
	Dateline int32 `protobuf:"varint,22,opt,name=dateline,proto3" json:"dateline,omitempty" orm:"dateline"` // 创建时间
	//@inject_tag: orm:"is_continue"
	IsContinue int32 `protobuf:"varint,23,opt,name=is_continue,json=isContinue,proto3" json:"is_continue,omitempty" orm:"is_continue"` // 是否续费才能用
	//@inject_tag: orm:"can_opened_by_box"
	CanOpenedByBox int32 `protobuf:"varint,24,opt,name=can_opened_by_box,json=canOpenedByBox,proto3" json:"can_opened_by_box,omitempty" orm:"can_opened_by_box"` // 头像框、坐骑能否在开箱子中开出来
	//@inject_tag: orm:"saling_on_shop"
	SalingOnShop int32 `protobuf:"varint,25,opt,name=saling_on_shop,json=salingOnShop,proto3" json:"saling_on_shop,omitempty" orm:"saling_on_shop"` // 0非售卖,1商城售卖,2金币商城,3碎片商城,4联盟银币商城,5联盟特权商城,6积分商城
	//@inject_tag: orm:"can_give"
	CanGive int32 `protobuf:"varint,26,opt,name=can_give,json=canGive,proto3" json:"can_give,omitempty" orm:"can_give"` // 物品是否能够赠送 1代表可以 0代表不可以 默认可以赠送
	//@inject_tag: orm:"title"
	Title int32 `protobuf:"varint,27,opt,name=title,proto3" json:"title,omitempty" orm:"title"` // 最低爵位等级
	//@inject_tag: orm:"ext_id_more"
	ExtIdMore int32 `protobuf:"varint,28,opt,name=ext_id_more,json=extIdMore,proto3" json:"ext_id_more,omitempty" orm:"ext_id_more"` //
	//@inject_tag: orm:"extra"
	Extra string `protobuf:"bytes,29,opt,name=extra,proto3" json:"extra,omitempty" orm:"extra"` // 配置信息
	//@inject_tag: orm:"money_type"
	MoneyType string `protobuf:"bytes,30,opt,name=money_type,json=moneyType,proto3" json:"money_type,omitempty" orm:"money_type"` //
	//@inject_tag: orm:"startline"
	Startline int32 `protobuf:"varint,31,opt,name=startline,proto3" json:"startline,omitempty" orm:"startline"` // 开始使用时间
	//@inject_tag: orm:"endline"
	Endline int32 `protobuf:"varint,32,opt,name=endline,proto3" json:"endline,omitempty" orm:"endline"` // 结束使用时间
	//@inject_tag: orm:"tag_ids"
	TagIds string `protobuf:"bytes,33,opt,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty" orm:"tag_ids"` // 物品标签,多个id以应文:隔开,如 1:2
	//@inject_tag: orm:"special_type"
	SpecialType uint32 `protobuf:"varint,34,opt,name=special_type,json=specialType,proto3" json:"special_type,omitempty" orm:"special_type"` // 是否特殊礼物，0：否，1：直播粉丝团礼物
	//@inject_tag: orm:"app_id"
	AppId uint32 `protobuf:"varint,35,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" orm:"app_id"` // 限定app_id
	//@inject_tag: orm:"discount"
	Discount uint32 `protobuf:"varint,36,opt,name=discount,proto3" json:"discount,omitempty" orm:"discount"` // 折扣比例
	//@inject_tag: orm:"sub_enable"
	SubEnable uint32 `protobuf:"varint,37,opt,name=sub_enable,json=subEnable,proto3" json:"sub_enable,omitempty" orm:"sub_enable"` // 子APP启用状态，0-都展示，1-仅子APP展示，2-子APP不展示
}

func (x *EntityXsCommodity) Reset() {
	*x = EntityXsCommodity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_xs_commodity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsCommodity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsCommodity) ProtoMessage() {}

func (x *EntityXsCommodity) ProtoReflect() protoreflect.Message {
	mi := &file_entity_xs_commodity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsCommodity.ProtoReflect.Descriptor instead.
func (*EntityXsCommodity) Descriptor() ([]byte, []int) {
	return file_entity_xs_commodity_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsCommodity) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *EntityXsCommodity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityXsCommodity) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *EntityXsCommodity) GetNameZhTw() string {
	if x != nil {
		return x.NameZhTw
	}
	return ""
}

func (x *EntityXsCommodity) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *EntityXsCommodity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EntityXsCommodity) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EntityXsCommodity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EntityXsCommodity) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *EntityXsCommodity) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *EntityXsCommodity) GetImageBg() string {
	if x != nil {
		return x.ImageBg
	}
	return ""
}

func (x *EntityXsCommodity) GetImageZhTw() string {
	if x != nil {
		return x.ImageZhTw
	}
	return ""
}

func (x *EntityXsCommodity) GetImageEn() string {
	if x != nil {
		return x.ImageEn
	}
	return ""
}

func (x *EntityXsCommodity) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *EntityXsCommodity) GetPeriodHour() int32 {
	if x != nil {
		return x.PeriodHour
	}
	return 0
}

func (x *EntityXsCommodity) GetOnlyNewpay() int32 {
	if x != nil {
		return x.OnlyNewpay
	}
	return 0
}

func (x *EntityXsCommodity) GetDuctionMoney() int32 {
	if x != nil {
		return x.DuctionMoney
	}
	return 0
}

func (x *EntityXsCommodity) GetExtId() int32 {
	if x != nil {
		return x.ExtId
	}
	return 0
}

func (x *EntityXsCommodity) GetExtName() string {
	if x != nil {
		return x.ExtName
	}
	return ""
}

func (x *EntityXsCommodity) GetJumpPage() string {
	if x != nil {
		return x.JumpPage
	}
	return ""
}

func (x *EntityXsCommodity) GetCouponType() string {
	if x != nil {
		return x.CouponType
	}
	return ""
}

func (x *EntityXsCommodity) GetDateline() int32 {
	if x != nil {
		return x.Dateline
	}
	return 0
}

func (x *EntityXsCommodity) GetIsContinue() int32 {
	if x != nil {
		return x.IsContinue
	}
	return 0
}

func (x *EntityXsCommodity) GetCanOpenedByBox() int32 {
	if x != nil {
		return x.CanOpenedByBox
	}
	return 0
}

func (x *EntityXsCommodity) GetSalingOnShop() int32 {
	if x != nil {
		return x.SalingOnShop
	}
	return 0
}

func (x *EntityXsCommodity) GetCanGive() int32 {
	if x != nil {
		return x.CanGive
	}
	return 0
}

func (x *EntityXsCommodity) GetTitle() int32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *EntityXsCommodity) GetExtIdMore() int32 {
	if x != nil {
		return x.ExtIdMore
	}
	return 0
}

func (x *EntityXsCommodity) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *EntityXsCommodity) GetMoneyType() string {
	if x != nil {
		return x.MoneyType
	}
	return ""
}

func (x *EntityXsCommodity) GetStartline() int32 {
	if x != nil {
		return x.Startline
	}
	return 0
}

func (x *EntityXsCommodity) GetEndline() int32 {
	if x != nil {
		return x.Endline
	}
	return 0
}

func (x *EntityXsCommodity) GetTagIds() string {
	if x != nil {
		return x.TagIds
	}
	return ""
}

func (x *EntityXsCommodity) GetSpecialType() uint32 {
	if x != nil {
		return x.SpecialType
	}
	return 0
}

func (x *EntityXsCommodity) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *EntityXsCommodity) GetDiscount() uint32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *EntityXsCommodity) GetSubEnable() uint32 {
	if x != nil {
		return x.SubEnable
	}
	return 0
}

var File_entity_xs_commodity_proto protoreflect.FileDescriptor

var file_entity_xs_commodity_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22,
	0xa7, 0x08, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x58, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x7a,
	0x68, 0x5f, 0x74, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65,
	0x5a, 0x68, 0x54, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x62, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x42, 0x67, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x7a,
	0x68, 0x5f, 0x74, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5a, 0x68, 0x54, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x65,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c,
	0x79, 0x5f, 0x6e, 0x65, 0x77, 0x70, 0x61, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6f, 0x6e, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x70, 0x61, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x15, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x11,
	0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x62, 0x6f,
	0x78, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x4f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x42, 0x79, 0x42, 0x6f, 0x78, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x6e, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x61, 0x6e, 0x47, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x74, 0x49, 0x64, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x73, 0x75, 0x62, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_xs_commodity_proto_rawDescOnce sync.Once
	file_entity_xs_commodity_proto_rawDescData = file_entity_xs_commodity_proto_rawDesc
)

func file_entity_xs_commodity_proto_rawDescGZIP() []byte {
	file_entity_xs_commodity_proto_rawDescOnce.Do(func() {
		file_entity_xs_commodity_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_xs_commodity_proto_rawDescData)
	})
	return file_entity_xs_commodity_proto_rawDescData
}

var file_entity_xs_commodity_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entity_xs_commodity_proto_goTypes = []interface{}{
	(*EntityXsCommodity)(nil), // 0: pb.EntityXsCommodity
}
var file_entity_xs_commodity_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entity_xs_commodity_proto_init() }
func file_entity_xs_commodity_proto_init() {
	if File_entity_xs_commodity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_xs_commodity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsCommodity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_xs_commodity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_xs_commodity_proto_goTypes,
		DependencyIndexes: file_entity_xs_commodity_proto_depIdxs,
		MessageInfos:      file_entity_xs_commodity_proto_msgTypes,
	}.Build()
	File_entity_xs_commodity_proto = out.File
	file_entity_xs_commodity_proto_rawDesc = nil
	file_entity_xs_commodity_proto_goTypes = nil
	file_entity_xs_commodity_proto_depIdxs = nil
}
