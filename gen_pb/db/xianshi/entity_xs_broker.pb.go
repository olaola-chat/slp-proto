// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: db/xianshi/entity_xs_broker.proto

package xianshi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityXsBroker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"id,primary"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" orm:"id,primary"` //
	//@inject_tag: orm:"bid,unique"
	Bid int32 `protobuf:"varint,2,opt,name=bid,proto3" json:"bid,omitempty" orm:"bid,unique"` // 公会id
	//@inject_tag: orm:"app_id"
	AppId int32 `protobuf:"varint,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" orm:"app_id"` // app_id
	//@inject_tag: orm:"bname"
	Bname string `protobuf:"bytes,4,opt,name=bname,proto3" json:"bname,omitempty" orm:"bname"` // 公会名称
	//@inject_tag: orm:"creater"
	Creater int32 `protobuf:"varint,5,opt,name=creater,proto3" json:"creater,omitempty" orm:"creater"` // 创始人uid
	//@inject_tag: orm:"deleted"
	Deleted int32 `protobuf:"varint,6,opt,name=deleted,proto3" json:"deleted,omitempty" orm:"deleted"` // 是否删除，0:正常,1:删除
	//@inject_tag: orm:"dateline"
	Dateline int32 `protobuf:"varint,7,opt,name=dateline,proto3" json:"dateline,omitempty" orm:"dateline"` // 创建时间
	//@inject_tag: orm:"types"
	Types string `protobuf:"bytes,8,opt,name=types,proto3" json:"types,omitempty" orm:"types"` // normal:接单，order:点单，friend:交友，radio:电台,music:点唱,cp:处对象 新类型:play 陪玩 fun娱乐 live直播,talk语聊
	//@inject_tag: orm:"level"
	Level float64 `protobuf:"fixed64,9,opt,name=level,proto3" json:"level,omitempty" orm:"level"` // 公会等级
	//@inject_tag: orm:"ordering"
	Ordering uint32 `protobuf:"varint,10,opt,name=ordering,proto3" json:"ordering,omitempty" orm:"ordering"` // 排序值
	//@inject_tag: orm:"hotnum"
	Hotnum uint32 `protobuf:"varint,11,opt,name=hotnum,proto3" json:"hotnum,omitempty" orm:"hotnum"` // 人气值
	//@inject_tag: orm:"pid"
	Pid uint32 `protobuf:"varint,12,opt,name=pid,proto3" json:"pid,omitempty" orm:"pid"` // 合伙企业id
	//@inject_tag: orm:"pack_cal"
	PackCal int32 `protobuf:"varint,13,opt,name=pack_cal,json=packCal,proto3" json:"pack_cal,omitempty" orm:"pack_cal"` // 结算方式 0个人结算 1打包结算2：语聊结算
	//@inject_tag: orm:"corp_cal"
	CorpCal uint32 `protobuf:"varint,14,opt,name=corp_cal,json=corpCal,proto3" json:"corp_cal,omitempty" orm:"corp_cal"` //
	//@inject_tag: orm:"white_count"
	WhiteCount uint32 `protobuf:"varint,15,opt,name=white_count,json=whiteCount,proto3" json:"white_count,omitempty" orm:"white_count"` //
	//@inject_tag: orm:"cname"
	Cname string `protobuf:"bytes,16,opt,name=cname,proto3" json:"cname,omitempty" orm:"cname"` //
	//@inject_tag: orm:"admin_uid"
	AdminUid uint32 `protobuf:"varint,17,opt,name=admin_uid,json=adminUid,proto3" json:"admin_uid,omitempty" orm:"admin_uid"` //
	//@inject_tag: orm:"language"
	Language string `protobuf:"bytes,18,opt,name=language,proto3" json:"language,omitempty" orm:"language"` //
	//@inject_tag: orm:"area"
	Area string `protobuf:"bytes,19,opt,name=area,proto3" json:"area,omitempty" orm:"area"` //
	//@inject_tag: orm:"recommended"
	Recommended uint32 `protobuf:"varint,20,opt,name=recommended,proto3" json:"recommended,omitempty" orm:"recommended"` //
	//@inject_tag: orm:"quality_status"
	QualityStatus uint32 `protobuf:"varint,21,opt,name=quality_status,json=qualityStatus,proto3" json:"quality_status,omitempty" orm:"quality_status"` // 合同资质审核状态0-未提交 1-待审核 2-审核未通过 3-审核通过 4-合同已签署
	//@inject_tag: orm:"bigarea_id"
	BigareaId uint32 `protobuf:"varint,22,opt,name=bigarea_id,json=bigareaId,proto3" json:"bigarea_id,omitempty" orm:"bigarea_id"` //
}

func (x *EntityXsBroker) Reset() {
	*x = EntityXsBroker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_xianshi_entity_xs_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsBroker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsBroker) ProtoMessage() {}

func (x *EntityXsBroker) ProtoReflect() protoreflect.Message {
	mi := &file_db_xianshi_entity_xs_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsBroker.ProtoReflect.Descriptor instead.
func (*EntityXsBroker) Descriptor() ([]byte, []int) {
	return file_db_xianshi_entity_xs_broker_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsBroker) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntityXsBroker) GetBid() int32 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *EntityXsBroker) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *EntityXsBroker) GetBname() string {
	if x != nil {
		return x.Bname
	}
	return ""
}

func (x *EntityXsBroker) GetCreater() int32 {
	if x != nil {
		return x.Creater
	}
	return 0
}

func (x *EntityXsBroker) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *EntityXsBroker) GetDateline() int32 {
	if x != nil {
		return x.Dateline
	}
	return 0
}

func (x *EntityXsBroker) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

func (x *EntityXsBroker) GetLevel() float64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *EntityXsBroker) GetOrdering() uint32 {
	if x != nil {
		return x.Ordering
	}
	return 0
}

func (x *EntityXsBroker) GetHotnum() uint32 {
	if x != nil {
		return x.Hotnum
	}
	return 0
}

func (x *EntityXsBroker) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *EntityXsBroker) GetPackCal() int32 {
	if x != nil {
		return x.PackCal
	}
	return 0
}

func (x *EntityXsBroker) GetCorpCal() uint32 {
	if x != nil {
		return x.CorpCal
	}
	return 0
}

func (x *EntityXsBroker) GetWhiteCount() uint32 {
	if x != nil {
		return x.WhiteCount
	}
	return 0
}

func (x *EntityXsBroker) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *EntityXsBroker) GetAdminUid() uint32 {
	if x != nil {
		return x.AdminUid
	}
	return 0
}

func (x *EntityXsBroker) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *EntityXsBroker) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *EntityXsBroker) GetRecommended() uint32 {
	if x != nil {
		return x.Recommended
	}
	return 0
}

func (x *EntityXsBroker) GetQualityStatus() uint32 {
	if x != nil {
		return x.QualityStatus
	}
	return 0
}

func (x *EntityXsBroker) GetBigareaId() uint32 {
	if x != nil {
		return x.BigareaId
	}
	return 0
}

var File_db_xianshi_entity_xs_broker_proto protoreflect.FileDescriptor

var file_db_xianshi_entity_xs_broker_proto_rawDesc = []byte{
	0x0a, 0x21, 0x64, 0x62, 0x2f, 0x78, 0x69, 0x61, 0x6e, 0x73, 0x68, 0x69, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x64, 0x62, 0x2e, 0x78, 0x69, 0x61, 0x6e, 0x73, 0x68, 0x69, 0x22,
	0xc3, 0x04, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x58, 0x73, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x62, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x74,
	0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x6f, 0x74, 0x6e, 0x75,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x61, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x63, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x63, 0x6f, 0x72, 0x70, 0x43, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x67, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x69, 0x67, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x64, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x61, 0x6f, 0x6c, 0x61, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f,
	0x72, 0x62, 0x70, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x5f, 0x70, 0x62,
	0x2f, 0x64, 0x62, 0x2f, 0x78, 0x69, 0x61, 0x6e, 0x73, 0x68, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_db_xianshi_entity_xs_broker_proto_rawDescOnce sync.Once
	file_db_xianshi_entity_xs_broker_proto_rawDescData = file_db_xianshi_entity_xs_broker_proto_rawDesc
)

func file_db_xianshi_entity_xs_broker_proto_rawDescGZIP() []byte {
	file_db_xianshi_entity_xs_broker_proto_rawDescOnce.Do(func() {
		file_db_xianshi_entity_xs_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_xianshi_entity_xs_broker_proto_rawDescData)
	})
	return file_db_xianshi_entity_xs_broker_proto_rawDescData
}

var file_db_xianshi_entity_xs_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_db_xianshi_entity_xs_broker_proto_goTypes = []interface{}{
	(*EntityXsBroker)(nil), // 0: db.xianshi.EntityXsBroker
}
var file_db_xianshi_entity_xs_broker_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_db_xianshi_entity_xs_broker_proto_init() }
func file_db_xianshi_entity_xs_broker_proto_init() {
	if File_db_xianshi_entity_xs_broker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_db_xianshi_entity_xs_broker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsBroker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_xianshi_entity_xs_broker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_xianshi_entity_xs_broker_proto_goTypes,
		DependencyIndexes: file_db_xianshi_entity_xs_broker_proto_depIdxs,
		MessageInfos:      file_db_xianshi_entity_xs_broker_proto_msgTypes,
	}.Build()
	File_db_xianshi_entity_xs_broker_proto = out.File
	file_db_xianshi_entity_xs_broker_proto_rawDesc = nil
	file_db_xianshi_entity_xs_broker_proto_goTypes = nil
	file_db_xianshi_entity_xs_broker_proto_depIdxs = nil
}
