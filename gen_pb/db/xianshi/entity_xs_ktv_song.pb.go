// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: entity_xs_ktv_song.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityXsKtvSong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"id,primary"
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" orm:"id,primary"` //
	//@inject_tag: orm:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" orm:"name"` // 歌曲名称
	//@inject_tag: orm:"photo"
	Photo string `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty" orm:"photo"` // 歌曲封面地址
	//@inject_tag: orm:"singer_id"
	SingerId uint32 `protobuf:"varint,4,opt,name=singer_id,json=singerId,proto3" json:"singer_id,omitempty" orm:"singer_id"` // 歌手id
	//@inject_tag: orm:"singer_name"
	SingerName string `protobuf:"bytes,5,opt,name=singer_name,json=singerName,proto3" json:"singer_name,omitempty" orm:"singer_name"` // 歌手名称
	//@inject_tag: orm:"original_mp3"
	OriginalMp3 string `protobuf:"bytes,6,opt,name=original_mp3,json=originalMp3,proto3" json:"original_mp3,omitempty" orm:"original_mp3"` // 原唱地址
	//@inject_tag: orm:"size"
	Size uint32 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty" orm:"size"` // 原声大小
	//@inject_tag: orm:"playtime"
	Playtime uint32 `protobuf:"varint,8,opt,name=playtime,proto3" json:"playtime,omitempty" orm:"playtime"` // 播放时长/毫秒
	//@inject_tag: orm:"hq_music"
	HqMusic string `protobuf:"bytes,9,opt,name=hq_music,json=hqMusic,proto3" json:"hq_music,omitempty" orm:"hq_music"` // 伴奏地址
	//@inject_tag: orm:"hq_size"
	HqSize uint32 `protobuf:"varint,10,opt,name=hq_size,json=hqSize,proto3" json:"hq_size,omitempty" orm:"hq_size"` // 伴奏大小
	//@inject_tag: orm:"hq_playtime"
	HqPlaytime uint32 `protobuf:"varint,11,opt,name=hq_playtime,json=hqPlaytime,proto3" json:"hq_playtime,omitempty" orm:"hq_playtime"` // 伴奏播放时长/毫秒
	//@inject_tag: orm:"brc"
	Brc string `protobuf:"bytes,12,opt,name=brc,proto3" json:"brc,omitempty" orm:"brc"` // 歌词地址
	//@inject_tag: orm:"uploader_uid"
	UploaderUid uint32 `protobuf:"varint,13,opt,name=uploader_uid,json=uploaderUid,proto3" json:"uploader_uid,omitempty" orm:"uploader_uid"` // 上传者uid
	//@inject_tag: orm:"uploader_name"
	UploaderName string `protobuf:"bytes,14,opt,name=uploader_name,json=uploaderName,proto3" json:"uploader_name,omitempty" orm:"uploader_name"` // 上传者名称
	//@inject_tag: orm:"uploader_photo"
	UploaderPhoto string `protobuf:"bytes,15,opt,name=uploader_photo,json=uploaderPhoto,proto3" json:"uploader_photo,omitempty" orm:"uploader_photo"` // 上传者头像
	//@inject_tag: orm:"tag"
	Tag string `protobuf:"bytes,16,opt,name=tag,proto3" json:"tag,omitempty" orm:"tag"` // tag
	//@inject_tag: orm:"type"
	Type string `protobuf:"bytes,17,opt,name=type,proto3" json:"type,omitempty" orm:"type"` // 推荐分类
	//@inject_tag: orm:"status"
	Status int32 `protobuf:"varint,18,opt,name=status,proto3" json:"status,omitempty" orm:"status"` // -2 已删除 -1。不分享。 0-未审核，1-已审核
	//@inject_tag: orm:"language"
	Language string `protobuf:"bytes,19,opt,name=language,proto3" json:"language,omitempty" orm:"language"` // 语言
	//@inject_tag: orm:"hq_status"
	HqStatus int32 `protobuf:"varint,20,opt,name=hq_status,json=hqStatus,proto3" json:"hq_status,omitempty" orm:"hq_status"` // 0 伴奏正在自动生成中, 1伴奏非自动生成中
	//@inject_tag: orm:"dateline"
	Dateline uint32 `protobuf:"varint,21,opt,name=dateline,proto3" json:"dateline,omitempty" orm:"dateline"` // 记录产生的时间
	//@inject_tag: orm:"updateline"
	Updateline uint32 `protobuf:"varint,22,opt,name=updateline,proto3" json:"updateline,omitempty" orm:"updateline"` // 记录更新的时间
	//@inject_tag: orm:"platform"
	Platform string `protobuf:"bytes,23,opt,name=platform,proto3" json:"platform,omitempty" orm:"platform"` // 歌曲隶属的平台
	//@inject_tag: orm:"platform_song_id"
	PlatformSongId string `protobuf:"bytes,24,opt,name=platform_song_id,json=platformSongId,proto3" json:"platform_song_id,omitempty" orm:"platform_song_id"` // 歌曲在隶属平台上的id
	//@inject_tag: orm:"platform_rank_id"
	PlatformRankId int32 `protobuf:"varint,25,opt,name=platform_rank_id,json=platformRankId,proto3" json:"platform_rank_id,omitempty" orm:"platform_rank_id"` // 歌曲在隶属平台上的id
	//@inject_tag: orm:"ordered_count"
	OrderedCount int32 `protobuf:"varint,26,opt,name=ordered_count,json=orderedCount,proto3" json:"ordered_count,omitempty" orm:"ordered_count"` // 歌曲点过次数
	//@inject_tag: orm:"sing_count"
	SingCount int32 `protobuf:"varint,27,opt,name=sing_count,json=singCount,proto3" json:"sing_count,omitempty" orm:"sing_count"` // 歌曲唱过次数
}

func (x *EntityXsKtvSong) Reset() {
	*x = EntityXsKtvSong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_xs_ktv_song_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsKtvSong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsKtvSong) ProtoMessage() {}

func (x *EntityXsKtvSong) ProtoReflect() protoreflect.Message {
	mi := &file_entity_xs_ktv_song_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsKtvSong.ProtoReflect.Descriptor instead.
func (*EntityXsKtvSong) Descriptor() ([]byte, []int) {
	return file_entity_xs_ktv_song_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsKtvSong) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntityXsKtvSong) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityXsKtvSong) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *EntityXsKtvSong) GetSingerId() uint32 {
	if x != nil {
		return x.SingerId
	}
	return 0
}

func (x *EntityXsKtvSong) GetSingerName() string {
	if x != nil {
		return x.SingerName
	}
	return ""
}

func (x *EntityXsKtvSong) GetOriginalMp3() string {
	if x != nil {
		return x.OriginalMp3
	}
	return ""
}

func (x *EntityXsKtvSong) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *EntityXsKtvSong) GetPlaytime() uint32 {
	if x != nil {
		return x.Playtime
	}
	return 0
}

func (x *EntityXsKtvSong) GetHqMusic() string {
	if x != nil {
		return x.HqMusic
	}
	return ""
}

func (x *EntityXsKtvSong) GetHqSize() uint32 {
	if x != nil {
		return x.HqSize
	}
	return 0
}

func (x *EntityXsKtvSong) GetHqPlaytime() uint32 {
	if x != nil {
		return x.HqPlaytime
	}
	return 0
}

func (x *EntityXsKtvSong) GetBrc() string {
	if x != nil {
		return x.Brc
	}
	return ""
}

func (x *EntityXsKtvSong) GetUploaderUid() uint32 {
	if x != nil {
		return x.UploaderUid
	}
	return 0
}

func (x *EntityXsKtvSong) GetUploaderName() string {
	if x != nil {
		return x.UploaderName
	}
	return ""
}

func (x *EntityXsKtvSong) GetUploaderPhoto() string {
	if x != nil {
		return x.UploaderPhoto
	}
	return ""
}

func (x *EntityXsKtvSong) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *EntityXsKtvSong) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EntityXsKtvSong) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *EntityXsKtvSong) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *EntityXsKtvSong) GetHqStatus() int32 {
	if x != nil {
		return x.HqStatus
	}
	return 0
}

func (x *EntityXsKtvSong) GetDateline() uint32 {
	if x != nil {
		return x.Dateline
	}
	return 0
}

func (x *EntityXsKtvSong) GetUpdateline() uint32 {
	if x != nil {
		return x.Updateline
	}
	return 0
}

func (x *EntityXsKtvSong) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *EntityXsKtvSong) GetPlatformSongId() string {
	if x != nil {
		return x.PlatformSongId
	}
	return ""
}

func (x *EntityXsKtvSong) GetPlatformRankId() int32 {
	if x != nil {
		return x.PlatformRankId
	}
	return 0
}

func (x *EntityXsKtvSong) GetOrderedCount() int32 {
	if x != nil {
		return x.OrderedCount
	}
	return 0
}

func (x *EntityXsKtvSong) GetSingCount() int32 {
	if x != nil {
		return x.SingCount
	}
	return 0
}

var File_entity_xs_ktv_song_proto protoreflect.FileDescriptor

var file_entity_xs_ktv_song_proto_rawDesc = []byte{
	0x0a, 0x18, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x6b, 0x74, 0x76, 0x5f,
	0x73, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x99,
	0x06, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x58, 0x73, 0x4b, 0x74, 0x76, 0x53, 0x6f,
	0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6d, 0x70, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x70, 0x33, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x71, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x68, 0x71, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x71, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x71, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x71, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x71, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x72, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x62, 0x72, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x68, 0x71, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x68, 0x71, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x73,
	0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_xs_ktv_song_proto_rawDescOnce sync.Once
	file_entity_xs_ktv_song_proto_rawDescData = file_entity_xs_ktv_song_proto_rawDesc
)

func file_entity_xs_ktv_song_proto_rawDescGZIP() []byte {
	file_entity_xs_ktv_song_proto_rawDescOnce.Do(func() {
		file_entity_xs_ktv_song_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_xs_ktv_song_proto_rawDescData)
	})
	return file_entity_xs_ktv_song_proto_rawDescData
}

var file_entity_xs_ktv_song_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entity_xs_ktv_song_proto_goTypes = []interface{}{
	(*EntityXsKtvSong)(nil), // 0: pb.EntityXsKtvSong
}
var file_entity_xs_ktv_song_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entity_xs_ktv_song_proto_init() }
func file_entity_xs_ktv_song_proto_init() {
	if File_entity_xs_ktv_song_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_xs_ktv_song_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsKtvSong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_xs_ktv_song_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_xs_ktv_song_proto_goTypes,
		DependencyIndexes: file_entity_xs_ktv_song_proto_depIdxs,
		MessageInfos:      file_entity_xs_ktv_song_proto_msgTypes,
	}.Build()
	File_entity_xs_ktv_song_proto = out.File
	file_entity_xs_ktv_song_proto_rawDesc = nil
	file_entity_xs_ktv_song_proto_goTypes = nil
	file_entity_xs_ktv_song_proto_depIdxs = nil
}
