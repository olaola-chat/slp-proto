// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: entity_xs_chatroom_module_factory.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityXsChatroomModuleFactory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"id,primary"
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" orm:"id,primary"` //
	//@inject_tag: orm:"factory_name"
	FactoryName string `protobuf:"bytes,2,opt,name=factory_name,json=factoryName,proto3" json:"factory_name,omitempty" orm:"factory_name"` // 房间工厂名称
	//@inject_tag: orm:"factory_type,unique"
	FactoryType string `protobuf:"bytes,3,opt,name=factory_type,json=factoryType,proto3" json:"factory_type,omitempty" orm:"factory_type,unique"` // 房间工厂类型
	//@inject_tag: orm:"module_id"
	ModuleId int32 `protobuf:"varint,4,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty" orm:"module_id"` // 使用的房间模版id
	//@inject_tag: orm:"party_type"
	PartyType string `protobuf:"bytes,5,opt,name=party_type,json=partyType,proto3" json:"party_type,omitempty" orm:"party_type"` // 隶属于哪个party
	//@inject_tag: orm:"default_paier"
	DefaultPaier uint32 `protobuf:"varint,6,opt,name=default_paier,json=defaultPaier,proto3" json:"default_paier,omitempty" orm:"default_paier"` // 是否显示老板位置
	//@inject_tag: orm:"default_reception"
	DefaultReception uint32 `protobuf:"varint,7,opt,name=default_reception,json=defaultReception,proto3" json:"default_reception,omitempty" orm:"default_reception"` // 是否显示接待位
	//@inject_tag: orm:"default_display_message"
	DefaultDisplayMessage uint32 `protobuf:"varint,8,opt,name=default_display_message,json=defaultDisplayMessage,proto3" json:"default_display_message,omitempty" orm:"default_display_message"` // 是否打开公屏
	//@inject_tag: orm:"default_theme"
	DefaultTheme string `protobuf:"bytes,9,opt,name=default_theme,json=defaultTheme,proto3" json:"default_theme,omitempty" orm:"default_theme"` // 皮肤
	//@inject_tag: orm:"default_background"
	DefaultBackground string `protobuf:"bytes,10,opt,name=default_background,json=defaultBackground,proto3" json:"default_background,omitempty" orm:"default_background"` // 背景图
	//@inject_tag: orm:"default_counter"
	DefaultCounter uint32 `protobuf:"varint,11,opt,name=default_counter,json=defaultCounter,proto3" json:"default_counter,omitempty" orm:"default_counter"` // 是否使用计时器
	//@inject_tag: orm:"default_mode"
	DefaultMode string `protobuf:"bytes,12,opt,name=default_mode,json=defaultMode,proto3" json:"default_mode,omitempty" orm:"default_mode"` // 是否自由上麦
	//@inject_tag: orm:"default_nine"
	DefaultNine uint32 `protobuf:"varint,13,opt,name=default_nine,json=defaultNine,proto3" json:"default_nine,omitempty" orm:"default_nine"` // 是否使用9麦,即不显示房主位
	//@inject_tag: orm:"default_state"
	DefaultState uint32 `protobuf:"varint,14,opt,name=default_state,json=defaultState,proto3" json:"default_state,omitempty" orm:"default_state"` // //房间私密等级 ：公开 const ROOM_PRIVATE_LEVEL_PUBLIC =0; //房间私密等级:私人 const ROOM_PRIVATE_LEVEL_PERSON =1; //房间私密等级：仅好友可见 const ROOM_PRIVATE_LEVEL_FRIEND = 2; //房间私密登记：仅粉丝可见 const ROOM_PRIVATE_LEVEL_FANS = 3;
	//@inject_tag: orm:"default_tag_id"
	DefaultTagId uint32 `protobuf:"varint,15,opt,name=default_tag_id,json=defaultTagId,proto3" json:"default_tag_id,omitempty" orm:"default_tag_id"` //
	//@inject_tag: orm:"promise_app"
	PromiseApp string `protobuf:"bytes,16,opt,name=promise_app,json=promiseApp,proto3" json:"promise_app,omitempty" orm:"promise_app"` // 允许的app应用
	//@inject_tag: orm:"promise_property"
	PromiseProperty string `protobuf:"bytes,17,opt,name=promise_property,json=promiseProperty,proto3" json:"promise_property,omitempty" orm:"promise_property"` // 允许的房间属性
	//@inject_tag: orm:"backend_default"
	BackendDefault uint32 `protobuf:"varint,18,opt,name=backend_default,json=backendDefault,proto3" json:"backend_default,omitempty" orm:"backend_default"` // 是否是作为运营后台的标准模版 0-不是运营后台的标准模版 1-是运营后台的标准模版
}

func (x *EntityXsChatroomModuleFactory) Reset() {
	*x = EntityXsChatroomModuleFactory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_xs_chatroom_module_factory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsChatroomModuleFactory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsChatroomModuleFactory) ProtoMessage() {}

func (x *EntityXsChatroomModuleFactory) ProtoReflect() protoreflect.Message {
	mi := &file_entity_xs_chatroom_module_factory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsChatroomModuleFactory.ProtoReflect.Descriptor instead.
func (*EntityXsChatroomModuleFactory) Descriptor() ([]byte, []int) {
	return file_entity_xs_chatroom_module_factory_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsChatroomModuleFactory) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntityXsChatroomModuleFactory) GetFactoryName() string {
	if x != nil {
		return x.FactoryName
	}
	return ""
}

func (x *EntityXsChatroomModuleFactory) GetFactoryType() string {
	if x != nil {
		return x.FactoryType
	}
	return ""
}

func (x *EntityXsChatroomModuleFactory) GetModuleId() int32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *EntityXsChatroomModuleFactory) GetPartyType() string {
	if x != nil {
		return x.PartyType
	}
	return ""
}

func (x *EntityXsChatroomModuleFactory) GetDefaultPaier() uint32 {
	if x != nil {
		return x.DefaultPaier
	}
	return 0
}

func (x *EntityXsChatroomModuleFactory) GetDefaultReception() uint32 {
	if x != nil {
		return x.DefaultReception
	}
	return 0
}

func (x *EntityXsChatroomModuleFactory) GetDefaultDisplayMessage() uint32 {
	if x != nil {
		return x.DefaultDisplayMessage
	}
	return 0
}

func (x *EntityXsChatroomModuleFactory) GetDefaultTheme() string {
	if x != nil {
		return x.DefaultTheme
	}
	return ""
}

func (x *EntityXsChatroomModuleFactory) GetDefaultBackground() string {
	if x != nil {
		return x.DefaultBackground
	}
	return ""
}

func (x *EntityXsChatroomModuleFactory) GetDefaultCounter() uint32 {
	if x != nil {
		return x.DefaultCounter
	}
	return 0
}

func (x *EntityXsChatroomModuleFactory) GetDefaultMode() string {
	if x != nil {
		return x.DefaultMode
	}
	return ""
}

func (x *EntityXsChatroomModuleFactory) GetDefaultNine() uint32 {
	if x != nil {
		return x.DefaultNine
	}
	return 0
}

func (x *EntityXsChatroomModuleFactory) GetDefaultState() uint32 {
	if x != nil {
		return x.DefaultState
	}
	return 0
}

func (x *EntityXsChatroomModuleFactory) GetDefaultTagId() uint32 {
	if x != nil {
		return x.DefaultTagId
	}
	return 0
}

func (x *EntityXsChatroomModuleFactory) GetPromiseApp() string {
	if x != nil {
		return x.PromiseApp
	}
	return ""
}

func (x *EntityXsChatroomModuleFactory) GetPromiseProperty() string {
	if x != nil {
		return x.PromiseProperty
	}
	return ""
}

func (x *EntityXsChatroomModuleFactory) GetBackendDefault() uint32 {
	if x != nil {
		return x.BackendDefault
	}
	return 0
}

var File_entity_xs_chatroom_module_factory_proto protoreflect.FileDescriptor

var file_entity_xs_chatroom_module_factory_proto_rawDesc = []byte{
	0x0a, 0x27, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x74,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xbe, 0x05,
	0x0a, 0x1d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x58, 0x73, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f,
	0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x61, 0x69,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x50, 0x61, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x69, 0x6e, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74,
	0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x6d, 0x69, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x41, 0x70, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x6d, 0x69, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x0b,
	0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_entity_xs_chatroom_module_factory_proto_rawDescOnce sync.Once
	file_entity_xs_chatroom_module_factory_proto_rawDescData = file_entity_xs_chatroom_module_factory_proto_rawDesc
)

func file_entity_xs_chatroom_module_factory_proto_rawDescGZIP() []byte {
	file_entity_xs_chatroom_module_factory_proto_rawDescOnce.Do(func() {
		file_entity_xs_chatroom_module_factory_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_xs_chatroom_module_factory_proto_rawDescData)
	})
	return file_entity_xs_chatroom_module_factory_proto_rawDescData
}

var file_entity_xs_chatroom_module_factory_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entity_xs_chatroom_module_factory_proto_goTypes = []interface{}{
	(*EntityXsChatroomModuleFactory)(nil), // 0: pb.EntityXsChatroomModuleFactory
}
var file_entity_xs_chatroom_module_factory_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entity_xs_chatroom_module_factory_proto_init() }
func file_entity_xs_chatroom_module_factory_proto_init() {
	if File_entity_xs_chatroom_module_factory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_xs_chatroom_module_factory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsChatroomModuleFactory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_xs_chatroom_module_factory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_xs_chatroom_module_factory_proto_goTypes,
		DependencyIndexes: file_entity_xs_chatroom_module_factory_proto_depIdxs,
		MessageInfos:      file_entity_xs_chatroom_module_factory_proto_msgTypes,
	}.Build()
	File_entity_xs_chatroom_module_factory_proto = out.File
	file_entity_xs_chatroom_module_factory_proto_rawDesc = nil
	file_entity_xs_chatroom_module_factory_proto_goTypes = nil
	file_entity_xs_chatroom_module_factory_proto_depIdxs = nil
}
