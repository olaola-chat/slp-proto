// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: entity_xs_user_profile.proto

package xianshi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityXsUserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"uid,primary"
	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty" orm:"uid,primary"` //
	//@inject_tag: orm:"app_id"
	AppId int32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" orm:"app_id"` //
	//@inject_tag: orm:"name"
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" orm:"name"` //
	//@inject_tag: orm:"icon"
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty" orm:"icon"` //
	//@inject_tag: orm:"sex"
	Sex uint32 `protobuf:"varint,5,opt,name=sex,proto3" json:"sex,omitempty" orm:"sex"` //
	//@inject_tag: orm:"video"
	Video string `protobuf:"bytes,6,opt,name=video,proto3" json:"video,omitempty" orm:"video"` //
	//@inject_tag: orm:"cover"
	Cover string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty" orm:"cover"` //
	//@inject_tag: orm:"birthday"
	Birthday uint32 `protobuf:"varint,8,opt,name=birthday,proto3" json:"birthday,omitempty" orm:"birthday"` //
	//@inject_tag: orm:"job"
	Job uint32 `protobuf:"varint,9,opt,name=job,proto3" json:"job,omitempty" orm:"job"` //
	//@inject_tag: orm:"role"
	Role uint32 `protobuf:"varint,10,opt,name=role,proto3" json:"role,omitempty" orm:"role"` //
	//@inject_tag: orm:"god_category"
	GodCategory string `protobuf:"bytes,11,opt,name=god_category,json=godCategory,proto3" json:"god_category,omitempty" orm:"god_category"` // 大神可用的资质
	//@inject_tag: orm:"god_num"
	GodNum uint32 `protobuf:"varint,12,opt,name=god_num,json=godNum,proto3" json:"god_num,omitempty" orm:"god_num"` // 接单次数，冗余
	//@inject_tag: orm:"god_month_num"
	GodMonthNum uint32 `protobuf:"varint,13,opt,name=god_month_num,json=godMonthNum,proto3" json:"god_month_num,omitempty" orm:"god_month_num"` // 最近一个月接单次数，每天更新
	//@inject_tag: orm:"god_week_num"
	GodWeekNum uint32 `protobuf:"varint,14,opt,name=god_week_num,json=godWeekNum,proto3" json:"god_week_num,omitempty" orm:"god_week_num"` // 最近一天接单次数，每天更新
	//@inject_tag: orm:"god_day_num"
	GodDayNum uint32 `protobuf:"varint,15,opt,name=god_day_num,json=godDayNum,proto3" json:"god_day_num,omitempty" orm:"god_day_num"` // 最近一天接单次数，每天更新
	//@inject_tag: orm:"god_now_num"
	GodNowNum uint32 `protobuf:"varint,16,opt,name=god_now_num,json=godNowNum,proto3" json:"god_now_num,omitempty" orm:"god_now_num"` // 当前的接单数，实时更新
	//@inject_tag: orm:"god_dateline"
	GodDateline uint32 `protobuf:"varint,17,opt,name=god_dateline,json=godDateline,proto3" json:"god_dateline,omitempty" orm:"god_dateline"` // 首次通过技能审核时间
	//@inject_tag: orm:"online_status"
	OnlineStatus uint32 `protobuf:"varint,18,opt,name=online_status,json=onlineStatus,proto3" json:"online_status,omitempty" orm:"online_status"` // 0 在线， 1离线，2退出
	//@inject_tag: orm:"online_dateline"
	OnlineDateline uint32 `protobuf:"varint,19,opt,name=online_dateline,json=onlineDateline,proto3" json:"online_dateline,omitempty" orm:"online_dateline"` // 最后在线时间
	//@inject_tag: orm:"version"
	Version uint32 `protobuf:"varint,20,opt,name=version,proto3" json:"version,omitempty" orm:"version"` //
	//@inject_tag: orm:"city"
	City string `protobuf:"bytes,21,opt,name=city,proto3" json:"city,omitempty" orm:"city"` //
	//@inject_tag: orm:"city_code"
	CityCode uint32 `protobuf:"varint,22,opt,name=city_code,json=cityCode,proto3" json:"city_code,omitempty" orm:"city_code"` //
	//@inject_tag: orm:"position"
	Position string `protobuf:"bytes,23,opt,name=position,proto3" json:"position,omitempty" orm:"position"` //
	//@inject_tag: orm:"longitude"
	Longitude float64 `protobuf:"fixed64,24,opt,name=longitude,proto3" json:"longitude,omitempty" orm:"longitude"` // 地点经度
	//@inject_tag: orm:"latitude"
	Latitude float64 `protobuf:"fixed64,25,opt,name=latitude,proto3" json:"latitude,omitempty" orm:"latitude"` // 地点纬度
	//@inject_tag: orm:"dateline"
	Dateline uint32 `protobuf:"varint,26,opt,name=dateline,proto3" json:"dateline,omitempty" orm:"dateline"` //
	//@inject_tag: orm:"deleted"
	Deleted int32 `protobuf:"varint,27,opt,name=deleted,proto3" json:"deleted,omitempty" orm:"deleted"` // 已被封禁，index表的冗余
	//@inject_tag: orm:"star"
	Star int32 `protobuf:"varint,28,opt,name=star,proto3" json:"star,omitempty" orm:"star"` // 综合评分
	//@inject_tag: orm:"tmp_icon"
	TmpIcon string `protobuf:"bytes,29,opt,name=tmp_icon,json=tmpIcon,proto3" json:"tmp_icon,omitempty" orm:"tmp_icon"` // 更新头像临时存储，用于后台审核
	//@inject_tag: orm:"update_time"
	UpdateTime int32 `protobuf:"varint,30,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty" orm:"update_time"` // 更新头像和更新图片会更新当前时间
	//@inject_tag: orm:"block_un_auther_message"
	BlockUnAutherMessage uint32 `protobuf:"varint,31,opt,name=block_un_auther_message,json=blockUnAutherMessage,proto3" json:"block_un_auther_message,omitempty" orm:"block_un_auther_message"` //
	//@inject_tag: orm:"sign"
	Sign string `protobuf:"bytes,32,opt,name=sign,proto3" json:"sign,omitempty" orm:"sign"` //
	//@inject_tag: orm:"pay_num"
	PayNum uint32 `protobuf:"varint,33,opt,name=pay_num,json=payNum,proto3" json:"pay_num,omitempty" orm:"pay_num"` // 用户完成订单次数，冗余
	//@inject_tag: orm:"pay_money"
	PayMoney uint32 `protobuf:"varint,34,opt,name=pay_money,json=payMoney,proto3" json:"pay_money,omitempty" orm:"pay_money"` // 用户累计消费，用于计算用户等级
	//@inject_tag: orm:"pay_room_money"
	PayRoomMoney uint64 `protobuf:"varint,35,opt,name=pay_room_money,json=payRoomMoney,proto3" json:"pay_room_money,omitempty" orm:"pay_room_money"` // 用户在聊天室里的累计消费，用于计算用户等级
	//@inject_tag: orm:"pay_order_num"
	PayOrderNum uint32 `protobuf:"varint,36,opt,name=pay_order_num,json=payOrderNum,proto3" json:"pay_order_num,omitempty" orm:"pay_order_num"` // 支付订单次数
	//@inject_tag: orm:"pay_receive_today"
	PayReceiveToday uint32 `protobuf:"varint,37,opt,name=pay_receive_today,json=payReceiveToday,proto3" json:"pay_receive_today,omitempty" orm:"pay_receive_today"` // 大神当天接的单子，以支付计算
	//@inject_tag: orm:"god_default_id"
	GodDefaultId uint32 `protobuf:"varint,38,opt,name=god_default_id,json=godDefaultId,proto3" json:"god_default_id,omitempty" orm:"god_default_id"` // 默认技能ID
	//@inject_tag: orm:"god_default_cid"
	GodDefaultCid uint32 `protobuf:"varint,39,opt,name=god_default_cid,json=godDefaultCid,proto3" json:"god_default_cid,omitempty" orm:"god_default_cid"` // 默认技能CID
	//@inject_tag: orm:"god_discount"
	GodDiscount uint32 `protobuf:"varint,40,opt,name=god_discount,json=godDiscount,proto3" json:"god_discount,omitempty" orm:"god_discount"` // 打折
	//@inject_tag: orm:"god_discount_id"
	GodDiscountId uint32 `protobuf:"varint,41,opt,name=god_discount_id,json=godDiscountId,proto3" json:"god_discount_id,omitempty" orm:"god_discount_id"` // 默认技能
	//@inject_tag: orm:"god_discount_cid"
	GodDiscountCid uint32 `protobuf:"varint,42,opt,name=god_discount_cid,json=godDiscountCid,proto3" json:"god_discount_cid,omitempty" orm:"god_discount_cid"` // 打折技能CID
	//@inject_tag: orm:"service_score"
	ServiceScore uint32 `protobuf:"varint,43,opt,name=service_score,json=serviceScore,proto3" json:"service_score,omitempty" orm:"service_score"` // 服务质量，后台设定
	//@inject_tag: orm:"service_busy"
	ServiceBusy uint32 `protobuf:"varint,44,opt,name=service_busy,json=serviceBusy,proto3" json:"service_busy,omitempty" orm:"service_busy"` // 是否忙
	//@inject_tag: orm:"service_pause"
	ServicePause uint32 `protobuf:"varint,45,opt,name=service_pause,json=servicePause,proto3" json:"service_pause,omitempty" orm:"service_pause"` // 是否暂停接单
	//@inject_tag: orm:"notice_order"
	NoticeOrder uint32 `protobuf:"varint,46,opt,name=notice_order,json=noticeOrder,proto3" json:"notice_order,omitempty" orm:"notice_order"` // 是否开启抢单通知
	//@inject_tag: orm:"title"
	Title uint32 `protobuf:"varint,47,opt,name=title,proto3" json:"title,omitempty" orm:"title"` // 爵位
	//@inject_tag: orm:"notice_power"
	NoticePower uint32 `protobuf:"varint,48,opt,name=notice_power,json=noticePower,proto3" json:"notice_power,omitempty" orm:"notice_power"` // 是否开启闪电抢单通知
	//@inject_tag: orm:"notice_game"
	NoticeGame uint32 `protobuf:"varint,49,opt,name=notice_game,json=noticeGame,proto3" json:"notice_game,omitempty" orm:"notice_game"` // 是否开启自动匹配小游戏
	//@inject_tag: orm:"credit_god"
	CreditGod int32 `protobuf:"varint,50,opt,name=credit_god,json=creditGod,proto3" json:"credit_god,omitempty" orm:"credit_god"` // 接单信用值
	//@inject_tag: orm:"credit_user"
	CreditUser int32 `protobuf:"varint,51,opt,name=credit_user,json=creditUser,proto3" json:"credit_user,omitempty" orm:"credit_user"` // 下单信用值
	//@inject_tag: orm:"credit_god_now"
	CreditGodNow int32 `protobuf:"varint,52,opt,name=credit_god_now,json=creditGodNow,proto3" json:"credit_god_now,omitempty" orm:"credit_god_now"` // 当日信用分数
	//@inject_tag: orm:"credit_god_week"
	CreditGodWeek int32 `protobuf:"varint,53,opt,name=credit_god_week,json=creditGodWeek,proto3" json:"credit_god_week,omitempty" orm:"credit_god_week"` // 本周信用分数
	//@inject_tag: orm:"credit_god_day"
	CreditGodDay int32 `protobuf:"varint,54,opt,name=credit_god_day,json=creditGodDay,proto3" json:"credit_god_day,omitempty" orm:"credit_god_day"` // 昨日信用分数
	//@inject_tag: orm:"tag"
	Tag uint32 `protobuf:"varint,55,opt,name=tag,proto3" json:"tag,omitempty" orm:"tag"` // 用户交友标签
	//@inject_tag: orm:"friend_state"
	FriendState uint32 `protobuf:"varint,56,opt,name=friend_state,json=friendState,proto3" json:"friend_state,omitempty" orm:"friend_state"` // 进入广场,0 未通过, 1 未开启, 2 已开启
	//@inject_tag: orm:"has_video"
	HasVideo uint32 `protobuf:"varint,57,opt,name=has_video,json=hasVideo,proto3" json:"has_video,omitempty" orm:"has_video"` // 是否有通过审核的视频
	//@inject_tag: orm:"online_visible"
	OnlineVisible string `protobuf:"bytes,58,opt,name=online_visible,json=onlineVisible,proto3" json:"online_visible,omitempty" orm:"online_visible"` // 在线隐身状态，0:关闭，unix时间 开启
}

func (x *EntityXsUserProfile) Reset() {
	*x = EntityXsUserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_xs_user_profile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsUserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsUserProfile) ProtoMessage() {}

func (x *EntityXsUserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_entity_xs_user_profile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsUserProfile.ProtoReflect.Descriptor instead.
func (*EntityXsUserProfile) Descriptor() ([]byte, []int) {
	return file_entity_xs_user_profile_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsUserProfile) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *EntityXsUserProfile) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *EntityXsUserProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityXsUserProfile) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *EntityXsUserProfile) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *EntityXsUserProfile) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *EntityXsUserProfile) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *EntityXsUserProfile) GetBirthday() uint32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *EntityXsUserProfile) GetJob() uint32 {
	if x != nil {
		return x.Job
	}
	return 0
}

func (x *EntityXsUserProfile) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodCategory() string {
	if x != nil {
		return x.GodCategory
	}
	return ""
}

func (x *EntityXsUserProfile) GetGodNum() uint32 {
	if x != nil {
		return x.GodNum
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodMonthNum() uint32 {
	if x != nil {
		return x.GodMonthNum
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodWeekNum() uint32 {
	if x != nil {
		return x.GodWeekNum
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodDayNum() uint32 {
	if x != nil {
		return x.GodDayNum
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodNowNum() uint32 {
	if x != nil {
		return x.GodNowNum
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodDateline() uint32 {
	if x != nil {
		return x.GodDateline
	}
	return 0
}

func (x *EntityXsUserProfile) GetOnlineStatus() uint32 {
	if x != nil {
		return x.OnlineStatus
	}
	return 0
}

func (x *EntityXsUserProfile) GetOnlineDateline() uint32 {
	if x != nil {
		return x.OnlineDateline
	}
	return 0
}

func (x *EntityXsUserProfile) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EntityXsUserProfile) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *EntityXsUserProfile) GetCityCode() uint32 {
	if x != nil {
		return x.CityCode
	}
	return 0
}

func (x *EntityXsUserProfile) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *EntityXsUserProfile) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *EntityXsUserProfile) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *EntityXsUserProfile) GetDateline() uint32 {
	if x != nil {
		return x.Dateline
	}
	return 0
}

func (x *EntityXsUserProfile) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *EntityXsUserProfile) GetStar() int32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *EntityXsUserProfile) GetTmpIcon() string {
	if x != nil {
		return x.TmpIcon
	}
	return ""
}

func (x *EntityXsUserProfile) GetUpdateTime() int32 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *EntityXsUserProfile) GetBlockUnAutherMessage() uint32 {
	if x != nil {
		return x.BlockUnAutherMessage
	}
	return 0
}

func (x *EntityXsUserProfile) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *EntityXsUserProfile) GetPayNum() uint32 {
	if x != nil {
		return x.PayNum
	}
	return 0
}

func (x *EntityXsUserProfile) GetPayMoney() uint32 {
	if x != nil {
		return x.PayMoney
	}
	return 0
}

func (x *EntityXsUserProfile) GetPayRoomMoney() uint64 {
	if x != nil {
		return x.PayRoomMoney
	}
	return 0
}

func (x *EntityXsUserProfile) GetPayOrderNum() uint32 {
	if x != nil {
		return x.PayOrderNum
	}
	return 0
}

func (x *EntityXsUserProfile) GetPayReceiveToday() uint32 {
	if x != nil {
		return x.PayReceiveToday
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodDefaultId() uint32 {
	if x != nil {
		return x.GodDefaultId
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodDefaultCid() uint32 {
	if x != nil {
		return x.GodDefaultCid
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodDiscount() uint32 {
	if x != nil {
		return x.GodDiscount
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodDiscountId() uint32 {
	if x != nil {
		return x.GodDiscountId
	}
	return 0
}

func (x *EntityXsUserProfile) GetGodDiscountCid() uint32 {
	if x != nil {
		return x.GodDiscountCid
	}
	return 0
}

func (x *EntityXsUserProfile) GetServiceScore() uint32 {
	if x != nil {
		return x.ServiceScore
	}
	return 0
}

func (x *EntityXsUserProfile) GetServiceBusy() uint32 {
	if x != nil {
		return x.ServiceBusy
	}
	return 0
}

func (x *EntityXsUserProfile) GetServicePause() uint32 {
	if x != nil {
		return x.ServicePause
	}
	return 0
}

func (x *EntityXsUserProfile) GetNoticeOrder() uint32 {
	if x != nil {
		return x.NoticeOrder
	}
	return 0
}

func (x *EntityXsUserProfile) GetTitle() uint32 {
	if x != nil {
		return x.Title
	}
	return 0
}

func (x *EntityXsUserProfile) GetNoticePower() uint32 {
	if x != nil {
		return x.NoticePower
	}
	return 0
}

func (x *EntityXsUserProfile) GetNoticeGame() uint32 {
	if x != nil {
		return x.NoticeGame
	}
	return 0
}

func (x *EntityXsUserProfile) GetCreditGod() int32 {
	if x != nil {
		return x.CreditGod
	}
	return 0
}

func (x *EntityXsUserProfile) GetCreditUser() int32 {
	if x != nil {
		return x.CreditUser
	}
	return 0
}

func (x *EntityXsUserProfile) GetCreditGodNow() int32 {
	if x != nil {
		return x.CreditGodNow
	}
	return 0
}

func (x *EntityXsUserProfile) GetCreditGodWeek() int32 {
	if x != nil {
		return x.CreditGodWeek
	}
	return 0
}

func (x *EntityXsUserProfile) GetCreditGodDay() int32 {
	if x != nil {
		return x.CreditGodDay
	}
	return 0
}

func (x *EntityXsUserProfile) GetTag() uint32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *EntityXsUserProfile) GetFriendState() uint32 {
	if x != nil {
		return x.FriendState
	}
	return 0
}

func (x *EntityXsUserProfile) GetHasVideo() uint32 {
	if x != nil {
		return x.HasVideo
	}
	return 0
}

func (x *EntityXsUserProfile) GetOnlineVisible() string {
	if x != nil {
		return x.OnlineVisible
	}
	return ""
}

var File_entity_xs_user_profile_proto protoreflect.FileDescriptor

var file_entity_xs_user_profile_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0x91, 0x0e, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x58, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67,
	0x6f, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x67, 0x6f, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x6f, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x67, 0x6f, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x6f, 0x64, 0x5f, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x67, 0x6f, 0x64, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x67,
	0x6f, 0x64, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x67, 0x6f, 0x64, 0x57, 0x65, 0x65, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a,
	0x0b, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x67, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a,
	0x0b, 0x67, 0x6f, 0x64, 0x5f, 0x6e, 0x6f, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x67, 0x6f, 0x64, 0x4e, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a,
	0x0c, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x67, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6d, 0x70,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6d, 0x70,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x75,
	0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x70, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x79,
	0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61,
	0x79, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x70, 0x61, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0d,
	0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x79,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0e,
	0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x6f, 0x64, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x6f, 0x64,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x6f,
	0x64, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x67, 0x6f, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x6f, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x67, 0x6f, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x62, 0x75, 0x73, 0x79, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x75, 0x73, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x75, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x2e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x5f, 0x67, 0x6f, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x47, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x5f, 0x67, 0x6f, 0x64, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x47, 0x6f, 0x64, 0x4e, 0x6f, 0x77, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x67, 0x6f, 0x64, 0x5f, 0x77, 0x65,
	0x65, 0x6b, 0x18, 0x35, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x47, 0x6f, 0x64, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x5f, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x36, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x47, 0x6f, 0x64, 0x44, 0x61, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18,
	0x39, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x61, 0x73, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12,
	0x25, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x67, 0x65, 0x6e, 0x5f,
	0x70, 0x62, 0x2f, 0x64, 0x62, 0x2f, 0x78, 0x69, 0x61, 0x6e, 0x73, 0x68, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_xs_user_profile_proto_rawDescOnce sync.Once
	file_entity_xs_user_profile_proto_rawDescData = file_entity_xs_user_profile_proto_rawDesc
)

func file_entity_xs_user_profile_proto_rawDescGZIP() []byte {
	file_entity_xs_user_profile_proto_rawDescOnce.Do(func() {
		file_entity_xs_user_profile_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_xs_user_profile_proto_rawDescData)
	})
	return file_entity_xs_user_profile_proto_rawDescData
}

var file_entity_xs_user_profile_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entity_xs_user_profile_proto_goTypes = []interface{}{
	(*EntityXsUserProfile)(nil), // 0: pb.EntityXsUserProfile
}
var file_entity_xs_user_profile_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entity_xs_user_profile_proto_init() }
func file_entity_xs_user_profile_proto_init() {
	if File_entity_xs_user_profile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_xs_user_profile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsUserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_xs_user_profile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_xs_user_profile_proto_goTypes,
		DependencyIndexes: file_entity_xs_user_profile_proto_depIdxs,
		MessageInfos:      file_entity_xs_user_profile_proto_msgTypes,
	}.Build()
	File_entity_xs_user_profile_proto = out.File
	file_entity_xs_user_profile_proto_rawDesc = nil
	file_entity_xs_user_profile_proto_goTypes = nil
	file_entity_xs_user_profile_proto_depIdxs = nil
}
