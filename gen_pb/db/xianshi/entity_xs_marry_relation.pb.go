// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: db/xianshi/entity_xs_marry_relation.proto

package xianshi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityXsMarryRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"id,primary"
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" orm:"id,primary"` //
	//@inject_tag: orm:"uid,unique"
	Uid uint32 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty" orm:"uid,unique"` //
	//@inject_tag: orm:"to_uid,unique"
	ToUid int32 `protobuf:"varint,3,opt,name=to_uid,json=toUid,proto3" json:"to_uid,omitempty" orm:"to_uid,unique"` //
	//@inject_tag: orm:"relation"
	Relation uint32 `protobuf:"varint,4,opt,name=relation,proto3" json:"relation,omitempty" orm:"relation"` // 关系：1-结婚中，2-申请离婚中
	//@inject_tag: orm:"cid"
	Cid uint32 `protobuf:"varint,5,opt,name=cid,proto3" json:"cid,omitempty" orm:"cid"` // 结婚戒指物品id
	//@inject_tag: orm:"has_wedding"
	HasWedding uint32 `protobuf:"varint,6,opt,name=has_wedding,json=hasWedding,proto3" json:"has_wedding,omitempty" orm:"has_wedding"` // 是否定了婚礼
	//@inject_tag: orm:"apply_release_uid"
	ApplyReleaseUid uint32 `protobuf:"varint,7,opt,name=apply_release_uid,json=applyReleaseUid,proto3" json:"apply_release_uid,omitempty" orm:"apply_release_uid"` // 申请解除关系的用户
	//@inject_tag: orm:"auto_release_time"
	AutoReleaseTime uint32 `protobuf:"varint,8,opt,name=auto_release_time,json=autoReleaseTime,proto3" json:"auto_release_time,omitempty" orm:"auto_release_time"` // 离婚自动解除关系时间
	//@inject_tag: orm:"update_time"
	UpdateTime uint32 `protobuf:"varint,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty" orm:"update_time"` //
	//@inject_tag: orm:"create_time"
	CreateTime uint32 `protobuf:"varint,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty" orm:"create_time"` //
	//@inject_tag: orm:"type"
	Type int32 `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty" orm:"type"` // 1:普通 2:单身贵族
	//@inject_tag: orm:"single_content"
	SingleContent string `protobuf:"bytes,12,opt,name=single_content,json=singleContent,proto3" json:"single_content,omitempty" orm:"single_content"` // 单身宣言
	//@inject_tag: orm:"img_bg"
	ImgBg string `protobuf:"bytes,13,opt,name=img_bg,json=imgBg,proto3" json:"img_bg,omitempty" orm:"img_bg"` // 主页背景图
	//@inject_tag: orm:"limit_msg"
	LimitMsg int32 `protobuf:"varint,14,opt,name=limit_msg,json=limitMsg,proto3" json:"limit_msg,omitempty" orm:"limit_msg"` // 1:仅好友 0:不限制
	//@inject_tag: orm:"degree"
	Degree uint32 `protobuf:"varint,15,opt,name=degree,proto3" json:"degree,omitempty" orm:"degree"` //
	//@inject_tag: orm:"app_ids"
	AppIds string `protobuf:"bytes,16,opt,name=app_ids,json=appIds,proto3" json:"app_ids,omitempty" orm:"app_ids"` // app_id
	//@inject_tag: orm:"degree_both"
	DegreeBoth uint32 `protobuf:"varint,17,opt,name=degree_both,json=degreeBoth,proto3" json:"degree_both,omitempty" orm:"degree_both"` // 两者桌游亲密度之和
	//@inject_tag: orm:"temp_img_bg"
	TempImgBg string `protobuf:"bytes,18,opt,name=temp_img_bg,json=tempImgBg,proto3" json:"temp_img_bg,omitempty" orm:"temp_img_bg"` // 待审核的背景图
	//@inject_tag: orm:"sweet"
	Sweet uint32 `protobuf:"varint,19,opt,name=sweet,proto3" json:"sweet,omitempty" orm:"sweet"` // 甜蜜值
}

func (x *EntityXsMarryRelation) Reset() {
	*x = EntityXsMarryRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_xianshi_entity_xs_marry_relation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsMarryRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsMarryRelation) ProtoMessage() {}

func (x *EntityXsMarryRelation) ProtoReflect() protoreflect.Message {
	mi := &file_db_xianshi_entity_xs_marry_relation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsMarryRelation.ProtoReflect.Descriptor instead.
func (*EntityXsMarryRelation) Descriptor() ([]byte, []int) {
	return file_db_xianshi_entity_xs_marry_relation_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsMarryRelation) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntityXsMarryRelation) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *EntityXsMarryRelation) GetToUid() int32 {
	if x != nil {
		return x.ToUid
	}
	return 0
}

func (x *EntityXsMarryRelation) GetRelation() uint32 {
	if x != nil {
		return x.Relation
	}
	return 0
}

func (x *EntityXsMarryRelation) GetCid() uint32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *EntityXsMarryRelation) GetHasWedding() uint32 {
	if x != nil {
		return x.HasWedding
	}
	return 0
}

func (x *EntityXsMarryRelation) GetApplyReleaseUid() uint32 {
	if x != nil {
		return x.ApplyReleaseUid
	}
	return 0
}

func (x *EntityXsMarryRelation) GetAutoReleaseTime() uint32 {
	if x != nil {
		return x.AutoReleaseTime
	}
	return 0
}

func (x *EntityXsMarryRelation) GetUpdateTime() uint32 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *EntityXsMarryRelation) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *EntityXsMarryRelation) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *EntityXsMarryRelation) GetSingleContent() string {
	if x != nil {
		return x.SingleContent
	}
	return ""
}

func (x *EntityXsMarryRelation) GetImgBg() string {
	if x != nil {
		return x.ImgBg
	}
	return ""
}

func (x *EntityXsMarryRelation) GetLimitMsg() int32 {
	if x != nil {
		return x.LimitMsg
	}
	return 0
}

func (x *EntityXsMarryRelation) GetDegree() uint32 {
	if x != nil {
		return x.Degree
	}
	return 0
}

func (x *EntityXsMarryRelation) GetAppIds() string {
	if x != nil {
		return x.AppIds
	}
	return ""
}

func (x *EntityXsMarryRelation) GetDegreeBoth() uint32 {
	if x != nil {
		return x.DegreeBoth
	}
	return 0
}

func (x *EntityXsMarryRelation) GetTempImgBg() string {
	if x != nil {
		return x.TempImgBg
	}
	return ""
}

func (x *EntityXsMarryRelation) GetSweet() uint32 {
	if x != nil {
		return x.Sweet
	}
	return 0
}

var File_db_xianshi_entity_xs_marry_relation_proto protoreflect.FileDescriptor

var file_db_xianshi_entity_xs_marry_relation_proto_rawDesc = []byte{
	0x0a, 0x29, 0x64, 0x62, 0x2f, 0x78, 0x69, 0x61, 0x6e, 0x73, 0x68, 0x69, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x64, 0x62, 0x2e,
	0x78, 0x69, 0x61, 0x6e, 0x73, 0x68, 0x69, 0x22, 0xb0, 0x04, 0x0a, 0x15, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x58, 0x73, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f,
	0x77, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68,
	0x61, 0x73, 0x57, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x6d, 0x67, 0x5f, 0x62, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x67, 0x42, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x6f,
	0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65,
	0x42, 0x6f, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x69, 0x6d, 0x67,
	0x5f, 0x62, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x49,
	0x6d, 0x67, 0x42, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x77, 0x65, 0x65, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x77, 0x65, 0x65, 0x74, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x61, 0x6f, 0x6c, 0x61, 0x2d,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x72, 0x62, 0x70, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x65, 0x6e, 0x5f, 0x70, 0x62, 0x2f, 0x64, 0x62, 0x2f, 0x78, 0x69, 0x61, 0x6e, 0x73, 0x68, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_db_xianshi_entity_xs_marry_relation_proto_rawDescOnce sync.Once
	file_db_xianshi_entity_xs_marry_relation_proto_rawDescData = file_db_xianshi_entity_xs_marry_relation_proto_rawDesc
)

func file_db_xianshi_entity_xs_marry_relation_proto_rawDescGZIP() []byte {
	file_db_xianshi_entity_xs_marry_relation_proto_rawDescOnce.Do(func() {
		file_db_xianshi_entity_xs_marry_relation_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_xianshi_entity_xs_marry_relation_proto_rawDescData)
	})
	return file_db_xianshi_entity_xs_marry_relation_proto_rawDescData
}

var file_db_xianshi_entity_xs_marry_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_db_xianshi_entity_xs_marry_relation_proto_goTypes = []interface{}{
	(*EntityXsMarryRelation)(nil), // 0: db.xianshi.EntityXsMarryRelation
}
var file_db_xianshi_entity_xs_marry_relation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_db_xianshi_entity_xs_marry_relation_proto_init() }
func file_db_xianshi_entity_xs_marry_relation_proto_init() {
	if File_db_xianshi_entity_xs_marry_relation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_db_xianshi_entity_xs_marry_relation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsMarryRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_xianshi_entity_xs_marry_relation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_xianshi_entity_xs_marry_relation_proto_goTypes,
		DependencyIndexes: file_db_xianshi_entity_xs_marry_relation_proto_depIdxs,
		MessageInfos:      file_db_xianshi_entity_xs_marry_relation_proto_msgTypes,
	}.Build()
	File_db_xianshi_entity_xs_marry_relation_proto = out.File
	file_db_xianshi_entity_xs_marry_relation_proto_rawDesc = nil
	file_db_xianshi_entity_xs_marry_relation_proto_goTypes = nil
	file_db_xianshi_entity_xs_marry_relation_proto_depIdxs = nil
}
