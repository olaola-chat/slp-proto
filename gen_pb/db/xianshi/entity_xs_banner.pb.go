// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.7
// source: entity_xs_banner.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityXsBanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"id,primary"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" orm:"id,primary"` //
	//@inject_tag: orm:"app_id"
	AppId int32 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" orm:"app_id"` //
	//@inject_tag: orm:"type"
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty" orm:"type"` // 默认web外部网页，app内部页
	//@inject_tag: orm:"stype"
	Stype string `protobuf:"bytes,4,opt,name=stype,proto3" json:"stype,omitempty" orm:"stype"` // app、pc
	//@inject_tag: orm:"position"
	Position string `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty" orm:"position"` // 位置
	//@inject_tag: orm:"title"
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty" orm:"title"` // 标题
	//@inject_tag: orm:"icon"
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty" orm:"icon"` // banner图
	//@inject_tag: orm:"url"
	Url string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty" orm:"url"` // app：页面名称, web:完整url
	//@inject_tag: orm:"data"
	Data string `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty" orm:"data"` // app：json序列化数据，web无用
	//@inject_tag: orm:"ordering"
	Ordering int32 `protobuf:"varint,10,opt,name=ordering,proto3" json:"ordering,omitempty" orm:"ordering"` // 排序，数值越大越靠前
	//@inject_tag: orm:"deleted"
	Deleted int32 `protobuf:"varint,11,opt,name=deleted,proto3" json:"deleted,omitempty" orm:"deleted"` // 是否已删除，1为删除
	//@inject_tag: orm:"begin_time"
	BeginTime int32 `protobuf:"varint,12,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty" orm:"begin_time"` // 开始时间
	//@inject_tag: orm:"end_time"
	EndTime int32 `protobuf:"varint,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty" orm:"end_time"` // 结束时间
	//@inject_tag: orm:"dateline"
	Dateline int32 `protobuf:"varint,14,opt,name=dateline,proto3" json:"dateline,omitempty" orm:"dateline"` // 创建时间
	//@inject_tag: orm:"role"
	Role int32 `protobuf:"varint,15,opt,name=role,proto3" json:"role,omitempty" orm:"role"` // 角色，0为所有人，1为大神可看，2为用户可看
	//@inject_tag: orm:"cid"
	Cid int32 `protobuf:"varint,16,opt,name=cid,proto3" json:"cid,omitempty" orm:"cid"` // 可看的分类id
	//@inject_tag: orm:"duration"
	Duration int32 `protobuf:"varint,17,opt,name=duration,proto3" json:"duration,omitempty" orm:"duration"` // 显示时长，app决定是否使用
	//@inject_tag: orm:"room_type"
	RoomType string `protobuf:"bytes,18,opt,name=room_type,json=roomType,proto3" json:"room_type,omitempty" orm:"room_type"` // position为chatroom时使用 房间广告类型 对应xs_chatroom中的types 多个用逗号分隔
	//@inject_tag: orm:"room_ids"
	RoomIds string `protobuf:"bytes,19,opt,name=room_ids,json=roomIds,proto3" json:"room_ids,omitempty" orm:"room_ids"` // 限定其可展示的房间,为空不限制,多个房间用逗号分隔
	//@inject_tag: orm:"settlement_channel"
	SettlementChannel string `protobuf:"bytes,20,opt,name=settlement_channel,json=settlementChannel,proto3" json:"settlement_channel,omitempty" orm:"settlement_channel"` // position为chatroom时使 用 对应xs_chatroom中的settlement_channel 多个用逗号分隔
	//@inject_tag: orm:"room_factory_type"
	RoomFactoryType string `protobuf:"bytes,21,opt,name=room_factory_type,json=roomFactoryType,proto3" json:"room_factory_type,omitempty" orm:"room_factory_type"` // position为chatroom时使用 对应xs_chatroom中的room_factory_type 多个用逗号分隔
	//@inject_tag: orm:"icon_type"
	IconType uint32 `protobuf:"varint,22,opt,name=icon_type,json=iconType,proto3" json:"icon_type,omitempty" orm:"icon_type"` // banner图片类型，0为图片，1为h5链接
	//@inject_tag: orm:"width"
	Width uint32 `protobuf:"varint,23,opt,name=width,proto3" json:"width,omitempty" orm:"width"` // banner图宽度
	//@inject_tag: orm:"height"
	Height uint32 `protobuf:"varint,24,opt,name=height,proto3" json:"height,omitempty" orm:"height"` // banner图高度
	//@inject_tag: orm:"show_close"
	ShowClose uint32 `protobuf:"varint,25,opt,name=show_close,json=showClose,proto3" json:"show_close,omitempty" orm:"show_close"` // 是否可关闭，0为不可关闭，1为可关闭
	//@inject_tag: orm:"sub_app"
	SubApp int32 `protobuf:"varint,26,opt,name=sub_app,json=subApp,proto3" json:"sub_app,omitempty" orm:"sub_app"` // 子APP: 默认0 没有, 1 嗨歌
	//@inject_tag: orm:"vip_level"
	VipLevel uint32 `protobuf:"varint,27,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty" orm:"vip_level"` // vip等级过滤，小于该等级不展示
	//@inject_tag: orm:"show_out_room"
	ShowOutRoom int32 `protobuf:"varint,28,opt,name=show_out_room,json=showOutRoom,proto3" json:"show_out_room,omitempty" orm:"show_out_room"` // 是否仅在房间外展示
	//@inject_tag: orm:"property"
	Property string `protobuf:"bytes,29,opt,name=property,proto3" json:"property,omitempty" orm:"property"` // position为chatroom时使用, 可选值同xs_chatroom.property
	//@inject_tag: orm:"channel_tag"
	ChannelTag string `protobuf:"bytes,30,opt,name=channel_tag,json=channelTag,proto3" json:"channel_tag,omitempty" orm:"channel_tag"` // position=title_top对应的渠道tag
	//@inject_tag: orm:"vip_level_max"
	VipLevelMax uint32 `protobuf:"varint,31,opt,name=vip_level_max,json=vipLevelMax,proto3" json:"vip_level_max,omitempty" orm:"vip_level_max"` // vip等级上限过滤，大于该等级不展示
	//@inject_tag: orm:"consume_min"
	ConsumeMin uint32 `protobuf:"varint,32,opt,name=consume_min,json=consumeMin,proto3" json:"consume_min,omitempty" orm:"consume_min"` // 历史消费统计下限(单位:分)
	//@inject_tag: orm:"consume_max"
	ConsumeMax uint32 `protobuf:"varint,33,opt,name=consume_max,json=consumeMax,proto3" json:"consume_max,omitempty" orm:"consume_max"` // 历史消息统计上限(单位:分)
	//@inject_tag: orm:"center_icon"
	CenterIcon string `protobuf:"bytes,34,opt,name=center_icon,json=centerIcon,proto3" json:"center_icon,omitempty" orm:"center_icon"` // 活动中心对应的大图标,横排时用
	//@inject_tag: orm:"activity_center_type"
	ActivityCenterType string `protobuf:"bytes,35,opt,name=activity_center_type,json=activityCenterType,proto3" json:"activity_center_type,omitempty" orm:"activity_center_type"` // 活动中心类型,逗号分割 1:我的 2:活动 3:充值 4:节目 5:公告
	//@inject_tag: orm:"show_in_center"
	ShowInCenter uint32 `protobuf:"varint,36,opt,name=show_in_center,json=showInCenter,proto3" json:"show_in_center,omitempty" orm:"show_in_center"` // 0:既在对应position展示也在center展示, 1:只在活动中心展示
	//@inject_tag: orm:"whitelist_id"
	WhitelistId uint32 `protobuf:"varint,37,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty" orm:"whitelist_id"` // 是否使用白名单 0:不使用用户白名单 >0 表示白名单id
}

func (x *EntityXsBanner) Reset() {
	*x = EntityXsBanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_xs_banner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsBanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsBanner) ProtoMessage() {}

func (x *EntityXsBanner) ProtoReflect() protoreflect.Message {
	mi := &file_entity_xs_banner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsBanner.ProtoReflect.Descriptor instead.
func (*EntityXsBanner) Descriptor() ([]byte, []int) {
	return file_entity_xs_banner_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsBanner) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntityXsBanner) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *EntityXsBanner) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EntityXsBanner) GetStype() string {
	if x != nil {
		return x.Stype
	}
	return ""
}

func (x *EntityXsBanner) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *EntityXsBanner) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EntityXsBanner) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *EntityXsBanner) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EntityXsBanner) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *EntityXsBanner) GetOrdering() int32 {
	if x != nil {
		return x.Ordering
	}
	return 0
}

func (x *EntityXsBanner) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *EntityXsBanner) GetBeginTime() int32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *EntityXsBanner) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *EntityXsBanner) GetDateline() int32 {
	if x != nil {
		return x.Dateline
	}
	return 0
}

func (x *EntityXsBanner) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *EntityXsBanner) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *EntityXsBanner) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *EntityXsBanner) GetRoomType() string {
	if x != nil {
		return x.RoomType
	}
	return ""
}

func (x *EntityXsBanner) GetRoomIds() string {
	if x != nil {
		return x.RoomIds
	}
	return ""
}

func (x *EntityXsBanner) GetSettlementChannel() string {
	if x != nil {
		return x.SettlementChannel
	}
	return ""
}

func (x *EntityXsBanner) GetRoomFactoryType() string {
	if x != nil {
		return x.RoomFactoryType
	}
	return ""
}

func (x *EntityXsBanner) GetIconType() uint32 {
	if x != nil {
		return x.IconType
	}
	return 0
}

func (x *EntityXsBanner) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *EntityXsBanner) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *EntityXsBanner) GetShowClose() uint32 {
	if x != nil {
		return x.ShowClose
	}
	return 0
}

func (x *EntityXsBanner) GetSubApp() int32 {
	if x != nil {
		return x.SubApp
	}
	return 0
}

func (x *EntityXsBanner) GetVipLevel() uint32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *EntityXsBanner) GetShowOutRoom() int32 {
	if x != nil {
		return x.ShowOutRoom
	}
	return 0
}

func (x *EntityXsBanner) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *EntityXsBanner) GetChannelTag() string {
	if x != nil {
		return x.ChannelTag
	}
	return ""
}

func (x *EntityXsBanner) GetVipLevelMax() uint32 {
	if x != nil {
		return x.VipLevelMax
	}
	return 0
}

func (x *EntityXsBanner) GetConsumeMin() uint32 {
	if x != nil {
		return x.ConsumeMin
	}
	return 0
}

func (x *EntityXsBanner) GetConsumeMax() uint32 {
	if x != nil {
		return x.ConsumeMax
	}
	return 0
}

func (x *EntityXsBanner) GetCenterIcon() string {
	if x != nil {
		return x.CenterIcon
	}
	return ""
}

func (x *EntityXsBanner) GetActivityCenterType() string {
	if x != nil {
		return x.ActivityCenterType
	}
	return ""
}

func (x *EntityXsBanner) GetShowInCenter() uint32 {
	if x != nil {
		return x.ShowInCenter
	}
	return 0
}

func (x *EntityXsBanner) GetWhitelistId() uint32 {
	if x != nil {
		return x.WhitelistId
	}
	return 0
}

var File_entity_xs_banner_proto protoreflect.FileDescriptor

var file_entity_xs_banner_proto_rawDesc = []byte{
	0x0a, 0x16, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xb1, 0x08, 0x0a,
	0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x58, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x6f,
	0x6f, 0x6d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x77, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f, 0x61,
	0x70, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x75, 0x62, 0x41, 0x70, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x4f, 0x75, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x12, 0x22,
	0x0a, 0x0d, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d,
	0x61, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x6d, 0x69,
	0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x4d, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x6d,
	0x61, 0x78, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x4d, 0x61, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x69, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x73, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_xs_banner_proto_rawDescOnce sync.Once
	file_entity_xs_banner_proto_rawDescData = file_entity_xs_banner_proto_rawDesc
)

func file_entity_xs_banner_proto_rawDescGZIP() []byte {
	file_entity_xs_banner_proto_rawDescOnce.Do(func() {
		file_entity_xs_banner_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_xs_banner_proto_rawDescData)
	})
	return file_entity_xs_banner_proto_rawDescData
}

var file_entity_xs_banner_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entity_xs_banner_proto_goTypes = []interface{}{
	(*EntityXsBanner)(nil), // 0: pb.EntityXsBanner
}
var file_entity_xs_banner_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entity_xs_banner_proto_init() }
func file_entity_xs_banner_proto_init() {
	if File_entity_xs_banner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_xs_banner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsBanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_xs_banner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_xs_banner_proto_goTypes,
		DependencyIndexes: file_entity_xs_banner_proto_depIdxs,
		MessageInfos:      file_entity_xs_banner_proto_msgTypes,
	}.Build()
	File_entity_xs_banner_proto = out.File
	file_entity_xs_banner_proto_rawDesc = nil
	file_entity_xs_banner_proto_goTypes = nil
	file_entity_xs_banner_proto_depIdxs = nil
}
