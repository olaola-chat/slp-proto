// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// 重要! 增加数据库字段，只能向后增加，否则不能使用工具生成proto
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.9.1
// source: entity_xs_live_pk.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityXsLivePk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: orm:"id,primary"
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" orm:"id,primary"` //
	//@inject_tag: orm:"main_uid"
	MainUid uint32 `protobuf:"varint,2,opt,name=main_uid,json=mainUid,proto3" json:"main_uid,omitempty" orm:"main_uid"` // 主方uid
	//@inject_tag: orm:"main_origin"
	MainOrigin uint32 `protobuf:"varint,3,opt,name=main_origin,json=mainOrigin,proto3" json:"main_origin,omitempty" orm:"main_origin"` // 主方uid
	//@inject_tag: orm:"main_rid,unique"
	MainRid uint32 `protobuf:"varint,4,opt,name=main_rid,json=mainRid,proto3" json:"main_rid,omitempty" orm:"main_rid,unique"` // 主方rid
	//@inject_tag: orm:"main_mic"
	MainMic int32 `protobuf:"varint,5,opt,name=main_mic,json=mainMic,proto3" json:"main_mic,omitempty" orm:"main_mic"` // 连麦开关 1 开启 2 关闭
	//@inject_tag: orm:"compete_uid"
	CompeteUid uint32 `protobuf:"varint,6,opt,name=compete_uid,json=competeUid,proto3" json:"compete_uid,omitempty" orm:"compete_uid"` // 竞争uid
	//@inject_tag: orm:"compete_origin"
	CompeteOrigin uint32 `protobuf:"varint,7,opt,name=compete_origin,json=competeOrigin,proto3" json:"compete_origin,omitempty" orm:"compete_origin"` // 竞争uid
	//@inject_tag: orm:"compete_rid"
	CompeteRid uint32 `protobuf:"varint,8,opt,name=compete_rid,json=competeRid,proto3" json:"compete_rid,omitempty" orm:"compete_rid"` // 竞争rid
	//@inject_tag: orm:"compete_mic"
	CompeteMic int32 `protobuf:"varint,9,opt,name=compete_mic,json=competeMic,proto3" json:"compete_mic,omitempty" orm:"compete_mic"` // 连麦开关 1 开启 2 关闭
	//@inject_tag: orm:"punish_id"
	PunishId int32 `protobuf:"varint,10,opt,name=punish_id,json=punishId,proto3" json:"punish_id,omitempty" orm:"punish_id"` // 惩罚id, 自定义为 -1
	//@inject_tag: orm:"pk_time"
	PkTime int32 `protobuf:"varint,11,opt,name=pk_time,json=pkTime,proto3" json:"pk_time,omitempty" orm:"pk_time"` // 发起pk时长
	//@inject_tag: orm:"pk_win"
	PkWin int32 `protobuf:"varint,12,opt,name=pk_win,json=pkWin,proto3" json:"pk_win,omitempty" orm:"pk_win"` //
	//@inject_tag: orm:"state"
	State string `protobuf:"bytes,13,opt,name=state,proto3" json:"state,omitempty" orm:"state"` // 当前状态
	//@inject_tag: orm:"version"
	Version int32 `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty" orm:"version"` //
	//@inject_tag: orm:"create_time"
	CreateTime uint32 `protobuf:"varint,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty" orm:"create_time"` //
}

func (x *EntityXsLivePk) Reset() {
	*x = EntityXsLivePk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_xs_live_pk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityXsLivePk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityXsLivePk) ProtoMessage() {}

func (x *EntityXsLivePk) ProtoReflect() protoreflect.Message {
	mi := &file_entity_xs_live_pk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityXsLivePk.ProtoReflect.Descriptor instead.
func (*EntityXsLivePk) Descriptor() ([]byte, []int) {
	return file_entity_xs_live_pk_proto_rawDescGZIP(), []int{0}
}

func (x *EntityXsLivePk) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntityXsLivePk) GetMainUid() uint32 {
	if x != nil {
		return x.MainUid
	}
	return 0
}

func (x *EntityXsLivePk) GetMainOrigin() uint32 {
	if x != nil {
		return x.MainOrigin
	}
	return 0
}

func (x *EntityXsLivePk) GetMainRid() uint32 {
	if x != nil {
		return x.MainRid
	}
	return 0
}

func (x *EntityXsLivePk) GetMainMic() int32 {
	if x != nil {
		return x.MainMic
	}
	return 0
}

func (x *EntityXsLivePk) GetCompeteUid() uint32 {
	if x != nil {
		return x.CompeteUid
	}
	return 0
}

func (x *EntityXsLivePk) GetCompeteOrigin() uint32 {
	if x != nil {
		return x.CompeteOrigin
	}
	return 0
}

func (x *EntityXsLivePk) GetCompeteRid() uint32 {
	if x != nil {
		return x.CompeteRid
	}
	return 0
}

func (x *EntityXsLivePk) GetCompeteMic() int32 {
	if x != nil {
		return x.CompeteMic
	}
	return 0
}

func (x *EntityXsLivePk) GetPunishId() int32 {
	if x != nil {
		return x.PunishId
	}
	return 0
}

func (x *EntityXsLivePk) GetPkTime() int32 {
	if x != nil {
		return x.PkTime
	}
	return 0
}

func (x *EntityXsLivePk) GetPkWin() int32 {
	if x != nil {
		return x.PkWin
	}
	return 0
}

func (x *EntityXsLivePk) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *EntityXsLivePk) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EntityXsLivePk) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

var File_entity_xs_live_pk_proto protoreflect.FileDescriptor

var file_entity_xs_live_pk_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x78, 0x73, 0x5f, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x70, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xba, 0x03,
	0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x58, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x6d, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6e, 0x4d,
	0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x5f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x52, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6b, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6b, 0x5f, 0x77, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x6b, 0x57, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_xs_live_pk_proto_rawDescOnce sync.Once
	file_entity_xs_live_pk_proto_rawDescData = file_entity_xs_live_pk_proto_rawDesc
)

func file_entity_xs_live_pk_proto_rawDescGZIP() []byte {
	file_entity_xs_live_pk_proto_rawDescOnce.Do(func() {
		file_entity_xs_live_pk_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_xs_live_pk_proto_rawDescData)
	})
	return file_entity_xs_live_pk_proto_rawDescData
}

var file_entity_xs_live_pk_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_entity_xs_live_pk_proto_goTypes = []interface{}{
	(*EntityXsLivePk)(nil), // 0: pb.EntityXsLivePk
}
var file_entity_xs_live_pk_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entity_xs_live_pk_proto_init() }
func file_entity_xs_live_pk_proto_init() {
	if File_entity_xs_live_pk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_xs_live_pk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityXsLivePk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_xs_live_pk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_xs_live_pk_proto_goTypes,
		DependencyIndexes: file_entity_xs_live_pk_proto_depIdxs,
		MessageInfos:      file_entity_xs_live_pk_proto_msgTypes,
	}.Build()
	File_entity_xs_live_pk_proto = out.File
	file_entity_xs_live_pk_proto_rawDesc = nil
	file_entity_xs_live_pk_proto_goTypes = nil
	file_entity_xs_live_pk_proto_depIdxs = nil
}
